{"id":"8ec51fcca4cc8447f4c7a7953446fba6","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"contracts/common/LibConstants.sol":{"content":"//SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.17;\n\n/**\n * Constant values used elsewhere\n */\nlibrary LibConstants {\n\n    //gas that was used just to load this contract, etc.\n    uint constant PRE_OP_GAS = 40_000;\n    \n    //final computation needed to compute and transfer gas fees\n    uint constant POST_OP_GAS = 80_000;\n    \n\n    uint16 constant HOUR = 3600;\n    uint24 constant DAY = 86400;\n\n    //storage and calldata requirements significantly higher when using more than \n    //6decs for USD price precision\n    uint constant USD_PRECISION = 1e6;\n\n    //1_000_000 as a 6-decimal number\n    uint constant MM_VOLUME = 1e12;\n\n    //when doing asset-related math, increase precision accordingly.\n    uint constant PRICE_PRECISION = 1e30;\n\n    //========================================================================\n    // Assignable roles for role-managed contracts\n    //========================================================================\n\n    //allowed to add relays and other role managers\n    string public constant ROLE_MGR = \"ROLE_MANAGER\";\n\n    //allowed to submit execution requests\n    string public constant RELAY = \"RELAY\";\n\n}"},"contracts/common/TokenTypes.sol":{"content":"//SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.17;\n\n\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\nlibrary TokenTypes {\n\n    /**\n     * Wrapper structure for token and an amount\n     */\n    struct TokenAmount {\n        uint112 amount;\n        IERC20 token;\n    }\n    \n}"},"contracts/token/IDXBL.sol":{"content":"//SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.17;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\n\ninterface IDXBL is IERC20, IERC20Metadata {\n    struct FeeRequest {\n        bool referred;\n        address trader;\n        uint amt;\n        uint dxblBalance;\n        uint16 stdBpsRate;\n        uint16 minBpsRate;\n    }\n\n    function minter() external view returns (address);\n    function discountPerTokenBps() external view returns(uint32);\n\n    function mint(address acct, uint amt) external;\n    function burn(address holder, uint amt) external;\n    function setDiscountRate(uint32 discount) external;\n    function setNewMinter(address minter) external;\n    function computeDiscountedFee(FeeRequest calldata request) external view returns(uint);\n}"},"contracts/vault/baseContracts/ComputationalView.sol":{"content":"//SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.17;\n\nimport \"../VaultStorage.sol\";\nimport \"../IComputationalView.sol\";\nimport \"../../common/LibConstants.sol\";\n\ncontract ComputationalView is IComputationalView {\n\n    function convertGasToFeeToken(address feeToken, uint gasCost) public view returns (uint){\n        VaultStorage.VaultData storage rs = VaultStorage.load();\n\n        if(feeToken == rs.wrappedNativeToken) {\n            //already in native units\n            return gasCost;\n        }\n        uint np = _getPrice(rs.allowedFeeTokens[rs.wrappedNativeToken]);\n        uint ftp = _getPrice(rs.allowedFeeTokens[feeToken]);\n        uint ftpNative = (np*LibConstants.PRICE_PRECISION)/ftp;\n        uint ftpUnits = (ftpNative * gasCost) / LibConstants.PRICE_PRECISION;\n        return (ftpUnits * (10**rs.tokenDecimals[feeToken])) / 1e18; //native is always 18decs\n    }\n\n    function estimateRedemption(address rewardToken, uint dxblAmount) public view returns(uint){\n        VaultStorage.VaultData storage rs =VaultStorage.load();\n        uint nav = currentNavUSD();\n         //convert nav to price-precision units\n        nav = (nav * LibConstants.PRICE_PRECISION) / LibConstants.USD_PRECISION;\n        \n        //we need to know the value of each token in rewardToken units\n        //start by getting the USD price of reward token\n        uint ftUSD = feeTokenPriceUSD(rewardToken);\n\n        uint8 ftDecs = rs.tokenDecimals[rewardToken];\n\n        //Divide nav of each token by the price of each reward token expanding \n        //precision to include the fee-token decimals\n        uint ftUnitPrice = (nav*(10**ftDecs))/ftUSD;\n\n        //compute how much rewardToken to withdraw based on unit price of each DXBL\n        //in fee-token units. Have to remove the dexible token precision (18)\n        return (dxblAmount * ftUnitPrice)/1e18;\n    }\n\n    function feeTokenPriceUSD(address feeToken) public view returns (uint){\n        VaultStorage.VaultData storage rs = VaultStorage.load();\n        VaultStorage.PriceFeed storage pf = rs.allowedFeeTokens[feeToken];\n        require(address(pf.feed) != address(0), \"Unsupported fee token\");\n        return _getPrice(pf);\n    }\n\n    function computeVolumeUSD(address feeToken, uint amount) public view returns(uint volumeUSD) {\n        VaultStorage.VaultData storage fs = VaultStorage.load();\n        VaultStorage.PriceFeed storage pf = fs.allowedFeeTokens[feeToken];\n\n        //price is in USD with 30decimal precision\n        uint ftp = _getPrice(pf);\n\n        (uint v,) = _toUSD(fs, IERC20(feeToken), ftp, amount);\n        volumeUSD = v;\n    }\n\n    function aumUSD() public view returns(uint usd){\n        VaultStorage.VaultData storage fs = VaultStorage.load();\n\n        //for each fee token allowed in the vault\n        //move to memory so we're not accessing storage in loop\n        IERC20[] memory feeTokens = fs.feeTokens;\n        for(uint i=0;i<feeTokens.length;++i) {\n            IERC20 ft = IERC20(feeTokens[i]);\n            VaultStorage.PriceFeed storage pf = fs.allowedFeeTokens[address(ft)];\n            \n            //make sure fee token still active\n            //get the price of the asset\n            uint price = _getPrice(pf);\n            //use it to compute USD value\n            (uint _usd,) = _toUSD(fs, ft, price, 0);\n            usd += _usd;\n        }\n    }\n\n    function currentNavUSD() public view returns(uint nav){\n        //console.log(\"--------------- START COMPUTE NAV ---------------------\");\n        VaultStorage.VaultData storage rs = VaultStorage.load();\n\n        //get the total supply of dxbl tokens\n        uint supply = rs.dxbl.totalSupply();\n\n        //get the total USD under management by this vault\n        uint aum = aumUSD();\n\n        //if either is 0, the nav is 0\n        if(supply == 0 || aum == 0) {\n            return 0;\n        }\n         \n        //supply is 18decs while aum and nav are expressed in USD units\n        nav = (aum*1e18) / supply;\n      //  console.log(\"--------------- END COMPUTE NAV ---------------------\");\n    }\n\n    function assets() public view returns (IComputationalView.AssetInfo[] memory tokens){\n        /**\n         * RISK: Must limit the fee token count to avoid miner not allowing call due to high\n         * gas usage\n         */\n        VaultStorage.VaultData storage fs = VaultStorage.load();\n\n        //create in-memory structure only for active fee tokens\n        tokens = new IComputationalView.AssetInfo[](fs.feeTokens.length);\n\n        //count offset of return tokens\n        uint cnt = 0;\n        \n        //copy fee tokens in memory to we're not accessing storage in loop\n        IERC20[] memory feeTokens = fs.feeTokens;\n        for(uint i=0;i<feeTokens.length;++i) {\n            IERC20 ft = feeTokens[i];\n            VaultStorage.PriceFeed storage pf = fs.allowedFeeTokens[address(ft)];\n\n            //lookup USD price of asset in 30-dec units\n            uint price = _getPrice(pf);\n\n            //convert to total usd-precision USD value\n            (uint usd, uint bal) = _toUSD(fs, ft, price, 0);\n\n            tokens[cnt] = IComputationalView.AssetInfo({\n                token: address(ft),\n                balance: bal,\n                usdValue: usd,\n                usdPrice: (price*LibConstants.USD_PRECISION) / LibConstants.PRICE_PRECISION\n            });\n            ++cnt;\n        }\n    }\n\n    function currentMintRateUSD() public view returns (uint rate){\n        /**\n        * formula for mint rate:\n        * startingRate+(startingRate*(ratePerMM*MM_vol))\n        */\n        VaultStorage.VaultData storage rs = VaultStorage.load();\n\n        uint16 normalizedMMInVolume = uint16(rs.currentVolume / LibConstants.MM_VOLUME);\n\n        //mint rate is a bucket with min/max volume thresholds and establishes how many \n        //percentage points per million to apply to the starting mint rate \n        uint percIncrease = rs.currentMintRate.rate * normalizedMMInVolume;\n\n        //mint rate percentage is expressed in 18-dec units so have to divide that out before adding to base\n        rate = rs.baseMintThreshold + ((rs.baseMintThreshold * percIncrease)/1e18);\n    }\n\n\n    function _getPrice(VaultStorage.PriceFeed storage pf) internal view returns (uint) {\n        //get latest price\n        (   ,\n            int256 answer,\n            ,\n            uint256 updatedAt,\n        ) = pf.feed.latestRoundData();\n\n        //make sure price valid\n        require(answer > 0, \"No price data available\");\n\n        //10min buffer around 24hr window for chainlink feed to update prices\n        uint stale = block.timestamp - LibConstants.DAY - 600;\n        require(updatedAt > stale, \"Stale price data\");\n        return (uint256(answer) * LibConstants.PRICE_PRECISION) / (10**pf.decimals);\n    }\n\n    /**\n     * Convert an assets total balance to USD\n     */\n    function _toUSD(VaultStorage.VaultData storage fs, IERC20 token, uint price, uint amt) internal view returns(uint usd, uint bal) {\n        bal = amt;\n        if(bal == 0) {\n            bal = token.balanceOf(address(this));\n        }\n        \n        //compute usd in raw form (fee-token units + price-precision units) but account for\n        //USD precision\n        usd = (bal * price)*LibConstants.USD_PRECISION;\n\n        //then divide out the fee token and price-precision units\n        usd /= (10**fs.tokenDecimals[address(token)]*LibConstants.PRICE_PRECISION);\n        \n    }\n}"},"contracts/vault/baseContracts/RewardHandler.sol":{"content":"//SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.17;\n\nimport \"../VaultStorage.sol\";\nimport \"../IComputationalView.sol\";\nimport \"../../common/LibConstants.sol\";\nimport \"./ComputationalView.sol\";\nimport \"../IRewardHandler.sol\";\n\nabstract contract RewardHandler is IRewardHandler {\n\n    modifier onlyDexible() {\n        VaultStorage.VaultData storage vs = VaultStorage.load();\n        require(msg.sender == vs.dexible, \"Unauthorized\");\n        _;\n    }\n\n    /**\n     * Modification functions\n     */\n    function rewardTrader(address trader, address feeToken, uint amount) external override onlyDexible {\n        VaultStorage.VaultData storage rs = VaultStorage.load();\n        uint volumeUSD = IComputationalView(address(this)).computeVolumeUSD(feeToken, amount);\n\n        //determine the mint rate\n        uint rate = IComputationalView(address(this)).currentMintRateUSD();\n\n        //make the volume adjustment to the pool\n        _adjustVolume(volumeUSD);\n\n        //get the number of DXBL per $1 of volume\n        uint tokens = (volumeUSD*1e18) / rate;\n\n        //we are minter on token, so request to mint tokens\n        rs.dxbl.mint(trader, tokens);\n    }\n\n\n    function _adjustVolume(uint volumeUSD) internal {\n        VaultStorage.VaultData storage rs = VaultStorage.load();\n\n        //get the current hour\n        uint lastTrade = rs.lastTradeTimestamp;\n\n        //record when we last adjusted volume\n        rs.lastTradeTimestamp = block.timestamp;\n        uint newVolume = volumeUSD;\n        if(lastTrade > 0 && lastTrade <= (block.timestamp - LibConstants.DAY)) {\n            delete rs.hourlyVolume;\n        } else {\n            //otherwise, since we never rolled over 24hrs, just delete the volume\n            //that accrued 24hrs ago\n            uint hr = (block.timestamp % LibConstants.DAY) / LibConstants.HOUR;\n            uint slot = 0;\n            //remove guard for some efficiency gain\n            unchecked{slot = (hr+1)%24; }\n\n            //get the volume bin 24hrs ago by wrapping around to next hour in 24hr period\n            uint yesterdayTotal = rs.hourlyVolume[slot];\n\n            //if we get called multiple times in the block, the same hourly total\n            //would be deducted multiple times. So we reset it here so that we're \n            //not deducting it multiple times in the hour. Only the first deduction\n            //will be applied and 0'd out.\n            rs.hourlyVolume[slot] = 0;\n\n            //add new volume to current hour bin\n            rs.hourlyVolume[hr] += volumeUSD;\n\n            //manipulate volume in memory not storage\n            newVolume = rs.currentVolume + volumeUSD;\n\n            //Remove volume from 24hr's ago if there was anything\n            if(yesterdayTotal > 0) {\n                //note that because currentVolume includes yesterday's, then this subtraction \n                //is safe.\n                newVolume -= yesterdayTotal;\n            } \n        }\n        rs.currentVolume = newVolume;\n        _adjustMintRate(rs, uint16(newVolume / LibConstants.MM_VOLUME));\n    }\n\n    /**\n     * Make an adjustment to the mint rate if the 24hr volume falls into a new rate bucket\n     */\n    function _adjustMintRate(VaultStorage.VaultData storage rs, uint16 normalizedMMInVolume) internal {\n        \n        VaultStorage.MintRateRange memory mr = rs.currentMintRate;\n        //if the current rate bucket's max is less than current normalized volume\n        if(mr.maxMMVolume <= normalizedMMInVolume) {\n            //we must have increased volume so we have to adjust the rate up\n            _adjustMintRateUp(rs, normalizedMMInVolume);\n            //otherwise if the current rate's min is more than the current volume\n        } else if(mr.minMMVolume >= normalizedMMInVolume) {\n            //it means we're trading less volume than the current rate, so we need\n            //to adjust it down\n            _adjustMintRateDown(rs, normalizedMMInVolume);\n        } //else rate stays the same\n    }\n\n    /**\n     * Increase the minimum volume required to mint a single token\n     */\n    function _adjustMintRateUp(VaultStorage.VaultData storage rs, uint16 mm) internal {\n        VaultStorage.MintRateRange memory mr = rs.currentMintRate;\n        while(!_rateInRange(mr,mm)) {\n            //move to the next higher rate if one is configured, otherwise stay where we are\n            VaultStorage.MintRateRange storage next = rs.mintRateRanges[mr.index + 1];\n            if(next.rate == 0) {\n                //reached highest rate, that will be the capped rate \n                break;\n            }\n            mr = next;\n        }\n\n        //don't waste gas storing if not changed\n        if(rs.currentMintRate.rate != mr.rate) {\n            rs.currentMintRate = mr;\n        }\n        \n    }\n    \n    /**\n     * Decrease minimum volume required to mint a DXBL token\n     */\n    function _adjustMintRateDown(VaultStorage.VaultData storage rs, uint16 mm) internal {\n        VaultStorage.MintRateRange memory mr = rs.currentMintRate;\n        while(!_rateInRange(mr,mm)) {\n            if(mr.index > 0) {\n                //move to the next higher rate if one is configured, otherwise stay where we are\n                VaultStorage.MintRateRange storage next = rs.mintRateRanges[mr.index - 1];\n                mr = next;\n            } else {\n                //we go to the lowest rate then\n                break;\n            }\n        }\n        rs.currentMintRate = mr;\n    }\n\n    //test to see if volume is range for a rate bucket\n    function _rateInRange(VaultStorage.MintRateRange memory range, uint16 mm) internal pure returns (bool) {\n        return range.minMMVolume <= mm && mm < range.maxMMVolume;\n    }\n    \n}"},"contracts/vault/baseContracts/StorageView.sol":{"content":"//SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.17;\n\nimport \"../VaultStorage.sol\";\nimport \"../IStorageView.sol\";\n\ncontract StorageView is IStorageView {\n\n    function discountBps() external view returns(uint32) {\n        return VaultStorage.load().dxbl.discountPerTokenBps();\n    }\n\n    function dailyVolumeUSD() external view returns(uint) {\n        return VaultStorage.load().currentVolume;\n    }\n\n    function paused() external view returns (bool) {\n        return VaultStorage.load().paused;\n    }\n\n    function adminMultiSig() external view returns (address) {\n        return VaultStorage.load().adminMultiSig;\n    }\n\n    function dxbl() external view returns (address) {\n        return address(VaultStorage.load().dxbl);\n    }\n\n    function dexible() external view returns (address) {\n        return VaultStorage.load().dexible;\n    }\n\n    function wrappedNativeToken() external view returns (address) {\n        return VaultStorage.load().wrappedNativeToken;\n    }\n\n    function timelockSeconds() external view returns (uint32) {\n        return VaultStorage.load().timelockSeconds;\n    }\n\n    function baseMintThreshold() external view returns (uint) {\n        return VaultStorage.load().baseMintThreshold;\n    }\n}"},"contracts/vault/baseContracts/V1Migration.sol":{"content":"//SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.17;\n\nimport \"../V1Migrateable.sol\";\n\nabstract contract V1Migration is V1Migrateable {\n\n    /**\n     * Migrate the state of the vault to a new version. This will transfer all current state\n     * and transfer fee token balances as well. Note that \n     */\n    function migrateV1(V1MigrationTarget target) external {\n        \n    }\n}"},"contracts/vault/CommunityVault.sol":{"content":"//SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.17;\n\nimport \"./ICommunityVault.sol\";\nimport \"./baseContracts/StorageView.sol\";\nimport \"../token/IDXBL.sol\";\nimport \"./VaultStorage.sol\";\nimport \"./baseContracts/V1Migration.sol\";\nimport \"./baseContracts/RewardHandler.sol\";\nimport \"./baseContracts/ComputationalView.sol\";\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n\n/**\n * The community vault controls the supply of DXBL tokens. It has minting authority on the \n * token contract so it can request mints/burns on behalf of traders. The Dexible contract\n * is the only address able to request DXBL rewards for trades being made through the protocol.\n *\n * This contract is not upgradeable or modifiable. However, if an upgrade/fork is necessary,\n * the contract can be paused and migrated to a new version after a grace period and only \n * initiated from the admin multi-sig assigned to the vault.\n */\n\ncontract CommunityVault is StorageView, RewardHandler, ComputationalView, V1Migration, ICommunityVault {\n    using SafeERC20 for IERC20;\n\n    modifier onlyAdmin() {\n        VaultStorage.VaultData storage vs = VaultStorage.load();\n        require(msg.sender == vs.adminMultiSig, \"Unauthorized\");\n        _;\n    }\n\n    function isFeeTokenAllowed(address token) external view returns (bool){\n        VaultStorage.VaultData storage vs = VaultStorage.load();\n        return address(vs.allowedFeeTokens[token].feed) != address(0);\n    }\n\n    function redeemDXBL(address rewardToken, uint dxblAmount, uint minOutAmount) public {\n        VaultStorage.VaultData storage rs = VaultStorage.load();\n        //get the trader's balance to make sure they actually have tokens to burn\n        uint traderBal = rs.dxbl.balanceOf(msg.sender);\n        require(traderBal >= dxblAmount, \"Insufficient DXBL balance to redeem\");\n        \n        //estimate how much we could withdraw if there is sufficient reward tokens available\n        uint wdAmt = estimateRedemption(rewardToken, dxblAmount);\n\n        /**\n        * NOTE: is it likely that there will be dust remaining for the asset due to USD\n        * rounding/precision.\n        *\n        * It will be redeemable once the balance acrues enough for the\n        * next burn request\n        */\n\n        //how much does the vault own?\n        uint vaultBal = IERC20(rewardToken).balanceOf(address(this));\n\n        //do we have enough to cover the withdraw?\n        if(wdAmt > vaultBal) {\n            //vault doesn't have sufficient funds to cover. See if meets trader's \n            //min expectations\n            if(vaultBal >= minOutAmount) {\n                wdAmt = vaultBal;\n            } else {\n                revert(\"Insufficient asset balance to produce expected withdraw amount\");\n            }\n        }\n        //if all good, transfer withdraw amount to caller\n        IERC20(rewardToken).safeTransfer(msg.sender, wdAmt);\n\n        //burn the tokens\n        rs.dxbl.burn(msg.sender, dxblAmount);\n        emit DXBLRedeemed(msg.sender, dxblAmount, rewardToken, wdAmt);\n    }\n\n    /**\n     * Used in emergency situations when we need to hault operations.\n     */\n    function pause() public onlyAdmin {\n        VaultStorage.VaultData storage vs = VaultStorage.load();\n        vs.paused = true;\n    }\n\n    function resume() public onlyAdmin {\n        VaultStorage.VaultData storage vs = VaultStorage.load();\n        vs.paused = false;\n    }\n\n\n    /*\n    \n    fallback() external {\n        \n        bytes4 sel = _getSelector();\n        address addr;\n        if(sel == IStorageView.discountBps.selector ||\n           sel == IStorageView.dailyVolumeUSD.selector ||\n           sel == IStorageView.paused.selector ||\n           sel == IStorageView.adminMultiSig.selector ||\n           sel == IStorageView.dxbl.selector ||\n           sel == IStorageView.dexible.selector ||\n           sel == IStorageView.wrappedNativeToken.selector ||\n           sel == IStorageView.timelockSeconds.selector ||\n           sel == IStorageView.baseMintThreshold.selector\n        ) {\n            addr = address(storageView);\n        }\n\n        assembly {\n            //and call it\n            calldatacopy(0x0, 0x0, calldatasize())\n            let success := delegatecall(sub(gas(), 10000), addr, 0x0, calldatasize(), 0, 0)\n            let retSz := returndatasize()\n            returndatacopy(0, 0, retSz)\n            switch success\n                case 0 {\n                    revert(0, retSz)\n                }\n                default {\n                    return(0, retSz)\n                }\n        }\n    }\n\n    function _getSelector() internal pure returns (bytes4 sel) {\n        assembly {\n            let inputData := mload(0x40)\n            sel := and(shr(inputData, 224), 0xffffffff)\n        }\n    }\n    */\n}"},"contracts/vault/ICommunityVault.sol":{"content":"//SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.17;\n\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"./ICommunityVaultEvents.sol\";\nimport \"./V1Migrateable.sol\";\nimport \"./IStorageView.sol\";\nimport \"./IComputationalView.sol\";\nimport \"./IRewardHandler.sol\";\n\ninterface ICommunityVault is IStorageView, IComputationalView, ICommunityVaultEvents, V1Migrateable {\n\n\n    function isFeeTokenAllowed(address tokens) external view returns (bool);\n    \n    function redeemDXBL(address feeToken, uint dxblAmount, uint minOutAmount) external;\n    function pause() external;\n    function resume() external;\n}"},"contracts/vault/ICommunityVaultEvents.sol":{"content":"//SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.17;\n\ninterface ICommunityVaultEvents {\n\n    event ProposedDiscountChange(uint32 oldRate, uint32 newRate, uint allowedAfterTime);\n    event DiscountChanged(uint32 newRate);\n\n    event ProposedBpsChange(uint32 oldStdRate, uint32 newStdRate, uint32 oldMinRate, uint32 newMinRate, uint allowedAfterTime);\n    event BpsChanged(uint32 stdRate, uint32 minRate);\n\n    event ProposedVolumeGoal(uint oldVolume, uint newVolume, uint allowedAfterTime);\n    event AppliedVolumeGoal(uint newVolume);\n\n    event ProposedMintRateChange(uint16 minThreshold, uint16 maxThreshold, uint percentage, uint allowedAfterTime);\n    event MintRateChange(uint16 minThreshold, uint16 maxThreshold, uint percentage);\n    \n    event ProposedFeeToken(address indexed token, address indexed priceFeed, bool removal, uint allowedAfterTime);\n    event FeeTokenAdded(address indexed token, address indexed priceFeed);\n    event FeeTokenRemoved(address indexed token);\n    event DXBLRedeemed(address holder, uint dxblAmount, address rewardToken, uint rewardAmount);\n}"},"contracts/vault/IComputationalView.sol":{"content":"//SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.17;\n\ninterface IComputationalView {\n\n    struct AssetInfo {\n        address token;\n        uint balance;\n        uint usdValue;\n        uint usdPrice;\n    }\n\n    function convertGasToFeeToken(address feeToken, uint gasCost) external view returns (uint);\n    function estimateRedemption(address feeToken, uint dxblAmount) external view returns(uint);\n    function feeTokenPriceUSD(address feeToken) external view returns (uint);\n    function aumUSD() external view returns(uint);\n    function currentNavUSD() external view returns(uint);\n    function assets() external view returns (AssetInfo[] memory);\n    function currentMintRateUSD() external view returns (uint);\n    function computeVolumeUSD(address feeToken, uint amount) external view returns(uint);\n\n}"},"contracts/vault/IPriceFeed.sol":{"content":"\n//SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.17;\n\n/**\n * Interface for Chainlink oracle feeds\n */\ninterface IPriceFeed {\n    function latestRoundData() external view\n    returns (\n        uint80 roundId,\n        int256 answer,\n        uint256 startedAt,\n        uint256 updatedAt,\n        uint80 answeredInRound\n    );\n    function decimals() external view returns (uint8);\n}"},"contracts/vault/IRewardHandler.sol":{"content":"//SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.17;\n\ninterface IRewardHandler {\n\n    /**\n     * Modification functions\n     */\n    function rewardTrader(address trader, address feeToken, uint amount) external;\n}"},"contracts/vault/IStorageView.sol":{"content":"//SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.17;\n\ninterface IStorageView {\n\n    /**\n     * Storage variable view functions\n     */\n    function discountBps() external view returns(uint32);\n    function dailyVolumeUSD() external view returns(uint);\n    function paused() external view returns (bool);\n    function adminMultiSig() external view returns (address);\n    function dxbl() external view returns (address);\n    function dexible() external view returns (address);\n    function wrappedNativeToken() external view returns (address);\n    function timelockSeconds() external view returns (uint32);\n    function baseMintThreshold() external view returns (uint);\n}"},"contracts/vault/V1Migrateable.sol":{"content":"//SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.17;\n\nimport \"./VaultStorage.sol\";\n\ninterface V1MigrationTarget {\n    /**\n     * Call from current vault to migrate the state of the old vault to the new one. \n     */\n    function migrationFromV1(VaultStorage.VaultMigrationV1 memory data) external;\n}\n\ninterface V1Migrateable {\n\n    /**\n     * Migrate the vault to a new vault address that implements the target interface\n     * to receive this vault's state. This will transfer all fee token assets to the \n     * new vault.\n     */\n    function migrateV1(V1MigrationTarget newVault) external;\n    \n}"},"contracts/vault/VaultStorage.sol":{"content":"//SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.17;\n\nimport \"../token/IDXBL.sol\";\nimport \"./IPriceFeed.sol\";\n\nlibrary VaultStorage {\n\n    bytes32 constant VAULT_STORAGE_KEY = 0xbfa76ec2967ed7f8d3d40cd552f1451ab03573b596bfce931a6a016f7733078c;\n\n    /****************************************************************************\n     * Initialization Config Settings\n     *****************************************************************************/\n    //mint rate bucket\n    struct MintRateRangeConfig {\n        uint16 minMMVolume;\n        uint16 maxMMVolume;\n        uint rate;\n    }\n\n    //fee token and its associated chainlink feed\n    struct FeeTokenConfig {\n        address[] feeTokens;\n        address[] priceFeeds;\n    }\n\n    //initialize config to intialize storage\n    struct VaultConfig {\n\n        //the address of the wrapped native token\n        address wrappedNativeToken;\n\n        //address of the multisig that will administer this vault\n        address adminMultiSig;\n\n        //starting volume needed to mint a single DXBL token. This increases\n        //as we get closer to reaching the daily goal\n        uint baseMintThreshold;\n\n        //initial rate ranges to apply\n        MintRateRangeConfig[] rateRanges;\n\n        //set of fee token/price feed pairs to initialize with\n        FeeTokenConfig feeTokenConfig;\n    }\n\n    /****************************************************************************\n     * Stored Settings\n     *****************************************************************************/\n    //stored mint rate range\n    struct MintRateRange {\n        uint16 minMMVolume;\n        uint16 maxMMVolume;\n        uint rate;\n        uint index;\n    }\n\n    //price feed for a fee token\n    struct PriceFeed {\n        IPriceFeed feed;\n        uint8 decimals;\n    }\n\n    /*****************************************************************************************\n     * STORAGE\n    ******************************************************************************************/\n    \n    \n    struct VaultData {\n        //whether the vault is paused\n        bool paused;\n\n        //admin multi sig\n        address adminMultiSig;\n\n        //token address\n        IDXBL dxbl;\n\n        //dexible settlement contract that is allowed to call the vault\n        address dexible;\n\n        //wrapped native asset address for gas computation\n        address wrappedNativeToken;\n\n        //time before migration allowed\n        uint32 timelockSeconds;\n\n        //base volume needed to mint a single DXBL token. This increases\n        //as we get closer to reaching the daily goal\n        uint baseMintThreshold;\n\n        //current daily volume adjusted each hour\n        uint currentVolume;\n\n        //to compute what hourly slots to deduct from 24hr window\n        uint lastTradeTimestamp;\n\n        //can migrate the contract to a new vault after this time\n        uint migrateAfterTime;\n\n        //all known fee tokens. Some may be inactive\n        IERC20[] feeTokens;\n\n        //the current volume range we're operating in for mint rate\n        MintRateRange currentMintRate;\n\n        //The ranges of 24hr volume and their percentage-per-MM increase to \n        //mint a single token\n        MintRateRange[] mintRateRanges;\n\n        //hourly volume totals to adjust current volume every 24 hr slot\n        uint[24] hourlyVolume;\n\n        //fee token decimals\n        mapping(address => uint8) tokenDecimals;\n\n        //all allowed fee tokens mapped to their price feed address\n        mapping(address => PriceFeed) allowedFeeTokens;\n    }\n\n    /**\n     * If a migration occurs from the V1 vault to a new vault, this structure is forwarded\n     * after all fee token balances are transferred. It is expected that the new vault will have\n     * its fee token, minting rates, and starting mint rates mapped out as part of its deployment.\n     * The migration is intended to get the new vault into a state where it knows the last 24hrs\n     * of volume and can pick up where this vault leaves off but with new settings and capabilities.\n     */\n    struct VaultMigrationV1 {\n        //current daily volume adjusted each hour\n        uint currentVolume;\n\n        //to compute what hourly slots to deduct from 24hr window\n        uint lastTradeTimestamp;\n\n        //hourly volume totals to adjust in new contract\n        uint[24] hourlyVolume;\n\n        //the current volume range we're operating in for mint rate\n        MintRateRange currentMintRate;\n    }\n\n    function load() internal pure returns (VaultData storage ds) {\n        assembly { ds.slot := VAULT_STORAGE_KEY }\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":100},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1358],"ERC20":[586],"IERC20":[664],"IERC20Metadata":[689]},"id":587,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:0"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":587,"sourceUnit":665,"src":"130:22:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":587,"sourceUnit":690,"src":"153:41:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":587,"sourceUnit":1359,"src":"195:33:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6,"name":"Context","nameLocations":["1419:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1358,"src":"1419:7:0"},"id":7,"nodeType":"InheritanceSpecifier","src":"1419:7:0"},{"baseName":{"id":8,"name":"IERC20","nameLocations":["1428:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"1428:6:0"},"id":9,"nodeType":"InheritanceSpecifier","src":"1428:6:0"},{"baseName":{"id":10,"name":"IERC20Metadata","nameLocations":["1436:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":689,"src":"1436:14:0"},"id":11,"nodeType":"InheritanceSpecifier","src":"1436:14:0"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":5,"nodeType":"StructuredDocumentation","src":"230:1170:0","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":586,"linearizedBaseContracts":[586,689,664,1358],"name":"ERC20","nameLocation":"1410:5:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":15,"mutability":"mutable","name":"_balances","nameLocation":"1493:9:0","nodeType":"VariableDeclaration","scope":586,"src":"1457:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":14,"keyType":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"1465:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1457:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"1476:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":21,"mutability":"mutable","name":"_allowances","nameLocation":"1565:11:0","nodeType":"VariableDeclaration","scope":586,"src":"1509:67:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":20,"keyType":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"1517:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1509:47:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":19,"keyType":{"id":17,"name":"address","nodeType":"ElementaryTypeName","src":"1536:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1528:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":18,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":23,"mutability":"mutable","name":"_totalSupply","nameLocation":"1599:12:0","nodeType":"VariableDeclaration","scope":586,"src":"1583:28:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":22,"name":"uint256","nodeType":"ElementaryTypeName","src":"1583:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":25,"mutability":"mutable","name":"_name","nameLocation":"1633:5:0","nodeType":"VariableDeclaration","scope":586,"src":"1618:20:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":24,"name":"string","nodeType":"ElementaryTypeName","src":"1618:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":27,"mutability":"mutable","name":"_symbol","nameLocation":"1659:7:0","nodeType":"VariableDeclaration","scope":586,"src":"1644:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":26,"name":"string","nodeType":"ElementaryTypeName","src":"1644:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":43,"nodeType":"Block","src":"2032:57:0","statements":[{"expression":{"id":37,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":35,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2042:5:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":36,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2050:5:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2042:13:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":38,"nodeType":"ExpressionStatement","src":"2042:13:0"},{"expression":{"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":39,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2065:7:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":40,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"2075:7:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2065:17:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":42,"nodeType":"ExpressionStatement","src":"2065:17:0"}]},"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"1673:298:0","text":" @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."},"id":44,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"name_","nameLocation":"2002:5:0","nodeType":"VariableDeclaration","scope":44,"src":"1988:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29,"name":"string","nodeType":"ElementaryTypeName","src":"1988:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32,"mutability":"mutable","name":"symbol_","nameLocation":"2023:7:0","nodeType":"VariableDeclaration","scope":44,"src":"2009:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":31,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1987:44:0"},"returnParameters":{"id":34,"nodeType":"ParameterList","parameters":[],"src":"2032:0:0"},"scope":586,"src":"1976:113:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[676],"body":{"id":53,"nodeType":"Block","src":"2223:29:0","statements":[{"expression":{"id":51,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2240:5:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":50,"id":52,"nodeType":"Return","src":"2233:12:0"}]},"documentation":{"id":45,"nodeType":"StructuredDocumentation","src":"2095:54:0","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":54,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2163:4:0","nodeType":"FunctionDefinition","overrides":{"id":47,"nodeType":"OverrideSpecifier","overrides":[],"src":"2190:8:0"},"parameters":{"id":46,"nodeType":"ParameterList","parameters":[],"src":"2167:2:0"},"returnParameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":54,"src":"2208:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":48,"name":"string","nodeType":"ElementaryTypeName","src":"2208:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2207:15:0"},"scope":586,"src":"2154:98:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[682],"body":{"id":63,"nodeType":"Block","src":"2436:31:0","statements":[{"expression":{"id":61,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2453:7:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":60,"id":62,"nodeType":"Return","src":"2446:14:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"2258:102:0","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":64,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2374:6:0","nodeType":"FunctionDefinition","overrides":{"id":57,"nodeType":"OverrideSpecifier","overrides":[],"src":"2403:8:0"},"parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"2380:2:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":64,"src":"2421:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":58,"name":"string","nodeType":"ElementaryTypeName","src":"2421:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2420:15:0"},"scope":586,"src":"2365:102:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[688],"body":{"id":73,"nodeType":"Block","src":"3156:26:0","statements":[{"expression":{"hexValue":"3138","id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3173:2:0","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":70,"id":72,"nodeType":"Return","src":"3166:9:0"}]},"documentation":{"id":65,"nodeType":"StructuredDocumentation","src":"2473:613:0","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":74,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3100:8:0","nodeType":"FunctionDefinition","overrides":{"id":67,"nodeType":"OverrideSpecifier","overrides":[],"src":"3131:8:0"},"parameters":{"id":66,"nodeType":"ParameterList","parameters":[],"src":"3108:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":74,"src":"3149:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":68,"name":"uint8","nodeType":"ElementaryTypeName","src":"3149:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3148:7:0"},"scope":586,"src":"3091:91:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[613],"body":{"id":83,"nodeType":"Block","src":"3312:36:0","statements":[{"expression":{"id":81,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"3329:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":80,"id":82,"nodeType":"Return","src":"3322:19:0"}]},"documentation":{"id":75,"nodeType":"StructuredDocumentation","src":"3188:49:0","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":84,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3251:11:0","nodeType":"FunctionDefinition","overrides":{"id":77,"nodeType":"OverrideSpecifier","overrides":[],"src":"3285:8:0"},"parameters":{"id":76,"nodeType":"ParameterList","parameters":[],"src":"3262:2:0"},"returnParameters":{"id":80,"nodeType":"ParameterList","parameters":[{"constant":false,"id":79,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":84,"src":"3303:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":78,"name":"uint256","nodeType":"ElementaryTypeName","src":"3303:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3302:9:0"},"scope":586,"src":"3242:106:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[621],"body":{"id":97,"nodeType":"Block","src":"3489:42:0","statements":[{"expression":{"baseExpression":{"id":93,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"3506:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":95,"indexExpression":{"id":94,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"3516:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3506:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":92,"id":96,"nodeType":"Return","src":"3499:25:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"3354:47:0","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":98,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3415:9:0","nodeType":"FunctionDefinition","overrides":{"id":89,"nodeType":"OverrideSpecifier","overrides":[],"src":"3462:8:0"},"parameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"mutability":"mutable","name":"account","nameLocation":"3433:7:0","nodeType":"VariableDeclaration","scope":98,"src":"3425:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":86,"name":"address","nodeType":"ElementaryTypeName","src":"3425:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3424:17:0"},"returnParameters":{"id":92,"nodeType":"ParameterList","parameters":[{"constant":false,"id":91,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":98,"src":"3480:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":90,"name":"uint256","nodeType":"ElementaryTypeName","src":"3480:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3479:9:0"},"scope":586,"src":"3406:125:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[631],"body":{"id":122,"nodeType":"Block","src":"3812:104:0","statements":[{"assignments":[110],"declarations":[{"constant":false,"id":110,"mutability":"mutable","name":"owner","nameLocation":"3830:5:0","nodeType":"VariableDeclaration","scope":122,"src":"3822:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":109,"name":"address","nodeType":"ElementaryTypeName","src":"3822:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":113,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"3838:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3838:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3822:28:0"},{"expression":{"arguments":[{"id":115,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"3870:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":116,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"3877:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":117,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"3881:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":114,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"3860:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3860:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":119,"nodeType":"ExpressionStatement","src":"3860:28:0"},{"expression":{"hexValue":"74727565","id":120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3905:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":108,"id":121,"nodeType":"Return","src":"3898:11:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"3537:185:0","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":123,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3736:8:0","nodeType":"FunctionDefinition","overrides":{"id":105,"nodeType":"OverrideSpecifier","overrides":[],"src":"3788:8:0"},"parameters":{"id":104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"to","nameLocation":"3753:2:0","nodeType":"VariableDeclaration","scope":123,"src":"3745:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"3745:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103,"mutability":"mutable","name":"amount","nameLocation":"3765:6:0","nodeType":"VariableDeclaration","scope":123,"src":"3757:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102,"name":"uint256","nodeType":"ElementaryTypeName","src":"3757:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3744:28:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":123,"src":"3806:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":106,"name":"bool","nodeType":"ElementaryTypeName","src":"3806:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3805:6:0"},"scope":586,"src":"3727:189:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[641],"body":{"id":140,"nodeType":"Block","src":"4072:51:0","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":134,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"4089:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":136,"indexExpression":{"id":135,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"4101:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4089:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":138,"indexExpression":{"id":137,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4108:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4089:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":133,"id":139,"nodeType":"Return","src":"4082:34:0"}]},"documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"3922:47:0","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":141,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3983:9:0","nodeType":"FunctionDefinition","overrides":{"id":130,"nodeType":"OverrideSpecifier","overrides":[],"src":"4045:8:0"},"parameters":{"id":129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"mutability":"mutable","name":"owner","nameLocation":"4001:5:0","nodeType":"VariableDeclaration","scope":141,"src":"3993:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"3993:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":128,"mutability":"mutable","name":"spender","nameLocation":"4016:7:0","nodeType":"VariableDeclaration","scope":141,"src":"4008:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":127,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3992:32:0"},"returnParameters":{"id":133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":141,"src":"4063:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":131,"name":"uint256","nodeType":"ElementaryTypeName","src":"4063:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4062:9:0"},"scope":586,"src":"3974:149:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[651],"body":{"id":165,"nodeType":"Block","src":"4520:108:0","statements":[{"assignments":[153],"declarations":[{"constant":false,"id":153,"mutability":"mutable","name":"owner","nameLocation":"4538:5:0","nodeType":"VariableDeclaration","scope":165,"src":"4530:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"4530:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":156,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":154,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"4546:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4546:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4530:28:0"},{"expression":{"arguments":[{"id":158,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4577:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":159,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"4584:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":160,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"4593:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":157,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"4568:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4568:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"4568:32:0"},{"expression":{"hexValue":"74727565","id":163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4617:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":151,"id":164,"nodeType":"Return","src":"4610:11:0"}]},"documentation":{"id":142,"nodeType":"StructuredDocumentation","src":"4129:297:0","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":166,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4440:7:0","nodeType":"FunctionDefinition","overrides":{"id":148,"nodeType":"OverrideSpecifier","overrides":[],"src":"4496:8:0"},"parameters":{"id":147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"mutability":"mutable","name":"spender","nameLocation":"4456:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4448:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":143,"name":"address","nodeType":"ElementaryTypeName","src":"4448:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":146,"mutability":"mutable","name":"amount","nameLocation":"4473:6:0","nodeType":"VariableDeclaration","scope":166,"src":"4465:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":145,"name":"uint256","nodeType":"ElementaryTypeName","src":"4465:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4447:33:0"},"returnParameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":166,"src":"4514:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":149,"name":"bool","nodeType":"ElementaryTypeName","src":"4514:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4513:6:0"},"scope":586,"src":"4431:197:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[663],"body":{"id":198,"nodeType":"Block","src":"5323:153:0","statements":[{"assignments":[180],"declarations":[{"constant":false,"id":180,"mutability":"mutable","name":"spender","nameLocation":"5341:7:0","nodeType":"VariableDeclaration","scope":198,"src":"5333:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"5333:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":183,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":181,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"5351:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5351:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5333:30:0"},{"expression":{"arguments":[{"id":185,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5389:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":186,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"5395:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":187,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"5404:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":184,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"5373:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5373:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":189,"nodeType":"ExpressionStatement","src":"5373:38:0"},{"expression":{"arguments":[{"id":191,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5431:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":192,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5437:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":193,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"5441:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":190,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"5421:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5421:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":195,"nodeType":"ExpressionStatement","src":"5421:27:0"},{"expression":{"hexValue":"74727565","id":196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5465:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":178,"id":197,"nodeType":"Return","src":"5458:11:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4634:551:0","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":199,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5199:12:0","nodeType":"FunctionDefinition","overrides":{"id":175,"nodeType":"OverrideSpecifier","overrides":[],"src":"5299:8:0"},"parameters":{"id":174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"from","nameLocation":"5229:4:0","nodeType":"VariableDeclaration","scope":199,"src":"5221:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":168,"name":"address","nodeType":"ElementaryTypeName","src":"5221:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"to","nameLocation":"5251:2:0","nodeType":"VariableDeclaration","scope":199,"src":"5243:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5243:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"amount","nameLocation":"5271:6:0","nodeType":"VariableDeclaration","scope":199,"src":"5263:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"5263:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5211:72:0"},"returnParameters":{"id":178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":199,"src":"5317:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":176,"name":"bool","nodeType":"ElementaryTypeName","src":"5317:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5316:6:0"},"scope":586,"src":"5190:286:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":227,"nodeType":"Block","src":"5965:140:0","statements":[{"assignments":[210],"declarations":[{"constant":false,"id":210,"mutability":"mutable","name":"owner","nameLocation":"5983:5:0","nodeType":"VariableDeclaration","scope":227,"src":"5975:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":209,"name":"address","nodeType":"ElementaryTypeName","src":"5975:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":213,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":211,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"5991:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5991:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5975:28:0"},{"expression":{"arguments":[{"id":215,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"6022:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":216,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"6029:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":218,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"6048:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":219,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"6055:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":217,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"6038:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6038:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":221,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"6066:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6038:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":214,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"6013:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6013:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":224,"nodeType":"ExpressionStatement","src":"6013:64:0"},{"expression":{"hexValue":"74727565","id":225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6094:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":208,"id":226,"nodeType":"Return","src":"6087:11:0"}]},"documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"5482:384:0","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":228,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5880:17:0","nodeType":"FunctionDefinition","parameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"mutability":"mutable","name":"spender","nameLocation":"5906:7:0","nodeType":"VariableDeclaration","scope":228,"src":"5898:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"addedValue","nameLocation":"5923:10:0","nodeType":"VariableDeclaration","scope":228,"src":"5915:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":203,"name":"uint256","nodeType":"ElementaryTypeName","src":"5915:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5897:37:0"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":228,"src":"5959:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":206,"name":"bool","nodeType":"ElementaryTypeName","src":"5959:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5958:6:0"},"scope":586,"src":"5871:234:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":268,"nodeType":"Block","src":"6691:328:0","statements":[{"assignments":[239],"declarations":[{"constant":false,"id":239,"mutability":"mutable","name":"owner","nameLocation":"6709:5:0","nodeType":"VariableDeclaration","scope":268,"src":"6701:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":238,"name":"address","nodeType":"ElementaryTypeName","src":"6701:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":242,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":240,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"6717:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6717:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6701:28:0"},{"assignments":[244],"declarations":[{"constant":false,"id":244,"mutability":"mutable","name":"currentAllowance","nameLocation":"6747:16:0","nodeType":"VariableDeclaration","scope":268,"src":"6739:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":243,"name":"uint256","nodeType":"ElementaryTypeName","src":"6739:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":249,"initialValue":{"arguments":[{"id":246,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"6776:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":247,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"6783:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":245,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"6766:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6766:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6739:52:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":251,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"6809:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":252,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"6829:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6809:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6846:39:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":250,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6801:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6801:85:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":256,"nodeType":"ExpressionStatement","src":"6801:85:0"},{"id":265,"nodeType":"UncheckedBlock","src":"6896:95:0","statements":[{"expression":{"arguments":[{"id":258,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"6929:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":259,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"6936:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":260,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"6945:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":261,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"6964:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6945:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":257,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"6920:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6920:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":264,"nodeType":"ExpressionStatement","src":"6920:60:0"}]},{"expression":{"hexValue":"74727565","id":266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7008:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":237,"id":267,"nodeType":"Return","src":"7001:11:0"}]},"documentation":{"id":229,"nodeType":"StructuredDocumentation","src":"6111:476:0","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":269,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6601:17:0","nodeType":"FunctionDefinition","parameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":231,"mutability":"mutable","name":"spender","nameLocation":"6627:7:0","nodeType":"VariableDeclaration","scope":269,"src":"6619:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":230,"name":"address","nodeType":"ElementaryTypeName","src":"6619:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":233,"mutability":"mutable","name":"subtractedValue","nameLocation":"6644:15:0","nodeType":"VariableDeclaration","scope":269,"src":"6636:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":232,"name":"uint256","nodeType":"ElementaryTypeName","src":"6636:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6618:42:0"},"returnParameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":269,"src":"6685:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":235,"name":"bool","nodeType":"ElementaryTypeName","src":"6685:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6684:6:0"},"scope":586,"src":"6592:427:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":345,"nodeType":"Block","src":"7581:710:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":280,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"7599:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7607:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"7607:7:0","typeDescriptions":{}}},"id":284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7607:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7599:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7619:39:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":279,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7591:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7591:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":288,"nodeType":"ExpressionStatement","src":"7591:68:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":290,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"7677:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7691:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7683:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"7683:7:0","typeDescriptions":{}}},"id":294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7683:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7677:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7695:37:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":289,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7669:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7669:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"ExpressionStatement","src":"7669:64:0"},{"expression":{"arguments":[{"id":300,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"7765:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":301,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"7771:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":302,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"7775:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":299,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"7744:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7744:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":304,"nodeType":"ExpressionStatement","src":"7744:38:0"},{"assignments":[306],"declarations":[{"constant":false,"id":306,"mutability":"mutable","name":"fromBalance","nameLocation":"7801:11:0","nodeType":"VariableDeclaration","scope":345,"src":"7793:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"7793:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":310,"initialValue":{"baseExpression":{"id":307,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"7815:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":309,"indexExpression":{"id":308,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"7825:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7815:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7793:37:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":312,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"7848:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":313,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"7863:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7848:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7871:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":311,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7840:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7840:72:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":317,"nodeType":"ExpressionStatement","src":"7840:72:0"},{"id":332,"nodeType":"UncheckedBlock","src":"7922:273:0","statements":[{"expression":{"id":324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":318,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"7946:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":320,"indexExpression":{"id":319,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"7956:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7946:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":321,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"7964:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":322,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"7978:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7964:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7946:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":325,"nodeType":"ExpressionStatement","src":"7946:38:0"},{"expression":{"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":326,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"8161:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":328,"indexExpression":{"id":327,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"8171:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8161:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":329,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"8178:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8161:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":331,"nodeType":"ExpressionStatement","src":"8161:23:0"}]},{"eventCall":{"arguments":[{"id":334,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"8219:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":335,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"8225:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":336,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"8229:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":333,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"8210:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8210:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":338,"nodeType":"EmitStatement","src":"8205:31:0"},{"expression":{"arguments":[{"id":340,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"8267:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":341,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"8273:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":342,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"8277:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":339,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"8247:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8247:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":344,"nodeType":"ExpressionStatement","src":"8247:37:0"}]},"documentation":{"id":270,"nodeType":"StructuredDocumentation","src":"7025:443:0","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":346,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7482:9:0","nodeType":"FunctionDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":272,"mutability":"mutable","name":"from","nameLocation":"7509:4:0","nodeType":"VariableDeclaration","scope":346,"src":"7501:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":271,"name":"address","nodeType":"ElementaryTypeName","src":"7501:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":274,"mutability":"mutable","name":"to","nameLocation":"7531:2:0","nodeType":"VariableDeclaration","scope":346,"src":"7523:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"7523:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":276,"mutability":"mutable","name":"amount","nameLocation":"7551:6:0","nodeType":"VariableDeclaration","scope":346,"src":"7543:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":275,"name":"uint256","nodeType":"ElementaryTypeName","src":"7543:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7491:72:0"},"returnParameters":{"id":278,"nodeType":"ParameterList","parameters":[],"src":"7581:0:0"},"scope":586,"src":"7473:818:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":402,"nodeType":"Block","src":"8632:470:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":355,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"8650:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8669:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8661:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":356,"name":"address","nodeType":"ElementaryTypeName","src":"8661:7:0","typeDescriptions":{}}},"id":359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8661:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8650:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8673:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":354,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8642:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8642:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":363,"nodeType":"ExpressionStatement","src":"8642:65:0"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8747:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8739:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"8739:7:0","typeDescriptions":{}}},"id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8739:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":369,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"8751:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":370,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"8760:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":364,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"8718:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8718:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":372,"nodeType":"ExpressionStatement","src":"8718:49:0"},{"expression":{"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":373,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"8778:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":374,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"8794:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8778:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":376,"nodeType":"ExpressionStatement","src":"8778:22:0"},{"id":383,"nodeType":"UncheckedBlock","src":"8810:175:0","statements":[{"expression":{"id":381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":377,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"8946:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":379,"indexExpression":{"id":378,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"8956:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8946:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":380,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"8968:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8946:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":382,"nodeType":"ExpressionStatement","src":"8946:28:0"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9016:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9008:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"9008:7:0","typeDescriptions":{}}},"id":388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9008:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":389,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"9020:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":390,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"9029:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":384,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"8999:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8999:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":392,"nodeType":"EmitStatement","src":"8994:42:0"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9075:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9067:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"9067:7:0","typeDescriptions":{}}},"id":397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9067:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":398,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"9079:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":399,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"9088:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":393,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"9047:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9047:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":401,"nodeType":"ExpressionStatement","src":"9047:48:0"}]},"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"8297:265:0","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":403,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8576:5:0","nodeType":"FunctionDefinition","parameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"account","nameLocation":"8590:7:0","nodeType":"VariableDeclaration","scope":403,"src":"8582:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":348,"name":"address","nodeType":"ElementaryTypeName","src":"8582:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":351,"mutability":"mutable","name":"amount","nameLocation":"8607:6:0","nodeType":"VariableDeclaration","scope":403,"src":"8599:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":350,"name":"uint256","nodeType":"ElementaryTypeName","src":"8599:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8581:33:0"},"returnParameters":{"id":353,"nodeType":"ParameterList","parameters":[],"src":"8632:0:0"},"scope":586,"src":"8567:535:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":474,"nodeType":"Block","src":"9487:594:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":412,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9505:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9524:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9516:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"9516:7:0","typeDescriptions":{}}},"id":416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9516:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9505:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9528:35:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":411,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9497:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9497:67:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":420,"nodeType":"ExpressionStatement","src":"9497:67:0"},{"expression":{"arguments":[{"id":422,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9596:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9613:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9605:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":423,"name":"address","nodeType":"ElementaryTypeName","src":"9605:7:0","typeDescriptions":{}}},"id":426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9605:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":427,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9617:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":421,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"9575:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9575:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":429,"nodeType":"ExpressionStatement","src":"9575:49:0"},{"assignments":[431],"declarations":[{"constant":false,"id":431,"mutability":"mutable","name":"accountBalance","nameLocation":"9643:14:0","nodeType":"VariableDeclaration","scope":474,"src":"9635:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":430,"name":"uint256","nodeType":"ElementaryTypeName","src":"9635:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":435,"initialValue":{"baseExpression":{"id":432,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"9660:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":434,"indexExpression":{"id":433,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9670:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9660:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9635:43:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":437,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"9696:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":438,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9714:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9696:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9722:36:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":436,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9688:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9688:71:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":442,"nodeType":"ExpressionStatement","src":"9688:71:0"},{"id":455,"nodeType":"UncheckedBlock","src":"9769:194:0","statements":[{"expression":{"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":443,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"9793:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":445,"indexExpression":{"id":444,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9803:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9793:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":446,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"9814:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":447,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9831:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9814:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9793:44:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":450,"nodeType":"ExpressionStatement","src":"9793:44:0"},{"expression":{"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":451,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"9930:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":452,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9946:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9930:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":454,"nodeType":"ExpressionStatement","src":"9930:22:0"}]},{"eventCall":{"arguments":[{"id":457,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9987:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10004:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9996:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":458,"name":"address","nodeType":"ElementaryTypeName","src":"9996:7:0","typeDescriptions":{}}},"id":461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9996:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":462,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"10008:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":456,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"9978:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9978:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":464,"nodeType":"EmitStatement","src":"9973:42:0"},{"expression":{"arguments":[{"id":466,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"10046:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10063:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10055:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"10055:7:0","typeDescriptions":{}}},"id":470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10055:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":471,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"10067:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":465,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"10026:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10026:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":473,"nodeType":"ExpressionStatement","src":"10026:48:0"}]},"documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"9108:309:0","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":475,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9431:5:0","nodeType":"FunctionDefinition","parameters":{"id":409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"account","nameLocation":"9445:7:0","nodeType":"VariableDeclaration","scope":475,"src":"9437:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":405,"name":"address","nodeType":"ElementaryTypeName","src":"9437:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":408,"mutability":"mutable","name":"amount","nameLocation":"9462:6:0","nodeType":"VariableDeclaration","scope":475,"src":"9454:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":407,"name":"uint256","nodeType":"ElementaryTypeName","src":"9454:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9436:33:0"},"returnParameters":{"id":410,"nodeType":"ParameterList","parameters":[],"src":"9487:0:0"},"scope":586,"src":"9422:659:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":519,"nodeType":"Block","src":"10617:257:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":486,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"10635:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10652:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10644:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"10644:7:0","typeDescriptions":{}}},"id":490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10644:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10635:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10656:38:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":485,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10627:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10627:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":494,"nodeType":"ExpressionStatement","src":"10627:68:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":496,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"10713:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10732:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10724:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":497,"name":"address","nodeType":"ElementaryTypeName","src":"10724:7:0","typeDescriptions":{}}},"id":500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10724:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10713:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10736:36:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":495,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10705:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10705:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":504,"nodeType":"ExpressionStatement","src":"10705:68:0"},{"expression":{"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":505,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"10784:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":508,"indexExpression":{"id":506,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"10796:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10784:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":509,"indexExpression":{"id":507,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"10803:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10784:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":510,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"10814:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10784:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":512,"nodeType":"ExpressionStatement","src":"10784:36:0"},{"eventCall":{"arguments":[{"id":514,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"10844:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":515,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"10851:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":516,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"10860:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":513,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10835:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10835:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":518,"nodeType":"EmitStatement","src":"10830:37:0"}]},"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"10087:412:0","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":520,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10513:8:0","nodeType":"FunctionDefinition","parameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"owner","nameLocation":"10539:5:0","nodeType":"VariableDeclaration","scope":520,"src":"10531:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"10531:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":480,"mutability":"mutable","name":"spender","nameLocation":"10562:7:0","nodeType":"VariableDeclaration","scope":520,"src":"10554:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"10554:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":482,"mutability":"mutable","name":"amount","nameLocation":"10587:6:0","nodeType":"VariableDeclaration","scope":520,"src":"10579:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"10579:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10521:78:0"},"returnParameters":{"id":484,"nodeType":"ParameterList","parameters":[],"src":"10617:0:0"},"scope":586,"src":"10504:370:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":562,"nodeType":"Block","src":"11275:321:0","statements":[{"assignments":[531],"declarations":[{"constant":false,"id":531,"mutability":"mutable","name":"currentAllowance","nameLocation":"11293:16:0","nodeType":"VariableDeclaration","scope":562,"src":"11285:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":530,"name":"uint256","nodeType":"ElementaryTypeName","src":"11285:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":536,"initialValue":{"arguments":[{"id":533,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"11322:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":534,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"11329:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":532,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"11312:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11312:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11285:52:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":537,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"11351:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":539,"name":"uint256","nodeType":"ElementaryTypeName","src":"11376:7:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":538,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11371:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11371:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11385:3:0","memberName":"max","nodeType":"MemberAccess","src":"11371:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11351:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":561,"nodeType":"IfStatement","src":"11347:243:0","trueBody":{"id":560,"nodeType":"Block","src":"11390:200:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":545,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"11412:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":546,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"11432:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11412:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11440:31:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":544,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11404:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11404:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":550,"nodeType":"ExpressionStatement","src":"11404:68:0"},{"id":559,"nodeType":"UncheckedBlock","src":"11486:94:0","statements":[{"expression":{"arguments":[{"id":552,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"11523:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":553,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"11530:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":554,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"11539:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":555,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"11558:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11539:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":551,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"11514:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11514:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":558,"nodeType":"ExpressionStatement","src":"11514:51:0"}]}]}}]},"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"10880:270:0","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":563,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11164:15:0","nodeType":"FunctionDefinition","parameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"owner","nameLocation":"11197:5:0","nodeType":"VariableDeclaration","scope":563,"src":"11189:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":522,"name":"address","nodeType":"ElementaryTypeName","src":"11189:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"spender","nameLocation":"11220:7:0","nodeType":"VariableDeclaration","scope":563,"src":"11212:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"11212:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":527,"mutability":"mutable","name":"amount","nameLocation":"11245:6:0","nodeType":"VariableDeclaration","scope":563,"src":"11237:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":526,"name":"uint256","nodeType":"ElementaryTypeName","src":"11237:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11179:78:0"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"11275:0:0"},"scope":586,"src":"11155:441:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":573,"nodeType":"Block","src":"12299:2:0","statements":[]},"documentation":{"id":564,"nodeType":"StructuredDocumentation","src":"11602:573:0","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":574,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12189:20:0","nodeType":"FunctionDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"mutability":"mutable","name":"from","nameLocation":"12227:4:0","nodeType":"VariableDeclaration","scope":574,"src":"12219:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"12219:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":568,"mutability":"mutable","name":"to","nameLocation":"12249:2:0","nodeType":"VariableDeclaration","scope":574,"src":"12241:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"12241:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"amount","nameLocation":"12269:6:0","nodeType":"VariableDeclaration","scope":574,"src":"12261:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":569,"name":"uint256","nodeType":"ElementaryTypeName","src":"12261:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12209:72:0"},"returnParameters":{"id":572,"nodeType":"ParameterList","parameters":[],"src":"12299:0:0"},"scope":586,"src":"12180:121:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":584,"nodeType":"Block","src":"13007:2:0","statements":[]},"documentation":{"id":575,"nodeType":"StructuredDocumentation","src":"12307:577:0","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":585,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12898:19:0","nodeType":"FunctionDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":577,"mutability":"mutable","name":"from","nameLocation":"12935:4:0","nodeType":"VariableDeclaration","scope":585,"src":"12927:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"12927:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"to","nameLocation":"12957:2:0","nodeType":"VariableDeclaration","scope":585,"src":"12949:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":578,"name":"address","nodeType":"ElementaryTypeName","src":"12949:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":581,"mutability":"mutable","name":"amount","nameLocation":"12977:6:0","nodeType":"VariableDeclaration","scope":585,"src":"12969:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":580,"name":"uint256","nodeType":"ElementaryTypeName","src":"12969:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12917:72:0"},"returnParameters":{"id":583,"nodeType":"ParameterList","parameters":[],"src":"13007:0:0"},"scope":586,"src":"12889:120:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":587,"src":"1401:11610:0","usedErrors":[]}],"src":"105:12907:0"},"id":0},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[664]},"id":665,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":588,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"131:70:1","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":664,"linearizedBaseContracts":[664],"name":"IERC20","nameLocation":"212:6:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":590,"nodeType":"StructuredDocumentation","src":"225:158:1","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":598,"name":"Transfer","nameLocation":"394:8:1","nodeType":"EventDefinition","parameters":{"id":597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":592,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:1","nodeType":"VariableDeclaration","scope":598,"src":"403:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":591,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":594,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:1","nodeType":"VariableDeclaration","scope":598,"src":"425:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":593,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":596,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:1","nodeType":"VariableDeclaration","scope":598,"src":"445:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":595,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:1"},"src":"388:72:1"},{"anonymous":false,"documentation":{"id":599,"nodeType":"StructuredDocumentation","src":"466:148:1","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":607,"name":"Approval","nameLocation":"625:8:1","nodeType":"EventDefinition","parameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":601,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:1","nodeType":"VariableDeclaration","scope":607,"src":"634:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":600,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":603,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:1","nodeType":"VariableDeclaration","scope":607,"src":"657:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":602,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":605,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:1","nodeType":"VariableDeclaration","scope":607,"src":"682:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":604,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:1"},"src":"619:78:1"},{"documentation":{"id":608,"nodeType":"StructuredDocumentation","src":"703:66:1","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":613,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:1","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[],"src":"794:2:1"},"returnParameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":613,"src":"820:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":610,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:1"},"scope":664,"src":"774:55:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":614,"nodeType":"StructuredDocumentation","src":"835:72:1","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":621,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:1","nodeType":"FunctionDefinition","parameters":{"id":617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"mutability":"mutable","name":"account","nameLocation":"939:7:1","nodeType":"VariableDeclaration","scope":621,"src":"931:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":615,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:1"},"returnParameters":{"id":620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":621,"src":"971:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":618,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:1"},"scope":664,"src":"912:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":622,"nodeType":"StructuredDocumentation","src":"986:202:1","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":631,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:1","nodeType":"FunctionDefinition","parameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":624,"mutability":"mutable","name":"to","nameLocation":"1219:2:1","nodeType":"VariableDeclaration","scope":631,"src":"1211:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"amount","nameLocation":"1231:6:1","nodeType":"VariableDeclaration","scope":631,"src":"1223:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":625,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:1"},"returnParameters":{"id":630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":631,"src":"1257:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":628,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:1"},"scope":664,"src":"1193:70:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":632,"nodeType":"StructuredDocumentation","src":"1269:264:1","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":641,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:1","nodeType":"FunctionDefinition","parameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"owner","nameLocation":"1565:5:1","nodeType":"VariableDeclaration","scope":641,"src":"1557:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":636,"mutability":"mutable","name":"spender","nameLocation":"1580:7:1","nodeType":"VariableDeclaration","scope":641,"src":"1572:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":635,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:1"},"returnParameters":{"id":640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":641,"src":"1612:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":638,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:1"},"scope":664,"src":"1538:83:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":642,"nodeType":"StructuredDocumentation","src":"1627:642:1","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":651,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:1","nodeType":"FunctionDefinition","parameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":644,"mutability":"mutable","name":"spender","nameLocation":"2299:7:1","nodeType":"VariableDeclaration","scope":651,"src":"2291:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":643,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":646,"mutability":"mutable","name":"amount","nameLocation":"2316:6:1","nodeType":"VariableDeclaration","scope":651,"src":"2308:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":645,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:1"},"returnParameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":651,"src":"2342:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":648,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:1"},"scope":664,"src":"2274:74:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":652,"nodeType":"StructuredDocumentation","src":"2354:287:1","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":663,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:1","nodeType":"FunctionDefinition","parameters":{"id":659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":654,"mutability":"mutable","name":"from","nameLocation":"2685:4:1","nodeType":"VariableDeclaration","scope":663,"src":"2677:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":653,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":656,"mutability":"mutable","name":"to","nameLocation":"2707:2:1","nodeType":"VariableDeclaration","scope":663,"src":"2699:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":658,"mutability":"mutable","name":"amount","nameLocation":"2727:6:1","nodeType":"VariableDeclaration","scope":663,"src":"2719:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":657,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:1"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":663,"src":"2758:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":660,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:1"},"scope":664,"src":"2646:118:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":665,"src":"202:2564:1","usedErrors":[]}],"src":"106:2661:1"},"id":1},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[664],"IERC20Metadata":[689]},"id":690,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":666,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":667,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":690,"sourceUnit":665,"src":"135:23:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":669,"name":"IERC20","nameLocations":["305:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"305:6:2"},"id":670,"nodeType":"InheritanceSpecifier","src":"305:6:2"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":668,"nodeType":"StructuredDocumentation","src":"160:116:2","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":689,"linearizedBaseContracts":[689,664],"name":"IERC20Metadata","nameLocation":"287:14:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":671,"nodeType":"StructuredDocumentation","src":"318:54:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":676,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:2","nodeType":"FunctionDefinition","parameters":{"id":672,"nodeType":"ParameterList","parameters":[],"src":"390:2:2"},"returnParameters":{"id":675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":676,"src":"416:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":673,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:2"},"scope":689,"src":"377:54:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":677,"nodeType":"StructuredDocumentation","src":"437:56:2","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":682,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:2","nodeType":"FunctionDefinition","parameters":{"id":678,"nodeType":"ParameterList","parameters":[],"src":"513:2:2"},"returnParameters":{"id":681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":682,"src":"539:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":679,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:2"},"scope":689,"src":"498:56:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"560:65:2","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":688,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:2","nodeType":"FunctionDefinition","parameters":{"id":684,"nodeType":"ParameterList","parameters":[],"src":"647:2:2"},"returnParameters":{"id":687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":688,"src":"673:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":685,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:2"},"scope":689,"src":"630:50:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":690,"src":"277:405:2","usedErrors":[]}],"src":"110:573:2"},"id":2},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[725]},"id":726,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":691,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"114:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":692,"nodeType":"StructuredDocumentation","src":"139:480:3","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":725,"linearizedBaseContracts":[725],"name":"IERC20Permit","nameLocation":"630:12:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":693,"nodeType":"StructuredDocumentation","src":"649:792:3","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":710,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1455:6:3","nodeType":"FunctionDefinition","parameters":{"id":708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":695,"mutability":"mutable","name":"owner","nameLocation":"1479:5:3","nodeType":"VariableDeclaration","scope":710,"src":"1471:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"1471:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":697,"mutability":"mutable","name":"spender","nameLocation":"1502:7:3","nodeType":"VariableDeclaration","scope":710,"src":"1494:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":696,"name":"address","nodeType":"ElementaryTypeName","src":"1494:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":699,"mutability":"mutable","name":"value","nameLocation":"1527:5:3","nodeType":"VariableDeclaration","scope":710,"src":"1519:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":698,"name":"uint256","nodeType":"ElementaryTypeName","src":"1519:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":701,"mutability":"mutable","name":"deadline","nameLocation":"1550:8:3","nodeType":"VariableDeclaration","scope":710,"src":"1542:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":700,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":703,"mutability":"mutable","name":"v","nameLocation":"1574:1:3","nodeType":"VariableDeclaration","scope":710,"src":"1568:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":702,"name":"uint8","nodeType":"ElementaryTypeName","src":"1568:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":705,"mutability":"mutable","name":"r","nameLocation":"1593:1:3","nodeType":"VariableDeclaration","scope":710,"src":"1585:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":704,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1585:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":707,"mutability":"mutable","name":"s","nameLocation":"1612:1:3","nodeType":"VariableDeclaration","scope":710,"src":"1604:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1604:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1461:158:3"},"returnParameters":{"id":709,"nodeType":"ParameterList","parameters":[],"src":"1628:0:3"},"scope":725,"src":"1446:183:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":711,"nodeType":"StructuredDocumentation","src":"1635:294:3","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":718,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1943:6:3","nodeType":"FunctionDefinition","parameters":{"id":714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":713,"mutability":"mutable","name":"owner","nameLocation":"1958:5:3","nodeType":"VariableDeclaration","scope":718,"src":"1950:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":712,"name":"address","nodeType":"ElementaryTypeName","src":"1950:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1949:15:3"},"returnParameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":716,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":718,"src":"1988:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":715,"name":"uint256","nodeType":"ElementaryTypeName","src":"1988:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1987:9:3"},"scope":725,"src":"1934:63:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":719,"nodeType":"StructuredDocumentation","src":"2003:128:3","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":724,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2198:16:3","nodeType":"FunctionDefinition","parameters":{"id":720,"nodeType":"ParameterList","parameters":[],"src":"2214:2:3"},"returnParameters":{"id":723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":724,"src":"2240:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":721,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2240:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2239:9:3"},"scope":725,"src":"2189:60:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":726,"src":"620:1631:3","usedErrors":[]}],"src":"114:2138:3"},"id":3},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[1336],"IERC20":[664],"IERC20Permit":[725],"SafeERC20":[1006]},"id":1007,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":727,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":728,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1007,"sourceUnit":665,"src":"140:23:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","file":"../extensions/draft-IERC20Permit.sol","id":729,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1007,"sourceUnit":726,"src":"164:46:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":730,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1007,"sourceUnit":1337,"src":"211:36:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":731,"nodeType":"StructuredDocumentation","src":"249:457:4","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1006,"linearizedBaseContracts":[1006],"name":"SafeERC20","nameLocation":"715:9:4","nodeType":"ContractDefinition","nodes":[{"global":false,"id":734,"libraryName":{"id":732,"name":"Address","nameLocations":["737:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":1336,"src":"737:7:4"},"nodeType":"UsingForDirective","src":"731:26:4","typeName":{"id":733,"name":"address","nodeType":"ElementaryTypeName","src":"749:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":756,"nodeType":"Block","src":"865:103:4","statements":[{"expression":{"arguments":[{"id":745,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"895:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":748,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"925:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"931:8:4","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":631,"src":"925:14:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"940:8:4","memberName":"selector","nodeType":"MemberAccess","src":"925:23:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":751,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"950:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"954:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":746,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"902:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"906:18:4","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"902:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"902:58:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":744,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"875:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$664_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"875:86:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":755,"nodeType":"ExpressionStatement","src":"875:86:4"}]},"id":757,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"772:12:4","nodeType":"FunctionDefinition","parameters":{"id":742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":737,"mutability":"mutable","name":"token","nameLocation":"801:5:4","nodeType":"VariableDeclaration","scope":757,"src":"794:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"},"typeName":{"id":736,"nodeType":"UserDefinedTypeName","pathNode":{"id":735,"name":"IERC20","nameLocations":["794:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"794:6:4"},"referencedDeclaration":664,"src":"794:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":739,"mutability":"mutable","name":"to","nameLocation":"824:2:4","nodeType":"VariableDeclaration","scope":757,"src":"816:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":738,"name":"address","nodeType":"ElementaryTypeName","src":"816:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":741,"mutability":"mutable","name":"value","nameLocation":"844:5:4","nodeType":"VariableDeclaration","scope":757,"src":"836:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":740,"name":"uint256","nodeType":"ElementaryTypeName","src":"836:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"784:71:4"},"returnParameters":{"id":743,"nodeType":"ParameterList","parameters":[],"src":"865:0:4"},"scope":1006,"src":"763:205:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":782,"nodeType":"Block","src":"1102:113:4","statements":[{"expression":{"arguments":[{"id":770,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"1132:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":773,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"1162:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1168:12:4","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":663,"src":"1162:18:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:8:4","memberName":"selector","nodeType":"MemberAccess","src":"1162:27:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":776,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"1191:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":777,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"1197:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"1201:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":771,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1139:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1143:18:4","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1139:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1139:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":769,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"1112:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$664_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1112:96:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":781,"nodeType":"ExpressionStatement","src":"1112:96:4"}]},"id":783,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"983:16:4","nodeType":"FunctionDefinition","parameters":{"id":767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":760,"mutability":"mutable","name":"token","nameLocation":"1016:5:4","nodeType":"VariableDeclaration","scope":783,"src":"1009:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"},"typeName":{"id":759,"nodeType":"UserDefinedTypeName","pathNode":{"id":758,"name":"IERC20","nameLocations":["1009:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"1009:6:4"},"referencedDeclaration":664,"src":"1009:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":762,"mutability":"mutable","name":"from","nameLocation":"1039:4:4","nodeType":"VariableDeclaration","scope":783,"src":"1031:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":761,"name":"address","nodeType":"ElementaryTypeName","src":"1031:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":764,"mutability":"mutable","name":"to","nameLocation":"1061:2:4","nodeType":"VariableDeclaration","scope":783,"src":"1053:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":763,"name":"address","nodeType":"ElementaryTypeName","src":"1053:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":766,"mutability":"mutable","name":"value","nameLocation":"1081:5:4","nodeType":"VariableDeclaration","scope":783,"src":"1073:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":765,"name":"uint256","nodeType":"ElementaryTypeName","src":"1073:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"999:93:4"},"returnParameters":{"id":768,"nodeType":"ParameterList","parameters":[],"src":"1102:0:4"},"scope":1006,"src":"974:241:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":826,"nodeType":"Block","src":"1581:497:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"1830:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1839:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1830:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":798,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1829:12:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":803,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1870:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1006","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1006","typeString":"library SafeERC20"}],"id":802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1862:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":801,"name":"address","nodeType":"ElementaryTypeName","src":"1862:7:4","typeDescriptions":{}}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1862:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":805,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"1877:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":799,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"1846:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1852:9:4","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":641,"src":"1846:15:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1846:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1889:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1846:44:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":809,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1845:46:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1829:62:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1905:56:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":794,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1808:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1808:163:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":813,"nodeType":"ExpressionStatement","src":"1808:163:4"},{"expression":{"arguments":[{"id":815,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"2001:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":818,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"2031:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2037:7:4","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":651,"src":"2031:13:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2045:8:4","memberName":"selector","nodeType":"MemberAccess","src":"2031:22:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":821,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"2055:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"2064:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":816,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2008:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2012:18:4","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2008:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2008:62:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":814,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"1981:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$664_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1981:90:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":825,"nodeType":"ExpressionStatement","src":"1981:90:4"}]},"documentation":{"id":784,"nodeType":"StructuredDocumentation","src":"1221:249:4","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":827,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1484:11:4","nodeType":"FunctionDefinition","parameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":787,"mutability":"mutable","name":"token","nameLocation":"1512:5:4","nodeType":"VariableDeclaration","scope":827,"src":"1505:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"},"typeName":{"id":786,"nodeType":"UserDefinedTypeName","pathNode":{"id":785,"name":"IERC20","nameLocations":["1505:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"1505:6:4"},"referencedDeclaration":664,"src":"1505:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":789,"mutability":"mutable","name":"spender","nameLocation":"1535:7:4","nodeType":"VariableDeclaration","scope":827,"src":"1527:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":788,"name":"address","nodeType":"ElementaryTypeName","src":"1527:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":791,"mutability":"mutable","name":"value","nameLocation":"1560:5:4","nodeType":"VariableDeclaration","scope":827,"src":"1552:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":790,"name":"uint256","nodeType":"ElementaryTypeName","src":"1552:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:76:4"},"returnParameters":{"id":793,"nodeType":"ParameterList","parameters":[],"src":"1581:0:4"},"scope":1006,"src":"1475:603:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":862,"nodeType":"Block","src":"2200:194:4","statements":[{"assignments":[838],"declarations":[{"constant":false,"id":838,"mutability":"mutable","name":"newAllowance","nameLocation":"2218:12:4","nodeType":"VariableDeclaration","scope":862,"src":"2210:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":837,"name":"uint256","nodeType":"ElementaryTypeName","src":"2210:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":849,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":843,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2257:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1006","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1006","typeString":"library SafeERC20"}],"id":842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2249:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":841,"name":"address","nodeType":"ElementaryTypeName","src":"2249:7:4","typeDescriptions":{}}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2249:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":845,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"2264:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":839,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"2233:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2239:9:4","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":641,"src":"2233:15:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2233:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"2275:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2233:47:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2210:70:4"},{"expression":{"arguments":[{"id":851,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"2310:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":854,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"2340:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2346:7:4","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":651,"src":"2340:13:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2354:8:4","memberName":"selector","nodeType":"MemberAccess","src":"2340:22:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":857,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"2364:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":858,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"2373:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":852,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2317:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2321:18:4","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2317:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2317:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":850,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"2290:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$664_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2290:97:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":861,"nodeType":"ExpressionStatement","src":"2290:97:4"}]},"id":863,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2093:21:4","nodeType":"FunctionDefinition","parameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"mutability":"mutable","name":"token","nameLocation":"2131:5:4","nodeType":"VariableDeclaration","scope":863,"src":"2124:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"},"typeName":{"id":829,"nodeType":"UserDefinedTypeName","pathNode":{"id":828,"name":"IERC20","nameLocations":["2124:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"2124:6:4"},"referencedDeclaration":664,"src":"2124:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":832,"mutability":"mutable","name":"spender","nameLocation":"2154:7:4","nodeType":"VariableDeclaration","scope":863,"src":"2146:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"2146:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":834,"mutability":"mutable","name":"value","nameLocation":"2179:5:4","nodeType":"VariableDeclaration","scope":863,"src":"2171:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":833,"name":"uint256","nodeType":"ElementaryTypeName","src":"2171:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2114:76:4"},"returnParameters":{"id":836,"nodeType":"ParameterList","parameters":[],"src":"2200:0:4"},"scope":1006,"src":"2084:310:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":910,"nodeType":"Block","src":"2516:370:4","statements":[{"id":909,"nodeType":"UncheckedBlock","src":"2526:354:4","statements":[{"assignments":[874],"declarations":[{"constant":false,"id":874,"mutability":"mutable","name":"oldAllowance","nameLocation":"2558:12:4","nodeType":"VariableDeclaration","scope":909,"src":"2550:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":873,"name":"uint256","nodeType":"ElementaryTypeName","src":"2550:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":883,"initialValue":{"arguments":[{"arguments":[{"id":879,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2597:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1006","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1006","typeString":"library SafeERC20"}],"id":878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2589:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":877,"name":"address","nodeType":"ElementaryTypeName","src":"2589:7:4","typeDescriptions":{}}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2589:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":881,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"2604:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":875,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"2573:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2579:9:4","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":641,"src":"2573:15:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2550:62:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":885,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"2634:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"2650:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2634:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2657:43:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":884,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2626:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2626:75:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":890,"nodeType":"ExpressionStatement","src":"2626:75:4"},{"assignments":[892],"declarations":[{"constant":false,"id":892,"mutability":"mutable","name":"newAllowance","nameLocation":"2723:12:4","nodeType":"VariableDeclaration","scope":909,"src":"2715:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":891,"name":"uint256","nodeType":"ElementaryTypeName","src":"2715:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":896,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":893,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"2738:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"2753:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2738:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2715:43:4"},{"expression":{"arguments":[{"id":898,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"2792:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":901,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"2822:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2828:7:4","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":651,"src":"2822:13:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2836:8:4","memberName":"selector","nodeType":"MemberAccess","src":"2822:22:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":904,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"2846:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":905,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"2855:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":899,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2799:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2803:18:4","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2799:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":897,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"2772:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$664_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2772:97:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":908,"nodeType":"ExpressionStatement","src":"2772:97:4"}]}]},"id":911,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2409:21:4","nodeType":"FunctionDefinition","parameters":{"id":871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"mutability":"mutable","name":"token","nameLocation":"2447:5:4","nodeType":"VariableDeclaration","scope":911,"src":"2440:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"},"typeName":{"id":865,"nodeType":"UserDefinedTypeName","pathNode":{"id":864,"name":"IERC20","nameLocations":["2440:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"2440:6:4"},"referencedDeclaration":664,"src":"2440:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":868,"mutability":"mutable","name":"spender","nameLocation":"2470:7:4","nodeType":"VariableDeclaration","scope":911,"src":"2462:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":867,"name":"address","nodeType":"ElementaryTypeName","src":"2462:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":870,"mutability":"mutable","name":"value","nameLocation":"2495:5:4","nodeType":"VariableDeclaration","scope":911,"src":"2487:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":869,"name":"uint256","nodeType":"ElementaryTypeName","src":"2487:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:76:4"},"returnParameters":{"id":872,"nodeType":"ParameterList","parameters":[],"src":"2516:0:4"},"scope":1006,"src":"2400:486:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":966,"nodeType":"Block","src":"3107:257:4","statements":[{"assignments":[932],"declarations":[{"constant":false,"id":932,"mutability":"mutable","name":"nonceBefore","nameLocation":"3125:11:4","nodeType":"VariableDeclaration","scope":966,"src":"3117:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":931,"name":"uint256","nodeType":"ElementaryTypeName","src":"3117:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":937,"initialValue":{"arguments":[{"id":935,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"3152:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":933,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"3139:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$725","typeString":"contract IERC20Permit"}},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3145:6:4","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":718,"src":"3139:12:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3139:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3117:41:4"},{"expression":{"arguments":[{"id":941,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"3181:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":942,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"3188:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"3197:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":944,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"3204:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":945,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"3214:1:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":946,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"3217:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":947,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"3220:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":938,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"3168:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$725","typeString":"contract IERC20Permit"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3174:6:4","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":710,"src":"3168:12:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3168:54:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":949,"nodeType":"ExpressionStatement","src":"3168:54:4"},{"assignments":[951],"declarations":[{"constant":false,"id":951,"mutability":"mutable","name":"nonceAfter","nameLocation":"3240:10:4","nodeType":"VariableDeclaration","scope":966,"src":"3232:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":950,"name":"uint256","nodeType":"ElementaryTypeName","src":"3232:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":956,"initialValue":{"arguments":[{"id":954,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"3266:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":952,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"3253:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$725","typeString":"contract IERC20Permit"}},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3259:6:4","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":718,"src":"3253:12:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3253:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3232:40:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":958,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"3290:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":959,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"3304:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3318:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3304:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3290:29:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3321:35:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":957,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3282:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:75:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":965,"nodeType":"ExpressionStatement","src":"3282:75:4"}]},"id":967,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"2901:10:4","nodeType":"FunctionDefinition","parameters":{"id":929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"mutability":"mutable","name":"token","nameLocation":"2934:5:4","nodeType":"VariableDeclaration","scope":967,"src":"2921:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$725","typeString":"contract IERC20Permit"},"typeName":{"id":913,"nodeType":"UserDefinedTypeName","pathNode":{"id":912,"name":"IERC20Permit","nameLocations":["2921:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":725,"src":"2921:12:4"},"referencedDeclaration":725,"src":"2921:12:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$725","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":916,"mutability":"mutable","name":"owner","nameLocation":"2957:5:4","nodeType":"VariableDeclaration","scope":967,"src":"2949:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":915,"name":"address","nodeType":"ElementaryTypeName","src":"2949:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":918,"mutability":"mutable","name":"spender","nameLocation":"2980:7:4","nodeType":"VariableDeclaration","scope":967,"src":"2972:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":917,"name":"address","nodeType":"ElementaryTypeName","src":"2972:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":920,"mutability":"mutable","name":"value","nameLocation":"3005:5:4","nodeType":"VariableDeclaration","scope":967,"src":"2997:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":919,"name":"uint256","nodeType":"ElementaryTypeName","src":"2997:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":922,"mutability":"mutable","name":"deadline","nameLocation":"3028:8:4","nodeType":"VariableDeclaration","scope":967,"src":"3020:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":921,"name":"uint256","nodeType":"ElementaryTypeName","src":"3020:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":924,"mutability":"mutable","name":"v","nameLocation":"3052:1:4","nodeType":"VariableDeclaration","scope":967,"src":"3046:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":923,"name":"uint8","nodeType":"ElementaryTypeName","src":"3046:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":926,"mutability":"mutable","name":"r","nameLocation":"3071:1:4","nodeType":"VariableDeclaration","scope":967,"src":"3063:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":925,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3063:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":928,"mutability":"mutable","name":"s","nameLocation":"3090:1:4","nodeType":"VariableDeclaration","scope":967,"src":"3082:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":927,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3082:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2911:186:4"},"returnParameters":{"id":930,"nodeType":"ParameterList","parameters":[],"src":"3107:0:4"},"scope":1006,"src":"2892:472:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1004,"nodeType":"Block","src":"3817:636:4","statements":[{"assignments":[977],"declarations":[{"constant":false,"id":977,"mutability":"mutable","name":"returndata","nameLocation":"4179:10:4","nodeType":"VariableDeclaration","scope":1004,"src":"4166:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":976,"name":"bytes","nodeType":"ElementaryTypeName","src":"4166:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":986,"initialValue":{"arguments":[{"id":983,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"4220:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4226:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":980,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"4200:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}],"id":979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":978,"name":"address","nodeType":"ElementaryTypeName","src":"4192:7:4","typeDescriptions":{}}},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4207:12:4","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":1096,"src":"4192:27:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4166:95:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":987,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"4275:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4286:6:4","memberName":"length","nodeType":"MemberAccess","src":"4275:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4295:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4275:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1003,"nodeType":"IfStatement","src":"4271:176:4","trueBody":{"id":1002,"nodeType":"Block","src":"4298:149:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":994,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"4370:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4383:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":995,"name":"bool","nodeType":"ElementaryTypeName","src":"4383:4:4","typeDescriptions":{}}}],"id":997,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4382:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":992,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4359:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4363:6:4","memberName":"decode","nodeType":"MemberAccess","src":"4359:10:4","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4359:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4391:44:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":991,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4351:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4351:85:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1001,"nodeType":"ExpressionStatement","src":"4351:85:4"}]}}]},"documentation":{"id":968,"nodeType":"StructuredDocumentation","src":"3370:372:4","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":1005,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"3756:19:4","nodeType":"FunctionDefinition","parameters":{"id":974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":971,"mutability":"mutable","name":"token","nameLocation":"3783:5:4","nodeType":"VariableDeclaration","scope":1005,"src":"3776:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"},"typeName":{"id":970,"nodeType":"UserDefinedTypeName","pathNode":{"id":969,"name":"IERC20","nameLocations":["3776:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"3776:6:4"},"referencedDeclaration":664,"src":"3776:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":973,"mutability":"mutable","name":"data","nameLocation":"3803:4:4","nodeType":"VariableDeclaration","scope":1005,"src":"3790:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":972,"name":"bytes","nodeType":"ElementaryTypeName","src":"3790:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:33:4"},"returnParameters":{"id":975,"nodeType":"ParameterList","parameters":[],"src":"3817:0:4"},"scope":1006,"src":"3747:706:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1007,"src":"707:3748:4","usedErrors":[]}],"src":"115:4341:4"},"id":4},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1336]},"id":1337,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1008,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1009,"nodeType":"StructuredDocumentation","src":"126:67:5","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1336,"linearizedBaseContracts":[1336],"name":"Address","nameLocation":"202:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":1023,"nodeType":"Block","src":"1241:254:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1017,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"1465:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1473:4:5","memberName":"code","nodeType":"MemberAccess","src":"1465:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1478:6:5","memberName":"length","nodeType":"MemberAccess","src":"1465:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1016,"id":1022,"nodeType":"Return","src":"1458:30:5"}]},"documentation":{"id":1010,"nodeType":"StructuredDocumentation","src":"216:954:5","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1024,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:5","nodeType":"FunctionDefinition","parameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1012,"mutability":"mutable","name":"account","nameLocation":"1203:7:5","nodeType":"VariableDeclaration","scope":1024,"src":"1195:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1011,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:5"},"returnParameters":{"id":1016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1024,"src":"1235:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1014,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:5"},"scope":1336,"src":"1175:320:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1057,"nodeType":"Block","src":"2483:241:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1035,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1336","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1336","typeString":"library Address"}],"id":1034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1033,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:5","typeDescriptions":{}}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2501:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2515:7:5","memberName":"balance","nodeType":"MemberAccess","src":"2501:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1038,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"2526:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1032,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2493:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1042,"nodeType":"ExpressionStatement","src":"2493:73:5"},{"assignments":[1044,null],"declarations":[{"constant":false,"id":1044,"mutability":"mutable","name":"success","nameLocation":"2583:7:5","nodeType":"VariableDeclaration","scope":1057,"src":"2578:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1043,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1051,"initialValue":{"arguments":[{"hexValue":"","id":1049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1045,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"2596:9:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2606:4:5","memberName":"call","nodeType":"MemberAccess","src":"2596:14:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1047,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"2618:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2596:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:5"},{"expression":{"arguments":[{"id":1053,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"2647:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1052,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1056,"nodeType":"ExpressionStatement","src":"2639:78:5"}]},"documentation":{"id":1025,"nodeType":"StructuredDocumentation","src":"1501:906:5","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1058,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:5","nodeType":"FunctionDefinition","parameters":{"id":1030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1027,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:5","nodeType":"VariableDeclaration","scope":1058,"src":"2431:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1026,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1029,"mutability":"mutable","name":"amount","nameLocation":"2466:6:5","nodeType":"VariableDeclaration","scope":1058,"src":"2458:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1028,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:5"},"returnParameters":{"id":1031,"nodeType":"ParameterList","parameters":[],"src":"2483:0:5"},"scope":1336,"src":"2412:312:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1075,"nodeType":"Block","src":"3555:96:5","statements":[{"expression":{"arguments":[{"id":1069,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"3594:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1070,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"3602:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3608:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3611:32:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1068,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1116,1160],"referencedDeclaration":1160,"src":"3572:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:72:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1067,"id":1074,"nodeType":"Return","src":"3565:79:5"}]},"documentation":{"id":1059,"nodeType":"StructuredDocumentation","src":"2730:731:5","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1076,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:5","nodeType":"FunctionDefinition","parameters":{"id":1064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1061,"mutability":"mutable","name":"target","nameLocation":"3496:6:5","nodeType":"VariableDeclaration","scope":1076,"src":"3488:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1060,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1063,"mutability":"mutable","name":"data","nameLocation":"3517:4:5","nodeType":"VariableDeclaration","scope":1076,"src":"3504:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1062,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:5"},"returnParameters":{"id":1067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1076,"src":"3541:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1065,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:5"},"scope":1336,"src":"3466:185:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1095,"nodeType":"Block","src":"4020:76:5","statements":[{"expression":{"arguments":[{"id":1089,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"4059:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1090,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"4067:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1092,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"4076:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1088,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1116,1160],"referencedDeclaration":1160,"src":"4037:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4037:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1087,"id":1094,"nodeType":"Return","src":"4030:59:5"}]},"documentation":{"id":1077,"nodeType":"StructuredDocumentation","src":"3657:211:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1096,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3882:12:5","nodeType":"FunctionDefinition","parameters":{"id":1084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1079,"mutability":"mutable","name":"target","nameLocation":"3912:6:5","nodeType":"VariableDeclaration","scope":1096,"src":"3904:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1078,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1081,"mutability":"mutable","name":"data","nameLocation":"3941:4:5","nodeType":"VariableDeclaration","scope":1096,"src":"3928:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1080,"name":"bytes","nodeType":"ElementaryTypeName","src":"3928:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1083,"mutability":"mutable","name":"errorMessage","nameLocation":"3969:12:5","nodeType":"VariableDeclaration","scope":1096,"src":"3955:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1082,"name":"string","nodeType":"ElementaryTypeName","src":"3955:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3894:93:5"},"returnParameters":{"id":1087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1086,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1096,"src":"4006:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1085,"name":"bytes","nodeType":"ElementaryTypeName","src":"4006:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4005:14:5"},"scope":1336,"src":"3873:223:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1115,"nodeType":"Block","src":"4601:111:5","statements":[{"expression":{"arguments":[{"id":1109,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"4640:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1110,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"4648:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"4654:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4661:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1108,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1116,1160],"referencedDeclaration":1160,"src":"4618:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4618:87:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1107,"id":1114,"nodeType":"Return","src":"4611:94:5"}]},"documentation":{"id":1097,"nodeType":"StructuredDocumentation","src":"4102:351:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1116,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4467:21:5","nodeType":"FunctionDefinition","parameters":{"id":1104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1099,"mutability":"mutable","name":"target","nameLocation":"4506:6:5","nodeType":"VariableDeclaration","scope":1116,"src":"4498:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1098,"name":"address","nodeType":"ElementaryTypeName","src":"4498:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1101,"mutability":"mutable","name":"data","nameLocation":"4535:4:5","nodeType":"VariableDeclaration","scope":1116,"src":"4522:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1100,"name":"bytes","nodeType":"ElementaryTypeName","src":"4522:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1103,"mutability":"mutable","name":"value","nameLocation":"4557:5:5","nodeType":"VariableDeclaration","scope":1116,"src":"4549:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1102,"name":"uint256","nodeType":"ElementaryTypeName","src":"4549:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4488:80:5"},"returnParameters":{"id":1107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1116,"src":"4587:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1105,"name":"bytes","nodeType":"ElementaryTypeName","src":"4587:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4586:14:5"},"scope":1336,"src":"4458:254:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1159,"nodeType":"Block","src":"5139:267:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1133,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5165:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1336","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1336","typeString":"library Address"}],"id":1132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5157:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1131,"name":"address","nodeType":"ElementaryTypeName","src":"5157:7:5","typeDescriptions":{}}},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5157:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5171:7:5","memberName":"balance","nodeType":"MemberAccess","src":"5157:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"5182:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5189:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1130,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5149:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5149:81:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1140,"nodeType":"ExpressionStatement","src":"5149:81:5"},{"assignments":[1142,1144],"declarations":[{"constant":false,"id":1142,"mutability":"mutable","name":"success","nameLocation":"5246:7:5","nodeType":"VariableDeclaration","scope":1159,"src":"5241:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1141,"name":"bool","nodeType":"ElementaryTypeName","src":"5241:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1144,"mutability":"mutable","name":"returndata","nameLocation":"5268:10:5","nodeType":"VariableDeclaration","scope":1159,"src":"5255:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1143,"name":"bytes","nodeType":"ElementaryTypeName","src":"5255:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1151,"initialValue":{"arguments":[{"id":1149,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"5308:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1145,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"5282:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5289:4:5","memberName":"call","nodeType":"MemberAccess","src":"5282:11:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"5301:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5282:25:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5282:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5240:73:5"},{"expression":{"arguments":[{"id":1153,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"5357:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1154,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"5365:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1155,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"5374:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1156,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"5386:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1152,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"5330:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5330:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1129,"id":1158,"nodeType":"Return","src":"5323:76:5"}]},"documentation":{"id":1117,"nodeType":"StructuredDocumentation","src":"4718:237:5","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1160,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4969:21:5","nodeType":"FunctionDefinition","parameters":{"id":1126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1119,"mutability":"mutable","name":"target","nameLocation":"5008:6:5","nodeType":"VariableDeclaration","scope":1160,"src":"5000:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1118,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1121,"mutability":"mutable","name":"data","nameLocation":"5037:4:5","nodeType":"VariableDeclaration","scope":1160,"src":"5024:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1120,"name":"bytes","nodeType":"ElementaryTypeName","src":"5024:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1123,"mutability":"mutable","name":"value","nameLocation":"5059:5:5","nodeType":"VariableDeclaration","scope":1160,"src":"5051:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1122,"name":"uint256","nodeType":"ElementaryTypeName","src":"5051:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1125,"mutability":"mutable","name":"errorMessage","nameLocation":"5088:12:5","nodeType":"VariableDeclaration","scope":1160,"src":"5074:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1124,"name":"string","nodeType":"ElementaryTypeName","src":"5074:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4990:116:5"},"returnParameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1160,"src":"5125:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1127,"name":"bytes","nodeType":"ElementaryTypeName","src":"5125:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5124:14:5"},"scope":1336,"src":"4960:446:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1176,"nodeType":"Block","src":"5683:97:5","statements":[{"expression":{"arguments":[{"id":1171,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"5719:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1172,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"5727:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5733:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1170,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1177,1206],"referencedDeclaration":1206,"src":"5700:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5700:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1169,"id":1175,"nodeType":"Return","src":"5693:80:5"}]},"documentation":{"id":1161,"nodeType":"StructuredDocumentation","src":"5412:166:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1177,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5592:18:5","nodeType":"FunctionDefinition","parameters":{"id":1166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1163,"mutability":"mutable","name":"target","nameLocation":"5619:6:5","nodeType":"VariableDeclaration","scope":1177,"src":"5611:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1162,"name":"address","nodeType":"ElementaryTypeName","src":"5611:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1165,"mutability":"mutable","name":"data","nameLocation":"5640:4:5","nodeType":"VariableDeclaration","scope":1177,"src":"5627:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1164,"name":"bytes","nodeType":"ElementaryTypeName","src":"5627:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5610:35:5"},"returnParameters":{"id":1169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1177,"src":"5669:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1167,"name":"bytes","nodeType":"ElementaryTypeName","src":"5669:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5668:14:5"},"scope":1336,"src":"5583:197:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1205,"nodeType":"Block","src":"6122:168:5","statements":[{"assignments":[1190,1192],"declarations":[{"constant":false,"id":1190,"mutability":"mutable","name":"success","nameLocation":"6138:7:5","nodeType":"VariableDeclaration","scope":1205,"src":"6133:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1189,"name":"bool","nodeType":"ElementaryTypeName","src":"6133:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1192,"mutability":"mutable","name":"returndata","nameLocation":"6160:10:5","nodeType":"VariableDeclaration","scope":1205,"src":"6147:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1191,"name":"bytes","nodeType":"ElementaryTypeName","src":"6147:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1197,"initialValue":{"arguments":[{"id":1195,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"6192:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1193,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"6174:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6181:10:5","memberName":"staticcall","nodeType":"MemberAccess","src":"6174:17:5","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6132:65:5"},{"expression":{"arguments":[{"id":1199,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"6241:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1200,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"6249:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1201,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"6258:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1202,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"6270:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1198,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"6214:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6214:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1188,"id":1204,"nodeType":"Return","src":"6207:76:5"}]},"documentation":{"id":1178,"nodeType":"StructuredDocumentation","src":"5786:173:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1206,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5973:18:5","nodeType":"FunctionDefinition","parameters":{"id":1185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1180,"mutability":"mutable","name":"target","nameLocation":"6009:6:5","nodeType":"VariableDeclaration","scope":1206,"src":"6001:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1179,"name":"address","nodeType":"ElementaryTypeName","src":"6001:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1182,"mutability":"mutable","name":"data","nameLocation":"6038:4:5","nodeType":"VariableDeclaration","scope":1206,"src":"6025:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1181,"name":"bytes","nodeType":"ElementaryTypeName","src":"6025:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1184,"mutability":"mutable","name":"errorMessage","nameLocation":"6066:12:5","nodeType":"VariableDeclaration","scope":1206,"src":"6052:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1183,"name":"string","nodeType":"ElementaryTypeName","src":"6052:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5991:93:5"},"returnParameters":{"id":1188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1206,"src":"6108:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1186,"name":"bytes","nodeType":"ElementaryTypeName","src":"6108:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:14:5"},"scope":1336,"src":"5964:326:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1222,"nodeType":"Block","src":"6566:101:5","statements":[{"expression":{"arguments":[{"id":1217,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"6604:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1218,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"6612:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6618:41:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1216,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1223,1252],"referencedDeclaration":1252,"src":"6583:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6583:77:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1215,"id":1221,"nodeType":"Return","src":"6576:84:5"}]},"documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"6296:168:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1223,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6478:20:5","nodeType":"FunctionDefinition","parameters":{"id":1212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1209,"mutability":"mutable","name":"target","nameLocation":"6507:6:5","nodeType":"VariableDeclaration","scope":1223,"src":"6499:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1208,"name":"address","nodeType":"ElementaryTypeName","src":"6499:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1211,"mutability":"mutable","name":"data","nameLocation":"6528:4:5","nodeType":"VariableDeclaration","scope":1223,"src":"6515:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1210,"name":"bytes","nodeType":"ElementaryTypeName","src":"6515:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6498:35:5"},"returnParameters":{"id":1215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1223,"src":"6552:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1213,"name":"bytes","nodeType":"ElementaryTypeName","src":"6552:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6551:14:5"},"scope":1336,"src":"6469:198:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1251,"nodeType":"Block","src":"7008:170:5","statements":[{"assignments":[1236,1238],"declarations":[{"constant":false,"id":1236,"mutability":"mutable","name":"success","nameLocation":"7024:7:5","nodeType":"VariableDeclaration","scope":1251,"src":"7019:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1235,"name":"bool","nodeType":"ElementaryTypeName","src":"7019:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1238,"mutability":"mutable","name":"returndata","nameLocation":"7046:10:5","nodeType":"VariableDeclaration","scope":1251,"src":"7033:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1237,"name":"bytes","nodeType":"ElementaryTypeName","src":"7033:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1243,"initialValue":{"arguments":[{"id":1241,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"7080:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1239,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"7060:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7067:12:5","memberName":"delegatecall","nodeType":"MemberAccess","src":"7060:19:5","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7060:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7018:67:5"},{"expression":{"arguments":[{"id":1245,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"7129:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1246,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"7137:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1247,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"7146:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1248,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"7158:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1244,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"7102:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7102:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1234,"id":1250,"nodeType":"Return","src":"7095:76:5"}]},"documentation":{"id":1224,"nodeType":"StructuredDocumentation","src":"6673:175:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1252,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6862:20:5","nodeType":"FunctionDefinition","parameters":{"id":1231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1226,"mutability":"mutable","name":"target","nameLocation":"6900:6:5","nodeType":"VariableDeclaration","scope":1252,"src":"6892:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1225,"name":"address","nodeType":"ElementaryTypeName","src":"6892:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1228,"mutability":"mutable","name":"data","nameLocation":"6929:4:5","nodeType":"VariableDeclaration","scope":1252,"src":"6916:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1227,"name":"bytes","nodeType":"ElementaryTypeName","src":"6916:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1230,"mutability":"mutable","name":"errorMessage","nameLocation":"6957:12:5","nodeType":"VariableDeclaration","scope":1252,"src":"6943:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1229,"name":"string","nodeType":"ElementaryTypeName","src":"6943:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6882:93:5"},"returnParameters":{"id":1234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1252,"src":"6994:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1232,"name":"bytes","nodeType":"ElementaryTypeName","src":"6994:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6993:14:5"},"scope":1336,"src":"6853:325:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1290,"nodeType":"Block","src":"7660:434:5","statements":[{"condition":{"id":1266,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"7674:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1288,"nodeType":"Block","src":"8030:58:5","statements":[{"expression":{"arguments":[{"id":1284,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"8052:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1285,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"8064:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1283,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"8044:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8044:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1287,"nodeType":"ExpressionStatement","src":"8044:33:5"}]},"id":1289,"nodeType":"IfStatement","src":"7670:418:5","trueBody":{"id":1282,"nodeType":"Block","src":"7683:341:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1267,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"7701:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7712:6:5","memberName":"length","nodeType":"MemberAccess","src":"7701:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7722:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7701:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1279,"nodeType":"IfStatement","src":"7697:286:5","trueBody":{"id":1278,"nodeType":"Block","src":"7725:258:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":1273,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"7927:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1272,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"7916:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7916:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7936:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1271,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7908:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7908:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1277,"nodeType":"ExpressionStatement","src":"7908:60:5"}]}},{"expression":{"id":1280,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"8003:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1265,"id":1281,"nodeType":"Return","src":"7996:17:5"}]}}]},"documentation":{"id":1253,"nodeType":"StructuredDocumentation","src":"7184:277:5","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1291,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7475:26:5","nodeType":"FunctionDefinition","parameters":{"id":1262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1255,"mutability":"mutable","name":"target","nameLocation":"7519:6:5","nodeType":"VariableDeclaration","scope":1291,"src":"7511:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1254,"name":"address","nodeType":"ElementaryTypeName","src":"7511:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1257,"mutability":"mutable","name":"success","nameLocation":"7540:7:5","nodeType":"VariableDeclaration","scope":1291,"src":"7535:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1256,"name":"bool","nodeType":"ElementaryTypeName","src":"7535:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1259,"mutability":"mutable","name":"returndata","nameLocation":"7570:10:5","nodeType":"VariableDeclaration","scope":1291,"src":"7557:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1258,"name":"bytes","nodeType":"ElementaryTypeName","src":"7557:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1261,"mutability":"mutable","name":"errorMessage","nameLocation":"7604:12:5","nodeType":"VariableDeclaration","scope":1291,"src":"7590:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1260,"name":"string","nodeType":"ElementaryTypeName","src":"7590:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7501:121:5"},"returnParameters":{"id":1265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1291,"src":"7646:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1263,"name":"bytes","nodeType":"ElementaryTypeName","src":"7646:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7645:14:5"},"scope":1336,"src":"7466:628:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1314,"nodeType":"Block","src":"8475:135:5","statements":[{"condition":{"id":1303,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"8489:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1312,"nodeType":"Block","src":"8546:58:5","statements":[{"expression":{"arguments":[{"id":1308,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"8568:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1309,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"8580:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1307,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"8560:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1311,"nodeType":"ExpressionStatement","src":"8560:33:5"}]},"id":1313,"nodeType":"IfStatement","src":"8485:119:5","trueBody":{"id":1306,"nodeType":"Block","src":"8498:42:5","statements":[{"expression":{"id":1304,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"8519:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1302,"id":1305,"nodeType":"Return","src":"8512:17:5"}]}}]},"documentation":{"id":1292,"nodeType":"StructuredDocumentation","src":"8100:210:5","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1315,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8324:16:5","nodeType":"FunctionDefinition","parameters":{"id":1299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1294,"mutability":"mutable","name":"success","nameLocation":"8355:7:5","nodeType":"VariableDeclaration","scope":1315,"src":"8350:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1293,"name":"bool","nodeType":"ElementaryTypeName","src":"8350:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1296,"mutability":"mutable","name":"returndata","nameLocation":"8385:10:5","nodeType":"VariableDeclaration","scope":1315,"src":"8372:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1295,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1298,"mutability":"mutable","name":"errorMessage","nameLocation":"8419:12:5","nodeType":"VariableDeclaration","scope":1315,"src":"8405:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1297,"name":"string","nodeType":"ElementaryTypeName","src":"8405:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8340:97:5"},"returnParameters":{"id":1302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1315,"src":"8461:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1300,"name":"bytes","nodeType":"ElementaryTypeName","src":"8461:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8460:14:5"},"scope":1336,"src":"8315:295:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1334,"nodeType":"Block","src":"8699:457:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1322,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"8775:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8786:6:5","memberName":"length","nodeType":"MemberAccess","src":"8775:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8795:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8775:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1332,"nodeType":"Block","src":"9105:45:5","statements":[{"expression":{"arguments":[{"id":1329,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"9126:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1328,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9119:6:5","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9119:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1331,"nodeType":"ExpressionStatement","src":"9119:20:5"}]},"id":1333,"nodeType":"IfStatement","src":"8771:379:5","trueBody":{"id":1327,"nodeType":"Block","src":"8798:301:5","statements":[{"AST":{"nodeType":"YulBlock","src":"8956:133:5","statements":[{"nodeType":"YulVariableDeclaration","src":"8974:40:5","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9003:10:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8997:5:5"},"nodeType":"YulFunctionCall","src":"8997:17:5"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8978:15:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9042:2:5","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9046:10:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9038:3:5"},"nodeType":"YulFunctionCall","src":"9038:19:5"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9059:15:5"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9031:6:5"},"nodeType":"YulFunctionCall","src":"9031:44:5"},"nodeType":"YulExpressionStatement","src":"9031:44:5"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1317,"isOffset":false,"isSlot":false,"src":"9003:10:5","valueSize":1},{"declaration":1317,"isOffset":false,"isSlot":false,"src":"9046:10:5","valueSize":1}],"id":1326,"nodeType":"InlineAssembly","src":"8947:142:5"}]}}]},"id":1335,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8625:7:5","nodeType":"FunctionDefinition","parameters":{"id":1320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1317,"mutability":"mutable","name":"returndata","nameLocation":"8646:10:5","nodeType":"VariableDeclaration","scope":1335,"src":"8633:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1316,"name":"bytes","nodeType":"ElementaryTypeName","src":"8633:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1319,"mutability":"mutable","name":"errorMessage","nameLocation":"8672:12:5","nodeType":"VariableDeclaration","scope":1335,"src":"8658:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1318,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8632:53:5"},"returnParameters":{"id":1321,"nodeType":"ParameterList","parameters":[],"src":"8699:0:5"},"scope":1336,"src":"8616:540:5","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1337,"src":"194:8964:5","usedErrors":[]}],"src":"101:9058:5"},"id":5},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1358]},"id":1359,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1338,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:6"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1339,"nodeType":"StructuredDocumentation","src":"111:496:6","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1358,"linearizedBaseContracts":[1358],"name":"Context","nameLocation":"626:7:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1347,"nodeType":"Block","src":"702:34:6","statements":[{"expression":{"expression":{"id":1344,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:6","memberName":"sender","nodeType":"MemberAccess","src":"719:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1343,"id":1346,"nodeType":"Return","src":"712:17:6"}]},"id":1348,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:6","nodeType":"FunctionDefinition","parameters":{"id":1340,"nodeType":"ParameterList","parameters":[],"src":"659:2:6"},"returnParameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1348,"src":"693:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1341,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:6"},"scope":1358,"src":"640:96:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1356,"nodeType":"Block","src":"809:32:6","statements":[{"expression":{"expression":{"id":1353,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:6","memberName":"data","nodeType":"MemberAccess","src":"826:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1352,"id":1355,"nodeType":"Return","src":"819:15:6"}]},"id":1357,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:6","nodeType":"FunctionDefinition","parameters":{"id":1349,"nodeType":"ParameterList","parameters":[],"src":"759:2:6"},"returnParameters":{"id":1352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1357,"src":"793:14:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1350,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:6"},"scope":1358,"src":"742:99:6","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1359,"src":"608:235:6","usedErrors":[]}],"src":"86:758:6"},"id":6},"contracts/common/LibConstants.sol":{"ast":{"absolutePath":"contracts/common/LibConstants.sol","exportedSymbols":{"LibConstants":[1389]},"id":1390,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":1360,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"37:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"LibConstants","contractDependencies":[],"contractKind":"library","documentation":{"id":1361,"nodeType":"StructuredDocumentation","src":"63:41:7","text":" Constant values used elsewhere"},"fullyImplemented":true,"id":1389,"linearizedBaseContracts":[1389],"name":"LibConstants","nameLocation":"113:12:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1364,"mutability":"constant","name":"PRE_OP_GAS","nameLocation":"204:10:7","nodeType":"VariableDeclaration","scope":1389,"src":"190:33:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1362,"name":"uint","nodeType":"ElementaryTypeName","src":"190:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"34305f303030","id":1363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"217:6:7","typeDescriptions":{"typeIdentifier":"t_rational_40000_by_1","typeString":"int_const 40000"},"value":"40_000"},"visibility":"internal"},{"constant":true,"id":1367,"mutability":"constant","name":"POST_OP_GAS","nameLocation":"312:11:7","nodeType":"VariableDeclaration","scope":1389,"src":"298:34:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1365,"name":"uint","nodeType":"ElementaryTypeName","src":"298:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"38305f303030","id":1366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"326:6:7","typeDescriptions":{"typeIdentifier":"t_rational_80000_by_1","typeString":"int_const 80000"},"value":"80_000"},"visibility":"internal"},{"constant":true,"id":1370,"mutability":"constant","name":"HOUR","nameLocation":"360:4:7","nodeType":"VariableDeclaration","scope":1389,"src":"344:27:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1368,"name":"uint16","nodeType":"ElementaryTypeName","src":"344:6:7","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"33363030","id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"367:4:7","typeDescriptions":{"typeIdentifier":"t_rational_3600_by_1","typeString":"int_const 3600"},"value":"3600"},"visibility":"internal"},{"constant":true,"id":1373,"mutability":"constant","name":"DAY","nameLocation":"393:3:7","nodeType":"VariableDeclaration","scope":1389,"src":"377:27:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1371,"name":"uint24","nodeType":"ElementaryTypeName","src":"377:6:7","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"value":{"hexValue":"3836343030","id":1372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"399:5:7","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"86400"},"visibility":"internal"},{"constant":true,"id":1376,"mutability":"constant","name":"USD_PRECISION","nameLocation":"544:13:7","nodeType":"VariableDeclaration","scope":1389,"src":"530:33:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1374,"name":"uint","nodeType":"ElementaryTypeName","src":"530:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"316536","id":1375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"560:3:7","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1e6"},"visibility":"internal"},{"constant":true,"id":1379,"mutability":"constant","name":"MM_VOLUME","nameLocation":"622:9:7","nodeType":"VariableDeclaration","scope":1389,"src":"608:30:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1377,"name":"uint","nodeType":"ElementaryTypeName","src":"608:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653132","id":1378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"634:4:7","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"visibility":"internal"},{"constant":true,"id":1382,"mutability":"constant","name":"PRICE_PRECISION","nameLocation":"728:15:7","nodeType":"VariableDeclaration","scope":1389,"src":"714:36:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1380,"name":"uint","nodeType":"ElementaryTypeName","src":"714:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653330","id":1381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"746:4:7","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000000"},"value":"1e30"},"visibility":"internal"},{"constant":true,"functionSelector":"8ac4524f","id":1385,"mutability":"constant","name":"ROLE_MGR","nameLocation":"1042:8:7","nodeType":"VariableDeclaration","scope":1389,"src":"1019:48:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1383,"name":"string","nodeType":"ElementaryTypeName","src":"1019:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"524f4c455f4d414e41474552","id":1384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1053:14:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_f206625bad3d9112d5609b8d356e6fbd514cd1f69980d4ce2b3e6e68e1789ace","typeString":"literal_string \"ROLE_MANAGER\""},"value":"ROLE_MANAGER"},"visibility":"public"},{"constant":true,"functionSelector":"423154c9","id":1388,"mutability":"constant","name":"RELAY","nameLocation":"1140:5:7","nodeType":"VariableDeclaration","scope":1389,"src":"1117:38:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1386,"name":"string","nodeType":"ElementaryTypeName","src":"1117:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"52454c4159","id":1387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1148:7:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7f7b7e37c1c73a7fe521e350bfc44f06aa9ebbc4658ac6261b21c1e6f7b97f58","typeString":"literal_string \"RELAY\""},"value":"RELAY"},"visibility":"public"}],"scope":1390,"src":"105:1054:7","usedErrors":[]}],"src":"37:1122:7"},"id":7},"contracts/common/TokenTypes.sol":{"ast":{"absolutePath":"contracts/common/TokenTypes.sol","exportedSymbols":{"Address":[1336],"IERC20":[664],"IERC20Permit":[725],"SafeERC20":[1006],"TokenTypes":[1400]},"id":1401,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":1391,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"37:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":1392,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1401,"sourceUnit":665,"src":"65:56:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":1393,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1401,"sourceUnit":1007,"src":"122:65:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"TokenTypes","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":1400,"linearizedBaseContracts":[1400],"name":"TokenTypes","nameLocation":"197:10:8","nodeType":"ContractDefinition","nodes":[{"canonicalName":"TokenTypes.TokenAmount","id":1399,"members":[{"constant":false,"id":1395,"mutability":"mutable","name":"amount","nameLocation":"317:6:8","nodeType":"VariableDeclaration","scope":1399,"src":"309:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":1394,"name":"uint112","nodeType":"ElementaryTypeName","src":"309:7:8","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":1398,"mutability":"mutable","name":"token","nameLocation":"340:5:8","nodeType":"VariableDeclaration","scope":1399,"src":"333:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"},"typeName":{"id":1397,"nodeType":"UserDefinedTypeName","pathNode":{"id":1396,"name":"IERC20","nameLocations":["333:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"333:6:8"},"referencedDeclaration":664,"src":"333:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"visibility":"internal"}],"name":"TokenAmount","nameLocation":"287:11:8","nodeType":"StructDefinition","scope":1400,"src":"280:72:8","visibility":"public"}],"scope":1401,"src":"189:170:8","usedErrors":[]}],"src":"37:322:8"},"id":8},"contracts/token/IDXBL.sol":{"ast":{"absolutePath":"contracts/token/IDXBL.sol","exportedSymbols":{"IDXBL":[1464],"IERC20":[664],"IERC20Metadata":[689]},"id":1465,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":1402,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"37:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":1403,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1465,"sourceUnit":665,"src":"63:56:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":1404,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1465,"sourceUnit":690,"src":"120:75:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1405,"name":"IERC20","nameLocations":["216:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"216:6:9"},"id":1406,"nodeType":"InheritanceSpecifier","src":"216:6:9"},{"baseName":{"id":1407,"name":"IERC20Metadata","nameLocations":["224:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":689,"src":"224:14:9"},"id":1408,"nodeType":"InheritanceSpecifier","src":"224:14:9"}],"canonicalName":"IDXBL","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1464,"linearizedBaseContracts":[1464,689,664],"name":"IDXBL","nameLocation":"207:5:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IDXBL.FeeRequest","id":1421,"members":[{"constant":false,"id":1410,"mutability":"mutable","name":"referred","nameLocation":"278:8:9","nodeType":"VariableDeclaration","scope":1421,"src":"273:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1409,"name":"bool","nodeType":"ElementaryTypeName","src":"273:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1412,"mutability":"mutable","name":"trader","nameLocation":"304:6:9","nodeType":"VariableDeclaration","scope":1421,"src":"296:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1411,"name":"address","nodeType":"ElementaryTypeName","src":"296:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1414,"mutability":"mutable","name":"amt","nameLocation":"325:3:9","nodeType":"VariableDeclaration","scope":1421,"src":"320:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1413,"name":"uint","nodeType":"ElementaryTypeName","src":"320:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1416,"mutability":"mutable","name":"dxblBalance","nameLocation":"343:11:9","nodeType":"VariableDeclaration","scope":1421,"src":"338:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1415,"name":"uint","nodeType":"ElementaryTypeName","src":"338:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1418,"mutability":"mutable","name":"stdBpsRate","nameLocation":"371:10:9","nodeType":"VariableDeclaration","scope":1421,"src":"364:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1417,"name":"uint16","nodeType":"ElementaryTypeName","src":"364:6:9","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1420,"mutability":"mutable","name":"minBpsRate","nameLocation":"398:10:9","nodeType":"VariableDeclaration","scope":1421,"src":"391:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1419,"name":"uint16","nodeType":"ElementaryTypeName","src":"391:6:9","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"name":"FeeRequest","nameLocation":"252:10:9","nodeType":"StructDefinition","scope":1464,"src":"245:170:9","visibility":"public"},{"functionSelector":"07546172","id":1426,"implemented":false,"kind":"function","modifiers":[],"name":"minter","nameLocation":"430:6:9","nodeType":"FunctionDefinition","parameters":{"id":1422,"nodeType":"ParameterList","parameters":[],"src":"436:2:9"},"returnParameters":{"id":1425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1426,"src":"462:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1423,"name":"address","nodeType":"ElementaryTypeName","src":"462:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"461:9:9"},"scope":1464,"src":"421:50:9","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"566826d1","id":1431,"implemented":false,"kind":"function","modifiers":[],"name":"discountPerTokenBps","nameLocation":"485:19:9","nodeType":"FunctionDefinition","parameters":{"id":1427,"nodeType":"ParameterList","parameters":[],"src":"504:2:9"},"returnParameters":{"id":1430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1431,"src":"529:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1428,"name":"uint32","nodeType":"ElementaryTypeName","src":"529:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"528:8:9"},"scope":1464,"src":"476:61:9","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"40c10f19","id":1438,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"552:4:9","nodeType":"FunctionDefinition","parameters":{"id":1436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1433,"mutability":"mutable","name":"acct","nameLocation":"565:4:9","nodeType":"VariableDeclaration","scope":1438,"src":"557:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1432,"name":"address","nodeType":"ElementaryTypeName","src":"557:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1435,"mutability":"mutable","name":"amt","nameLocation":"576:3:9","nodeType":"VariableDeclaration","scope":1438,"src":"571:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1434,"name":"uint","nodeType":"ElementaryTypeName","src":"571:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"556:24:9"},"returnParameters":{"id":1437,"nodeType":"ParameterList","parameters":[],"src":"589:0:9"},"scope":1464,"src":"543:47:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"9dc29fac","id":1445,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"604:4:9","nodeType":"FunctionDefinition","parameters":{"id":1443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1440,"mutability":"mutable","name":"holder","nameLocation":"617:6:9","nodeType":"VariableDeclaration","scope":1445,"src":"609:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1439,"name":"address","nodeType":"ElementaryTypeName","src":"609:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1442,"mutability":"mutable","name":"amt","nameLocation":"630:3:9","nodeType":"VariableDeclaration","scope":1445,"src":"625:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1441,"name":"uint","nodeType":"ElementaryTypeName","src":"625:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"608:26:9"},"returnParameters":{"id":1444,"nodeType":"ParameterList","parameters":[],"src":"643:0:9"},"scope":1464,"src":"595:49:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"466a944e","id":1450,"implemented":false,"kind":"function","modifiers":[],"name":"setDiscountRate","nameLocation":"658:15:9","nodeType":"FunctionDefinition","parameters":{"id":1448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1447,"mutability":"mutable","name":"discount","nameLocation":"681:8:9","nodeType":"VariableDeclaration","scope":1450,"src":"674:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1446,"name":"uint32","nodeType":"ElementaryTypeName","src":"674:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"673:17:9"},"returnParameters":{"id":1449,"nodeType":"ParameterList","parameters":[],"src":"699:0:9"},"scope":1464,"src":"649:51:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"48af6b15","id":1455,"implemented":false,"kind":"function","modifiers":[],"name":"setNewMinter","nameLocation":"714:12:9","nodeType":"FunctionDefinition","parameters":{"id":1453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1452,"mutability":"mutable","name":"minter","nameLocation":"735:6:9","nodeType":"VariableDeclaration","scope":1455,"src":"727:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1451,"name":"address","nodeType":"ElementaryTypeName","src":"727:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"726:16:9"},"returnParameters":{"id":1454,"nodeType":"ParameterList","parameters":[],"src":"751:0:9"},"scope":1464,"src":"705:47:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a015b639","id":1463,"implemented":false,"kind":"function","modifiers":[],"name":"computeDiscountedFee","nameLocation":"766:20:9","nodeType":"FunctionDefinition","parameters":{"id":1459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1458,"mutability":"mutable","name":"request","nameLocation":"807:7:9","nodeType":"VariableDeclaration","scope":1463,"src":"787:27:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRequest_$1421_calldata_ptr","typeString":"struct IDXBL.FeeRequest"},"typeName":{"id":1457,"nodeType":"UserDefinedTypeName","pathNode":{"id":1456,"name":"FeeRequest","nameLocations":["787:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1421,"src":"787:10:9"},"referencedDeclaration":1421,"src":"787:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRequest_$1421_storage_ptr","typeString":"struct IDXBL.FeeRequest"}},"visibility":"internal"}],"src":"786:29:9"},"returnParameters":{"id":1462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1463,"src":"838:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1460,"name":"uint","nodeType":"ElementaryTypeName","src":"838:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"837:6:9"},"scope":1464,"src":"757:87:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1465,"src":"197:649:9","usedErrors":[]}],"src":"37:809:9"},"id":9},"contracts/vault/CommunityVault.sol":{"ast":{"absolutePath":"contracts/vault/CommunityVault.sol","exportedSymbols":{"Address":[1336],"CommunityVault":[1687],"ComputationalView":[2764],"Context":[1358],"ERC20":[586],"ICommunityVault":[1726],"ICommunityVaultEvents":[1819],"IComputationalView":[1887],"IDXBL":[1464],"IERC20":[664],"IERC20Metadata":[689],"IERC20Permit":[725],"IPriceFeed":[1909],"IRewardHandler":[1922],"IStorageView":[1971],"LibConstants":[1389],"RewardHandler":[3177],"SafeERC20":[1006],"StorageView":[3288],"V1Migrateable":[1990],"V1Migration":[3302],"V1MigrationTarget":[1982],"VaultStorage":[2107]},"id":1688,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":1466,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"37:24:10"},{"absolutePath":"contracts/vault/ICommunityVault.sol","file":"./ICommunityVault.sol","id":1467,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1688,"sourceUnit":1727,"src":"63:31:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/vault/baseContracts/StorageView.sol","file":"./baseContracts/StorageView.sol","id":1468,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1688,"sourceUnit":3289,"src":"95:41:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/token/IDXBL.sol","file":"../token/IDXBL.sol","id":1469,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1688,"sourceUnit":1465,"src":"137:28:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/vault/VaultStorage.sol","file":"./VaultStorage.sol","id":1470,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1688,"sourceUnit":2108,"src":"166:28:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/vault/baseContracts/V1Migration.sol","file":"./baseContracts/V1Migration.sol","id":1471,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1688,"sourceUnit":3303,"src":"195:41:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/vault/baseContracts/RewardHandler.sol","file":"./baseContracts/RewardHandler.sol","id":1472,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1688,"sourceUnit":3178,"src":"237:43:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/vault/baseContracts/ComputationalView.sol","file":"./baseContracts/ComputationalView.sol","id":1473,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1688,"sourceUnit":2765,"src":"281:47:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":1474,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1688,"sourceUnit":1007,"src":"330:65:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1476,"name":"StorageView","nameLocations":["961:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":3288,"src":"961:11:10"},"id":1477,"nodeType":"InheritanceSpecifier","src":"961:11:10"},{"baseName":{"id":1478,"name":"RewardHandler","nameLocations":["974:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":3177,"src":"974:13:10"},"id":1479,"nodeType":"InheritanceSpecifier","src":"974:13:10"},{"baseName":{"id":1480,"name":"ComputationalView","nameLocations":["989:17:10"],"nodeType":"IdentifierPath","referencedDeclaration":2764,"src":"989:17:10"},"id":1481,"nodeType":"InheritanceSpecifier","src":"989:17:10"},{"baseName":{"id":1482,"name":"V1Migration","nameLocations":["1008:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":3302,"src":"1008:11:10"},"id":1483,"nodeType":"InheritanceSpecifier","src":"1008:11:10"},{"baseName":{"id":1484,"name":"ICommunityVault","nameLocations":["1021:15:10"],"nodeType":"IdentifierPath","referencedDeclaration":1726,"src":"1021:15:10"},"id":1485,"nodeType":"InheritanceSpecifier","src":"1021:15:10"}],"canonicalName":"CommunityVault","contractDependencies":[],"contractKind":"contract","documentation":{"id":1475,"nodeType":"StructuredDocumentation","src":"398:534:10","text":" The community vault controls the supply of DXBL tokens. It has minting authority on the \n token contract so it can request mints/burns on behalf of traders. The Dexible contract\n is the only address able to request DXBL rewards for trades being made through the protocol.\n This contract is not upgradeable or modifiable. However, if an upgrade/fork is necessary,\n the contract can be paused and migrated to a new version after a grace period and only \n initiated from the admin multi-sig assigned to the vault."},"fullyImplemented":true,"id":1687,"linearizedBaseContracts":[1687,1726,3302,1990,1819,2764,1887,3177,1922,3288,1971],"name":"CommunityVault","nameLocation":"943:14:10","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1489,"libraryName":{"id":1486,"name":"SafeERC20","nameLocations":["1049:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":1006,"src":"1049:9:10"},"nodeType":"UsingForDirective","src":"1043:27:10","typeName":{"id":1488,"nodeType":"UserDefinedTypeName","pathNode":{"id":1487,"name":"IERC20","nameLocations":["1063:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"1063:6:10"},"referencedDeclaration":664,"src":"1063:6:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}}},{"body":{"id":1510,"nodeType":"Block","src":"1097:148:10","statements":[{"assignments":[1495],"declarations":[{"constant":false,"id":1495,"mutability":"mutable","name":"vs","nameLocation":"1138:2:10","nodeType":"VariableDeclaration","scope":1510,"src":"1107:33:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"},"typeName":{"id":1494,"nodeType":"UserDefinedTypeName","pathNode":{"id":1493,"name":"VaultStorage.VaultData","nameLocations":["1107:12:10","1120:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":2086,"src":"1107:22:10"},"referencedDeclaration":2086,"src":"1107:22:10","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"}},"visibility":"internal"}],"id":1499,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1496,"name":"VaultStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"1143:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VaultStorage_$2107_$","typeString":"type(library VaultStorage)"}},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1156:4:10","memberName":"load","nodeType":"MemberAccess","referencedDeclaration":2106,"src":"1143:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VaultData_$2086_storage_ptr_$","typeString":"function () pure returns (struct VaultStorage.VaultData storage pointer)"}},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1143:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"1107:55:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1501,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1180:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1184:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1180:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1503,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"1194:2:10","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":1504,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1197:13:10","memberName":"adminMultiSig","nodeType":"MemberAccess","referencedDeclaration":2044,"src":"1194:16:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1180:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e617574686f72697a6564","id":1506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1212:14:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5","typeString":"literal_string \"Unauthorized\""},"value":"Unauthorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5","typeString":"literal_string \"Unauthorized\""}],"id":1500,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1172:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1172:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1508,"nodeType":"ExpressionStatement","src":"1172:55:10"},{"id":1509,"nodeType":"PlaceholderStatement","src":"1237:1:10"}]},"id":1511,"name":"onlyAdmin","nameLocation":"1085:9:10","nodeType":"ModifierDefinition","parameters":{"id":1490,"nodeType":"ParameterList","parameters":[],"src":"1094:2:10"},"src":"1076:169:10","virtual":false,"visibility":"internal"},{"baseFunctions":[1710],"body":{"id":1541,"nodeType":"Block","src":"1321:143:10","statements":[{"assignments":[1522],"declarations":[{"constant":false,"id":1522,"mutability":"mutable","name":"vs","nameLocation":"1362:2:10","nodeType":"VariableDeclaration","scope":1541,"src":"1331:33:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"},"typeName":{"id":1521,"nodeType":"UserDefinedTypeName","pathNode":{"id":1520,"name":"VaultStorage.VaultData","nameLocations":["1331:12:10","1344:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":2086,"src":"1331:22:10"},"referencedDeclaration":2086,"src":"1331:22:10","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"}},"visibility":"internal"}],"id":1526,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1523,"name":"VaultStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"1367:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VaultStorage_$2107_$","typeString":"type(library VaultStorage)"}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1380:4:10","memberName":"load","nodeType":"MemberAccess","referencedDeclaration":2106,"src":"1367:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VaultData_$2086_storage_ptr_$","typeString":"function () pure returns (struct VaultStorage.VaultData storage pointer)"}},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1367:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"1331:55:10"},{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"baseExpression":{"expression":{"id":1529,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"1411:2:10","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":1530,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1414:16:10","memberName":"allowedFeeTokens","nodeType":"MemberAccess","referencedDeclaration":2085,"src":"1411:19:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PriceFeed_$2040_storage_$","typeString":"mapping(address => struct VaultStorage.PriceFeed storage ref)"}},"id":1532,"indexExpression":{"id":1531,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"1431:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1411:26:10","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$2040_storage","typeString":"struct VaultStorage.PriceFeed storage ref"}},"id":1533,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1438:4:10","memberName":"feed","nodeType":"MemberAccess","referencedDeclaration":2037,"src":"1411:31:10","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceFeed_$1909","typeString":"contract IPriceFeed"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IPriceFeed_$1909","typeString":"contract IPriceFeed"}],"id":1528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1403:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1527,"name":"address","nodeType":"ElementaryTypeName","src":"1403:7:10","typeDescriptions":{}}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1403:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1455:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1447:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1535,"name":"address","nodeType":"ElementaryTypeName","src":"1447:7:10","typeDescriptions":{}}},"id":1538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1447:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1403:54:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1517,"id":1540,"nodeType":"Return","src":"1396:61:10"}]},"functionSelector":"5d204718","id":1542,"implemented":true,"kind":"function","modifiers":[],"name":"isFeeTokenAllowed","nameLocation":"1260:17:10","nodeType":"FunctionDefinition","parameters":{"id":1514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1513,"mutability":"mutable","name":"token","nameLocation":"1286:5:10","nodeType":"VariableDeclaration","scope":1542,"src":"1278:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1512,"name":"address","nodeType":"ElementaryTypeName","src":"1278:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1277:15:10"},"returnParameters":{"id":1517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1542,"src":"1316:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1515,"name":"bool","nodeType":"ElementaryTypeName","src":"1316:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1315:6:10"},"scope":1687,"src":"1251:213:10","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1719],"body":{"id":1642,"nodeType":"Block","src":"1554:1492:10","statements":[{"assignments":[1555],"declarations":[{"constant":false,"id":1555,"mutability":"mutable","name":"rs","nameLocation":"1595:2:10","nodeType":"VariableDeclaration","scope":1642,"src":"1564:33:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"},"typeName":{"id":1554,"nodeType":"UserDefinedTypeName","pathNode":{"id":1553,"name":"VaultStorage.VaultData","nameLocations":["1564:12:10","1577:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":2086,"src":"1564:22:10"},"referencedDeclaration":2086,"src":"1564:22:10","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"}},"visibility":"internal"}],"id":1559,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1556,"name":"VaultStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"1600:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VaultStorage_$2107_$","typeString":"type(library VaultStorage)"}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1613:4:10","memberName":"load","nodeType":"MemberAccess","referencedDeclaration":2106,"src":"1600:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VaultData_$2086_storage_ptr_$","typeString":"function () pure returns (struct VaultStorage.VaultData storage pointer)"}},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1600:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"1564:55:10"},{"assignments":[1561],"declarations":[{"constant":false,"id":1561,"mutability":"mutable","name":"traderBal","nameLocation":"1716:9:10","nodeType":"VariableDeclaration","scope":1642,"src":"1711:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1560,"name":"uint","nodeType":"ElementaryTypeName","src":"1711:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1568,"initialValue":{"arguments":[{"expression":{"id":1565,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1746:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1750:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1746:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"id":1562,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"1728:2:10","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":1563,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1731:4:10","memberName":"dxbl","nodeType":"MemberAccess","referencedDeclaration":2047,"src":"1728:7:10","typeDescriptions":{"typeIdentifier":"t_contract$_IDXBL_$1464","typeString":"contract IDXBL"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1736:9:10","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":621,"src":"1728:17:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1728:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1711:46:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1570,"name":"traderBal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"1775:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1571,"name":"dxblAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"1788:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1775:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74204458424c2062616c616e636520746f2072656465656d","id":1573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1800:37:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e96b07ad2fe138b3a0142201e6de920a5bbc80c056562ed599dfe58fbb366bd","typeString":"literal_string \"Insufficient DXBL balance to redeem\""},"value":"Insufficient DXBL balance to redeem"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e96b07ad2fe138b3a0142201e6de920a5bbc80c056562ed599dfe58fbb366bd","typeString":"literal_string \"Insufficient DXBL balance to redeem\""}],"id":1569,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1767:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1767:71:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1575,"nodeType":"ExpressionStatement","src":"1767:71:10"},{"assignments":[1577],"declarations":[{"constant":false,"id":1577,"mutability":"mutable","name":"wdAmt","nameLocation":"1955:5:10","nodeType":"VariableDeclaration","scope":1642,"src":"1950:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1576,"name":"uint","nodeType":"ElementaryTypeName","src":"1950:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1582,"initialValue":{"arguments":[{"id":1579,"name":"rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"1982:11:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1580,"name":"dxblAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"1995:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1578,"name":"estimateRedemption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"1963:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1963:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1950:56:10"},{"assignments":[1585],"declarations":[{"constant":false,"id":1585,"mutability":"mutable","name":"vaultBal","nameLocation":"2312:8:10","nodeType":"VariableDeclaration","scope":1642,"src":"2307:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1584,"name":"uint","nodeType":"ElementaryTypeName","src":"2307:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"documentation":" NOTE: is it likely that there will be dust remaining for the asset due to USD\n rounding/precision.\n It will be redeemable once the balance acrues enough for the\n next burn request","id":1595,"initialValue":{"arguments":[{"arguments":[{"id":1592,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2361:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_CommunityVault_$1687","typeString":"contract CommunityVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CommunityVault_$1687","typeString":"contract CommunityVault"}],"id":1591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2353:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1590,"name":"address","nodeType":"ElementaryTypeName","src":"2353:7:10","typeDescriptions":{}}},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2353:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1587,"name":"rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"2330:11:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1586,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"2323:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$664_$","typeString":"type(contract IERC20)"}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2323:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2343:9:10","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":621,"src":"2323:29:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2323:44:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2307:60:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1596,"name":"wdAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"2432:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1597,"name":"vaultBal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"2440:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2432:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1614,"nodeType":"IfStatement","src":"2429:348:10","trueBody":{"id":1613,"nodeType":"Block","src":"2450:327:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1599,"name":"vaultBal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"2581:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1600,"name":"minOutAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"2593:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2581:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1611,"nodeType":"Block","src":"2662:105:10","statements":[{"expression":{"arguments":[{"hexValue":"496e73756666696369656e742061737365742062616c616e636520746f2070726f6475636520657870656374656420776974686472617720616d6f756e74","id":1608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2687:64:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_97744ca51cd6470aee5efe27d387a8940a50b552052552cdf56a25576fc02561","typeString":"literal_string \"Insufficient asset balance to produce expected withdraw amount\""},"value":"Insufficient asset balance to produce expected withdraw amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_97744ca51cd6470aee5efe27d387a8940a50b552052552cdf56a25576fc02561","typeString":"literal_string \"Insufficient asset balance to produce expected withdraw amount\""}],"id":1607,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"2680:6:10","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2680:72:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1610,"nodeType":"ExpressionStatement","src":"2680:72:10"}]},"id":1612,"nodeType":"IfStatement","src":"2578:189:10","trueBody":{"id":1606,"nodeType":"Block","src":"2607:49:10","statements":[{"expression":{"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1602,"name":"wdAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"2625:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1603,"name":"vaultBal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"2633:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2625:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1605,"nodeType":"ExpressionStatement","src":"2625:16:10"}]}}]}},{"expression":{"arguments":[{"expression":{"id":1619,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2877:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2881:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2877:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1621,"name":"wdAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"2889:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1616,"name":"rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"2851:11:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1615,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"2844:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$664_$","typeString":"type(contract IERC20)"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:12:10","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":757,"src":"2844:32:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$664_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$664_$","typeString":"function (contract IERC20,address,uint256)"}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1623,"nodeType":"ExpressionStatement","src":"2844:51:10"},{"expression":{"arguments":[{"expression":{"id":1629,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2945:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2949:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2945:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1631,"name":"dxblAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"2957:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":1624,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"2932:2:10","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":1627,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2935:4:10","memberName":"dxbl","nodeType":"MemberAccess","referencedDeclaration":2047,"src":"2932:7:10","typeDescriptions":{"typeIdentifier":"t_contract$_IDXBL_$1464","typeString":"contract IDXBL"}},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2940:4:10","memberName":"burn","nodeType":"MemberAccess","referencedDeclaration":1445,"src":"2932:12:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2932:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1633,"nodeType":"ExpressionStatement","src":"2932:36:10"},{"eventCall":{"arguments":[{"expression":{"id":1635,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2996:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3000:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2996:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1637,"name":"dxblAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"3008:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1638,"name":"rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"3020:11:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1639,"name":"wdAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"3033:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1634,"name":"DXBLRedeemed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"2983:12:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256,address,uint256)"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2983:56:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1641,"nodeType":"EmitStatement","src":"2978:61:10"}]},"functionSelector":"18ac3b15","id":1643,"implemented":true,"kind":"function","modifiers":[],"name":"redeemDXBL","nameLocation":"1479:10:10","nodeType":"FunctionDefinition","parameters":{"id":1549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1544,"mutability":"mutable","name":"rewardToken","nameLocation":"1498:11:10","nodeType":"VariableDeclaration","scope":1643,"src":"1490:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1543,"name":"address","nodeType":"ElementaryTypeName","src":"1490:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1546,"mutability":"mutable","name":"dxblAmount","nameLocation":"1516:10:10","nodeType":"VariableDeclaration","scope":1643,"src":"1511:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1545,"name":"uint","nodeType":"ElementaryTypeName","src":"1511:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1548,"mutability":"mutable","name":"minOutAmount","nameLocation":"1533:12:10","nodeType":"VariableDeclaration","scope":1643,"src":"1528:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1547,"name":"uint","nodeType":"ElementaryTypeName","src":"1528:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1489:57:10"},"returnParameters":{"id":1550,"nodeType":"ParameterList","parameters":[],"src":"1554:0:10"},"scope":1687,"src":"1470:1576:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1722],"body":{"id":1664,"nodeType":"Block","src":"3172:98:10","statements":[{"assignments":[1653],"declarations":[{"constant":false,"id":1653,"mutability":"mutable","name":"vs","nameLocation":"3213:2:10","nodeType":"VariableDeclaration","scope":1664,"src":"3182:33:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"},"typeName":{"id":1652,"nodeType":"UserDefinedTypeName","pathNode":{"id":1651,"name":"VaultStorage.VaultData","nameLocations":["3182:12:10","3195:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":2086,"src":"3182:22:10"},"referencedDeclaration":2086,"src":"3182:22:10","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"}},"visibility":"internal"}],"id":1657,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1654,"name":"VaultStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"3218:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VaultStorage_$2107_$","typeString":"type(library VaultStorage)"}},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3231:4:10","memberName":"load","nodeType":"MemberAccess","referencedDeclaration":2106,"src":"3218:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VaultData_$2086_storage_ptr_$","typeString":"function () pure returns (struct VaultStorage.VaultData storage pointer)"}},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3218:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3182:55:10"},{"expression":{"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1658,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"3247:2:10","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":1660,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3250:6:10","memberName":"paused","nodeType":"MemberAccess","referencedDeclaration":2042,"src":"3247:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3259:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3247:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1663,"nodeType":"ExpressionStatement","src":"3247:16:10"}]},"documentation":{"id":1644,"nodeType":"StructuredDocumentation","src":"3052:81:10","text":" Used in emergency situations when we need to hault operations."},"functionSelector":"8456cb59","id":1665,"implemented":true,"kind":"function","modifiers":[{"id":1647,"kind":"modifierInvocation","modifierName":{"id":1646,"name":"onlyAdmin","nameLocations":["3162:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":1511,"src":"3162:9:10"},"nodeType":"ModifierInvocation","src":"3162:9:10"}],"name":"pause","nameLocation":"3147:5:10","nodeType":"FunctionDefinition","parameters":{"id":1645,"nodeType":"ParameterList","parameters":[],"src":"3152:2:10"},"returnParameters":{"id":1648,"nodeType":"ParameterList","parameters":[],"src":"3172:0:10"},"scope":1687,"src":"3138:132:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1725],"body":{"id":1685,"nodeType":"Block","src":"3311:99:10","statements":[{"assignments":[1674],"declarations":[{"constant":false,"id":1674,"mutability":"mutable","name":"vs","nameLocation":"3352:2:10","nodeType":"VariableDeclaration","scope":1685,"src":"3321:33:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"},"typeName":{"id":1673,"nodeType":"UserDefinedTypeName","pathNode":{"id":1672,"name":"VaultStorage.VaultData","nameLocations":["3321:12:10","3334:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":2086,"src":"3321:22:10"},"referencedDeclaration":2086,"src":"3321:22:10","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"}},"visibility":"internal"}],"id":1678,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1675,"name":"VaultStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"3357:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VaultStorage_$2107_$","typeString":"type(library VaultStorage)"}},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3370:4:10","memberName":"load","nodeType":"MemberAccess","referencedDeclaration":2106,"src":"3357:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VaultData_$2086_storage_ptr_$","typeString":"function () pure returns (struct VaultStorage.VaultData storage pointer)"}},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3357:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3321:55:10"},{"expression":{"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1679,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"3386:2:10","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":1681,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3389:6:10","memberName":"paused","nodeType":"MemberAccess","referencedDeclaration":2042,"src":"3386:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3398:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3386:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1684,"nodeType":"ExpressionStatement","src":"3386:17:10"}]},"functionSelector":"046f7da2","id":1686,"implemented":true,"kind":"function","modifiers":[{"id":1668,"kind":"modifierInvocation","modifierName":{"id":1667,"name":"onlyAdmin","nameLocations":["3301:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":1511,"src":"3301:9:10"},"nodeType":"ModifierInvocation","src":"3301:9:10"}],"name":"resume","nameLocation":"3285:6:10","nodeType":"FunctionDefinition","parameters":{"id":1666,"nodeType":"ParameterList","parameters":[],"src":"3291:2:10"},"returnParameters":{"id":1669,"nodeType":"ParameterList","parameters":[],"src":"3311:0:10"},"scope":1687,"src":"3276:134:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":1688,"src":"934:3827:10","usedErrors":[]}],"src":"37:4724:10"},"id":10},"contracts/vault/ICommunityVault.sol":{"ast":{"absolutePath":"contracts/vault/ICommunityVault.sol","exportedSymbols":{"Context":[1358],"ERC20":[586],"ICommunityVault":[1726],"ICommunityVaultEvents":[1819],"IComputationalView":[1887],"IDXBL":[1464],"IERC20":[664],"IERC20Metadata":[689],"IPriceFeed":[1909],"IRewardHandler":[1922],"IStorageView":[1971],"V1Migrateable":[1990],"V1MigrationTarget":[1982],"VaultStorage":[2107]},"id":1727,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":1689,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"37:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":1690,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1727,"sourceUnit":587,"src":"64:55:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/vault/ICommunityVaultEvents.sol","file":"./ICommunityVaultEvents.sol","id":1691,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1727,"sourceUnit":1820,"src":"120:37:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/vault/V1Migrateable.sol","file":"./V1Migrateable.sol","id":1692,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1727,"sourceUnit":1991,"src":"158:29:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/vault/IStorageView.sol","file":"./IStorageView.sol","id":1693,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1727,"sourceUnit":1972,"src":"188:28:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/vault/IComputationalView.sol","file":"./IComputationalView.sol","id":1694,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1727,"sourceUnit":1888,"src":"217:34:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/vault/IRewardHandler.sol","file":"./IRewardHandler.sol","id":1695,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1727,"sourceUnit":1923,"src":"252:30:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1696,"name":"IStorageView","nameLocations":["313:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":1971,"src":"313:12:11"},"id":1697,"nodeType":"InheritanceSpecifier","src":"313:12:11"},{"baseName":{"id":1698,"name":"IComputationalView","nameLocations":["327:18:11"],"nodeType":"IdentifierPath","referencedDeclaration":1887,"src":"327:18:11"},"id":1699,"nodeType":"InheritanceSpecifier","src":"327:18:11"},{"baseName":{"id":1700,"name":"ICommunityVaultEvents","nameLocations":["347:21:11"],"nodeType":"IdentifierPath","referencedDeclaration":1819,"src":"347:21:11"},"id":1701,"nodeType":"InheritanceSpecifier","src":"347:21:11"},{"baseName":{"id":1702,"name":"V1Migrateable","nameLocations":["370:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":1990,"src":"370:13:11"},"id":1703,"nodeType":"InheritanceSpecifier","src":"370:13:11"}],"canonicalName":"ICommunityVault","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1726,"linearizedBaseContracts":[1726,1990,1819,1887,1971],"name":"ICommunityVault","nameLocation":"294:15:11","nodeType":"ContractDefinition","nodes":[{"functionSelector":"5d204718","id":1710,"implemented":false,"kind":"function","modifiers":[],"name":"isFeeTokenAllowed","nameLocation":"401:17:11","nodeType":"FunctionDefinition","parameters":{"id":1706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1705,"mutability":"mutable","name":"tokens","nameLocation":"427:6:11","nodeType":"VariableDeclaration","scope":1710,"src":"419:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1704,"name":"address","nodeType":"ElementaryTypeName","src":"419:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"418:16:11"},"returnParameters":{"id":1709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1710,"src":"458:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1707,"name":"bool","nodeType":"ElementaryTypeName","src":"458:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"457:6:11"},"scope":1726,"src":"392:72:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"18ac3b15","id":1719,"implemented":false,"kind":"function","modifiers":[],"name":"redeemDXBL","nameLocation":"483:10:11","nodeType":"FunctionDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1712,"mutability":"mutable","name":"feeToken","nameLocation":"502:8:11","nodeType":"VariableDeclaration","scope":1719,"src":"494:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1711,"name":"address","nodeType":"ElementaryTypeName","src":"494:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1714,"mutability":"mutable","name":"dxblAmount","nameLocation":"517:10:11","nodeType":"VariableDeclaration","scope":1719,"src":"512:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1713,"name":"uint","nodeType":"ElementaryTypeName","src":"512:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1716,"mutability":"mutable","name":"minOutAmount","nameLocation":"534:12:11","nodeType":"VariableDeclaration","scope":1719,"src":"529:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1715,"name":"uint","nodeType":"ElementaryTypeName","src":"529:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"493:54:11"},"returnParameters":{"id":1718,"nodeType":"ParameterList","parameters":[],"src":"556:0:11"},"scope":1726,"src":"474:83:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8456cb59","id":1722,"implemented":false,"kind":"function","modifiers":[],"name":"pause","nameLocation":"571:5:11","nodeType":"FunctionDefinition","parameters":{"id":1720,"nodeType":"ParameterList","parameters":[],"src":"576:2:11"},"returnParameters":{"id":1721,"nodeType":"ParameterList","parameters":[],"src":"587:0:11"},"scope":1726,"src":"562:26:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"046f7da2","id":1725,"implemented":false,"kind":"function","modifiers":[],"name":"resume","nameLocation":"602:6:11","nodeType":"FunctionDefinition","parameters":{"id":1723,"nodeType":"ParameterList","parameters":[],"src":"608:2:11"},"returnParameters":{"id":1724,"nodeType":"ParameterList","parameters":[],"src":"619:0:11"},"scope":1726,"src":"593:27:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1727,"src":"284:338:11","usedErrors":[]}],"src":"37:585:11"},"id":11},"contracts/vault/ICommunityVaultEvents.sol":{"ast":{"absolutePath":"contracts/vault/ICommunityVaultEvents.sol","exportedSymbols":{"ICommunityVaultEvents":[1819]},"id":1820,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":1728,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"37:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"ICommunityVaultEvents","contractDependencies":[],"contractKind":"interface","fullyImplemented":true,"id":1819,"linearizedBaseContracts":[1819],"name":"ICommunityVaultEvents","nameLocation":"73:21:12","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"7a9516d23e1d9c9fe5086469f7923af4f329aaf4a0b3d31cbb1a5ec9eaf15c47","id":1736,"name":"ProposedDiscountChange","nameLocation":"108:22:12","nodeType":"EventDefinition","parameters":{"id":1735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"indexed":false,"mutability":"mutable","name":"oldRate","nameLocation":"138:7:12","nodeType":"VariableDeclaration","scope":1736,"src":"131:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1729,"name":"uint32","nodeType":"ElementaryTypeName","src":"131:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1732,"indexed":false,"mutability":"mutable","name":"newRate","nameLocation":"154:7:12","nodeType":"VariableDeclaration","scope":1736,"src":"147:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1731,"name":"uint32","nodeType":"ElementaryTypeName","src":"147:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1734,"indexed":false,"mutability":"mutable","name":"allowedAfterTime","nameLocation":"168:16:12","nodeType":"VariableDeclaration","scope":1736,"src":"163:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1733,"name":"uint","nodeType":"ElementaryTypeName","src":"163:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"130:55:12"},"src":"102:84:12"},{"anonymous":false,"eventSelector":"53881c8b7d18e86edc0a6514bef415b157639dac60c80d3d31544cbf58c9ec08","id":1740,"name":"DiscountChanged","nameLocation":"197:15:12","nodeType":"EventDefinition","parameters":{"id":1739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1738,"indexed":false,"mutability":"mutable","name":"newRate","nameLocation":"220:7:12","nodeType":"VariableDeclaration","scope":1740,"src":"213:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1737,"name":"uint32","nodeType":"ElementaryTypeName","src":"213:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"212:16:12"},"src":"191:38:12"},{"anonymous":false,"eventSelector":"b701b00fcec461632f900687089ed4b3fc97136ec63a984ee50b8199303c5c71","id":1752,"name":"ProposedBpsChange","nameLocation":"241:17:12","nodeType":"EventDefinition","parameters":{"id":1751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1742,"indexed":false,"mutability":"mutable","name":"oldStdRate","nameLocation":"266:10:12","nodeType":"VariableDeclaration","scope":1752,"src":"259:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1741,"name":"uint32","nodeType":"ElementaryTypeName","src":"259:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1744,"indexed":false,"mutability":"mutable","name":"newStdRate","nameLocation":"285:10:12","nodeType":"VariableDeclaration","scope":1752,"src":"278:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1743,"name":"uint32","nodeType":"ElementaryTypeName","src":"278:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1746,"indexed":false,"mutability":"mutable","name":"oldMinRate","nameLocation":"304:10:12","nodeType":"VariableDeclaration","scope":1752,"src":"297:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1745,"name":"uint32","nodeType":"ElementaryTypeName","src":"297:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1748,"indexed":false,"mutability":"mutable","name":"newMinRate","nameLocation":"323:10:12","nodeType":"VariableDeclaration","scope":1752,"src":"316:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1747,"name":"uint32","nodeType":"ElementaryTypeName","src":"316:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1750,"indexed":false,"mutability":"mutable","name":"allowedAfterTime","nameLocation":"340:16:12","nodeType":"VariableDeclaration","scope":1752,"src":"335:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1749,"name":"uint","nodeType":"ElementaryTypeName","src":"335:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"258:99:12"},"src":"235:123:12"},{"anonymous":false,"eventSelector":"4a4a3f882e0512ea27a38d07cb3c47a40a17c7d448444a2a34b00597b5e8a3ee","id":1758,"name":"BpsChanged","nameLocation":"369:10:12","nodeType":"EventDefinition","parameters":{"id":1757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1754,"indexed":false,"mutability":"mutable","name":"stdRate","nameLocation":"387:7:12","nodeType":"VariableDeclaration","scope":1758,"src":"380:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1753,"name":"uint32","nodeType":"ElementaryTypeName","src":"380:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1756,"indexed":false,"mutability":"mutable","name":"minRate","nameLocation":"403:7:12","nodeType":"VariableDeclaration","scope":1758,"src":"396:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1755,"name":"uint32","nodeType":"ElementaryTypeName","src":"396:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"379:32:12"},"src":"363:49:12"},{"anonymous":false,"eventSelector":"677c8aa2038f9f1024b2fdb066905a389cd8f9b1bc12d26a2a23c94318e9dbac","id":1766,"name":"ProposedVolumeGoal","nameLocation":"424:18:12","nodeType":"EventDefinition","parameters":{"id":1765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1760,"indexed":false,"mutability":"mutable","name":"oldVolume","nameLocation":"448:9:12","nodeType":"VariableDeclaration","scope":1766,"src":"443:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1759,"name":"uint","nodeType":"ElementaryTypeName","src":"443:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1762,"indexed":false,"mutability":"mutable","name":"newVolume","nameLocation":"464:9:12","nodeType":"VariableDeclaration","scope":1766,"src":"459:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1761,"name":"uint","nodeType":"ElementaryTypeName","src":"459:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1764,"indexed":false,"mutability":"mutable","name":"allowedAfterTime","nameLocation":"480:16:12","nodeType":"VariableDeclaration","scope":1766,"src":"475:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1763,"name":"uint","nodeType":"ElementaryTypeName","src":"475:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"442:55:12"},"src":"418:80:12"},{"anonymous":false,"eventSelector":"2e9c319c94f1eb5d9710b04ad2e9fa72dec7b716bf4917a4cf462f3914c0628a","id":1770,"name":"AppliedVolumeGoal","nameLocation":"509:17:12","nodeType":"EventDefinition","parameters":{"id":1769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1768,"indexed":false,"mutability":"mutable","name":"newVolume","nameLocation":"532:9:12","nodeType":"VariableDeclaration","scope":1770,"src":"527:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1767,"name":"uint","nodeType":"ElementaryTypeName","src":"527:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"526:16:12"},"src":"503:40:12"},{"anonymous":false,"eventSelector":"3fb01cf81be92b0a57875dbae0b48e4638cf0d28f17426a10130f9ff818adb70","id":1780,"name":"ProposedMintRateChange","nameLocation":"555:22:12","nodeType":"EventDefinition","parameters":{"id":1779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1772,"indexed":false,"mutability":"mutable","name":"minThreshold","nameLocation":"585:12:12","nodeType":"VariableDeclaration","scope":1780,"src":"578:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1771,"name":"uint16","nodeType":"ElementaryTypeName","src":"578:6:12","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1774,"indexed":false,"mutability":"mutable","name":"maxThreshold","nameLocation":"606:12:12","nodeType":"VariableDeclaration","scope":1780,"src":"599:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1773,"name":"uint16","nodeType":"ElementaryTypeName","src":"599:6:12","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1776,"indexed":false,"mutability":"mutable","name":"percentage","nameLocation":"625:10:12","nodeType":"VariableDeclaration","scope":1780,"src":"620:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1775,"name":"uint","nodeType":"ElementaryTypeName","src":"620:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1778,"indexed":false,"mutability":"mutable","name":"allowedAfterTime","nameLocation":"642:16:12","nodeType":"VariableDeclaration","scope":1780,"src":"637:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1777,"name":"uint","nodeType":"ElementaryTypeName","src":"637:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"577:82:12"},"src":"549:111:12"},{"anonymous":false,"eventSelector":"8846af42c59e9e45098ee56beafe6e3e597ae51dc77a01dcb51cbb8ddafe75c8","id":1788,"name":"MintRateChange","nameLocation":"671:14:12","nodeType":"EventDefinition","parameters":{"id":1787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1782,"indexed":false,"mutability":"mutable","name":"minThreshold","nameLocation":"693:12:12","nodeType":"VariableDeclaration","scope":1788,"src":"686:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1781,"name":"uint16","nodeType":"ElementaryTypeName","src":"686:6:12","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1784,"indexed":false,"mutability":"mutable","name":"maxThreshold","nameLocation":"714:12:12","nodeType":"VariableDeclaration","scope":1788,"src":"707:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1783,"name":"uint16","nodeType":"ElementaryTypeName","src":"707:6:12","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1786,"indexed":false,"mutability":"mutable","name":"percentage","nameLocation":"733:10:12","nodeType":"VariableDeclaration","scope":1788,"src":"728:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1785,"name":"uint","nodeType":"ElementaryTypeName","src":"728:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"685:59:12"},"src":"665:80:12"},{"anonymous":false,"eventSelector":"8d622d926210e10c166a6da78132b6931e8fb3d90f9ecbf2edca718cd3735d1b","id":1798,"name":"ProposedFeeToken","nameLocation":"761:16:12","nodeType":"EventDefinition","parameters":{"id":1797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1790,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"794:5:12","nodeType":"VariableDeclaration","scope":1798,"src":"778:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1789,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1792,"indexed":true,"mutability":"mutable","name":"priceFeed","nameLocation":"817:9:12","nodeType":"VariableDeclaration","scope":1798,"src":"801:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1791,"name":"address","nodeType":"ElementaryTypeName","src":"801:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1794,"indexed":false,"mutability":"mutable","name":"removal","nameLocation":"833:7:12","nodeType":"VariableDeclaration","scope":1798,"src":"828:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1793,"name":"bool","nodeType":"ElementaryTypeName","src":"828:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1796,"indexed":false,"mutability":"mutable","name":"allowedAfterTime","nameLocation":"847:16:12","nodeType":"VariableDeclaration","scope":1798,"src":"842:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1795,"name":"uint","nodeType":"ElementaryTypeName","src":"842:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"777:87:12"},"src":"755:110:12"},{"anonymous":false,"eventSelector":"476995d897d51ad668905e2c73694b7f887c15f10e5ae435734fbea0b23dba18","id":1804,"name":"FeeTokenAdded","nameLocation":"876:13:12","nodeType":"EventDefinition","parameters":{"id":1803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1800,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"906:5:12","nodeType":"VariableDeclaration","scope":1804,"src":"890:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1799,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1802,"indexed":true,"mutability":"mutable","name":"priceFeed","nameLocation":"929:9:12","nodeType":"VariableDeclaration","scope":1804,"src":"913:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1801,"name":"address","nodeType":"ElementaryTypeName","src":"913:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:50:12"},"src":"870:70:12"},{"anonymous":false,"eventSelector":"1795838dc8ab2ffc5f431a1729a6afa0b587f982f7b2be0b9d7187a1ef547f91","id":1808,"name":"FeeTokenRemoved","nameLocation":"951:15:12","nodeType":"EventDefinition","parameters":{"id":1807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1806,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"983:5:12","nodeType":"VariableDeclaration","scope":1808,"src":"967:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1805,"name":"address","nodeType":"ElementaryTypeName","src":"967:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"966:23:12"},"src":"945:45:12"},{"anonymous":false,"eventSelector":"5fe85dc899e158274a44abab0e6df5434416f0ce11df30d42e02f229b8fc8a41","id":1818,"name":"DXBLRedeemed","nameLocation":"1001:12:12","nodeType":"EventDefinition","parameters":{"id":1817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1810,"indexed":false,"mutability":"mutable","name":"holder","nameLocation":"1022:6:12","nodeType":"VariableDeclaration","scope":1818,"src":"1014:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1809,"name":"address","nodeType":"ElementaryTypeName","src":"1014:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1812,"indexed":false,"mutability":"mutable","name":"dxblAmount","nameLocation":"1035:10:12","nodeType":"VariableDeclaration","scope":1818,"src":"1030:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1811,"name":"uint","nodeType":"ElementaryTypeName","src":"1030:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1814,"indexed":false,"mutability":"mutable","name":"rewardToken","nameLocation":"1055:11:12","nodeType":"VariableDeclaration","scope":1818,"src":"1047:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1813,"name":"address","nodeType":"ElementaryTypeName","src":"1047:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1816,"indexed":false,"mutability":"mutable","name":"rewardAmount","nameLocation":"1073:12:12","nodeType":"VariableDeclaration","scope":1818,"src":"1068:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1815,"name":"uint","nodeType":"ElementaryTypeName","src":"1068:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1013:73:12"},"src":"995:92:12"}],"scope":1820,"src":"63:1026:12","usedErrors":[]}],"src":"37:1052:12"},"id":12},"contracts/vault/IComputationalView.sol":{"ast":{"absolutePath":"contracts/vault/IComputationalView.sol","exportedSymbols":{"IComputationalView":[1887]},"id":1888,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":1821,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"37:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IComputationalView","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1887,"linearizedBaseContracts":[1887],"name":"IComputationalView","nameLocation":"73:18:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IComputationalView.AssetInfo","id":1830,"members":[{"constant":false,"id":1823,"mutability":"mutable","name":"token","nameLocation":"134:5:13","nodeType":"VariableDeclaration","scope":1830,"src":"126:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1822,"name":"address","nodeType":"ElementaryTypeName","src":"126:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1825,"mutability":"mutable","name":"balance","nameLocation":"154:7:13","nodeType":"VariableDeclaration","scope":1830,"src":"149:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1824,"name":"uint","nodeType":"ElementaryTypeName","src":"149:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1827,"mutability":"mutable","name":"usdValue","nameLocation":"176:8:13","nodeType":"VariableDeclaration","scope":1830,"src":"171:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1826,"name":"uint","nodeType":"ElementaryTypeName","src":"171:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1829,"mutability":"mutable","name":"usdPrice","nameLocation":"199:8:13","nodeType":"VariableDeclaration","scope":1830,"src":"194:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1828,"name":"uint","nodeType":"ElementaryTypeName","src":"194:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"AssetInfo","nameLocation":"106:9:13","nodeType":"StructDefinition","scope":1887,"src":"99:115:13","visibility":"public"},{"functionSelector":"3931f45d","id":1839,"implemented":false,"kind":"function","modifiers":[],"name":"convertGasToFeeToken","nameLocation":"229:20:13","nodeType":"FunctionDefinition","parameters":{"id":1835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"feeToken","nameLocation":"258:8:13","nodeType":"VariableDeclaration","scope":1839,"src":"250:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1831,"name":"address","nodeType":"ElementaryTypeName","src":"250:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1834,"mutability":"mutable","name":"gasCost","nameLocation":"273:7:13","nodeType":"VariableDeclaration","scope":1839,"src":"268:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1833,"name":"uint","nodeType":"ElementaryTypeName","src":"268:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"249:32:13"},"returnParameters":{"id":1838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1839,"src":"305:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1836,"name":"uint","nodeType":"ElementaryTypeName","src":"305:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"304:6:13"},"scope":1887,"src":"220:91:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7262f557","id":1848,"implemented":false,"kind":"function","modifiers":[],"name":"estimateRedemption","nameLocation":"325:18:13","nodeType":"FunctionDefinition","parameters":{"id":1844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1841,"mutability":"mutable","name":"feeToken","nameLocation":"352:8:13","nodeType":"VariableDeclaration","scope":1848,"src":"344:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1840,"name":"address","nodeType":"ElementaryTypeName","src":"344:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1843,"mutability":"mutable","name":"dxblAmount","nameLocation":"367:10:13","nodeType":"VariableDeclaration","scope":1848,"src":"362:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1842,"name":"uint","nodeType":"ElementaryTypeName","src":"362:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"343:35:13"},"returnParameters":{"id":1847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1848,"src":"401:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1845,"name":"uint","nodeType":"ElementaryTypeName","src":"401:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"400:6:13"},"scope":1887,"src":"316:91:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ce25cb4d","id":1855,"implemented":false,"kind":"function","modifiers":[],"name":"feeTokenPriceUSD","nameLocation":"421:16:13","nodeType":"FunctionDefinition","parameters":{"id":1851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1850,"mutability":"mutable","name":"feeToken","nameLocation":"446:8:13","nodeType":"VariableDeclaration","scope":1855,"src":"438:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1849,"name":"address","nodeType":"ElementaryTypeName","src":"438:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"437:18:13"},"returnParameters":{"id":1854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1855,"src":"479:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1852,"name":"uint","nodeType":"ElementaryTypeName","src":"479:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"478:6:13"},"scope":1887,"src":"412:73:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"20529bb1","id":1860,"implemented":false,"kind":"function","modifiers":[],"name":"aumUSD","nameLocation":"499:6:13","nodeType":"FunctionDefinition","parameters":{"id":1856,"nodeType":"ParameterList","parameters":[],"src":"505:2:13"},"returnParameters":{"id":1859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1860,"src":"530:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1857,"name":"uint","nodeType":"ElementaryTypeName","src":"530:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"529:6:13"},"scope":1887,"src":"490:46:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5de11890","id":1865,"implemented":false,"kind":"function","modifiers":[],"name":"currentNavUSD","nameLocation":"550:13:13","nodeType":"FunctionDefinition","parameters":{"id":1861,"nodeType":"ParameterList","parameters":[],"src":"563:2:13"},"returnParameters":{"id":1864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1865,"src":"588:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1862,"name":"uint","nodeType":"ElementaryTypeName","src":"588:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"587:6:13"},"scope":1887,"src":"541:53:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"71a97305","id":1872,"implemented":false,"kind":"function","modifiers":[],"name":"assets","nameLocation":"608:6:13","nodeType":"FunctionDefinition","parameters":{"id":1866,"nodeType":"ParameterList","parameters":[],"src":"614:2:13"},"returnParameters":{"id":1871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1872,"src":"640:18:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$1830_memory_ptr_$dyn_memory_ptr","typeString":"struct IComputationalView.AssetInfo[]"},"typeName":{"baseType":{"id":1868,"nodeType":"UserDefinedTypeName","pathNode":{"id":1867,"name":"AssetInfo","nameLocations":["640:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":1830,"src":"640:9:13"},"referencedDeclaration":1830,"src":"640:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$1830_storage_ptr","typeString":"struct IComputationalView.AssetInfo"}},"id":1869,"nodeType":"ArrayTypeName","src":"640:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$1830_storage_$dyn_storage_ptr","typeString":"struct IComputationalView.AssetInfo[]"}},"visibility":"internal"}],"src":"639:20:13"},"scope":1887,"src":"599:61:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"41b5774a","id":1877,"implemented":false,"kind":"function","modifiers":[],"name":"currentMintRateUSD","nameLocation":"674:18:13","nodeType":"FunctionDefinition","parameters":{"id":1873,"nodeType":"ParameterList","parameters":[],"src":"692:2:13"},"returnParameters":{"id":1876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1877,"src":"718:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1874,"name":"uint","nodeType":"ElementaryTypeName","src":"718:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"717:6:13"},"scope":1887,"src":"665:59:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f7406fc3","id":1886,"implemented":false,"kind":"function","modifiers":[],"name":"computeVolumeUSD","nameLocation":"738:16:13","nodeType":"FunctionDefinition","parameters":{"id":1882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1879,"mutability":"mutable","name":"feeToken","nameLocation":"763:8:13","nodeType":"VariableDeclaration","scope":1886,"src":"755:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1878,"name":"address","nodeType":"ElementaryTypeName","src":"755:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1881,"mutability":"mutable","name":"amount","nameLocation":"778:6:13","nodeType":"VariableDeclaration","scope":1886,"src":"773:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1880,"name":"uint","nodeType":"ElementaryTypeName","src":"773:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"754:31:13"},"returnParameters":{"id":1885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1886,"src":"808:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1883,"name":"uint","nodeType":"ElementaryTypeName","src":"808:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"807:6:13"},"scope":1887,"src":"729:85:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1888,"src":"63:754:13","usedErrors":[]}],"src":"37:780:13"},"id":13},"contracts/vault/IPriceFeed.sol":{"ast":{"absolutePath":"contracts/vault/IPriceFeed.sol","exportedSymbols":{"IPriceFeed":[1909]},"id":1910,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":1889,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"38:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IPriceFeed","contractDependencies":[],"contractKind":"interface","documentation":{"id":1890,"nodeType":"StructuredDocumentation","src":"64:47:14","text":" Interface for Chainlink oracle feeds"},"fullyImplemented":false,"id":1909,"linearizedBaseContracts":[1909],"name":"IPriceFeed","nameLocation":"122:10:14","nodeType":"ContractDefinition","nodes":[{"functionSelector":"feaf968c","id":1903,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"148:15:14","nodeType":"FunctionDefinition","parameters":{"id":1891,"nodeType":"ParameterList","parameters":[],"src":"163:2:14"},"returnParameters":{"id":1902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1893,"mutability":"mutable","name":"roundId","nameLocation":"209:7:14","nodeType":"VariableDeclaration","scope":1903,"src":"202:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":1892,"name":"uint80","nodeType":"ElementaryTypeName","src":"202:6:14","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":1895,"mutability":"mutable","name":"answer","nameLocation":"233:6:14","nodeType":"VariableDeclaration","scope":1903,"src":"226:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1894,"name":"int256","nodeType":"ElementaryTypeName","src":"226:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1897,"mutability":"mutable","name":"startedAt","nameLocation":"257:9:14","nodeType":"VariableDeclaration","scope":1903,"src":"249:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1896,"name":"uint256","nodeType":"ElementaryTypeName","src":"249:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1899,"mutability":"mutable","name":"updatedAt","nameLocation":"284:9:14","nodeType":"VariableDeclaration","scope":1903,"src":"276:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1898,"name":"uint256","nodeType":"ElementaryTypeName","src":"276:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1901,"mutability":"mutable","name":"answeredInRound","nameLocation":"310:15:14","nodeType":"VariableDeclaration","scope":1903,"src":"303:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":1900,"name":"uint80","nodeType":"ElementaryTypeName","src":"303:6:14","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"192:139:14"},"scope":1909,"src":"139:193:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":1908,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"346:8:14","nodeType":"FunctionDefinition","parameters":{"id":1904,"nodeType":"ParameterList","parameters":[],"src":"354:2:14"},"returnParameters":{"id":1907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1908,"src":"380:5:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1905,"name":"uint8","nodeType":"ElementaryTypeName","src":"380:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"379:7:14"},"scope":1909,"src":"337:50:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1910,"src":"112:277:14","usedErrors":[]}],"src":"38:351:14"},"id":14},"contracts/vault/IRewardHandler.sol":{"ast":{"absolutePath":"contracts/vault/IRewardHandler.sol","exportedSymbols":{"IRewardHandler":[1922]},"id":1923,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":1911,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"37:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IRewardHandler","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1922,"linearizedBaseContracts":[1922],"name":"IRewardHandler","nameLocation":"73:14:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1912,"nodeType":"StructuredDocumentation","src":"95:41:15","text":" Modification functions"},"functionSelector":"ab1094c0","id":1921,"implemented":false,"kind":"function","modifiers":[],"name":"rewardTrader","nameLocation":"150:12:15","nodeType":"FunctionDefinition","parameters":{"id":1919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1914,"mutability":"mutable","name":"trader","nameLocation":"171:6:15","nodeType":"VariableDeclaration","scope":1921,"src":"163:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1913,"name":"address","nodeType":"ElementaryTypeName","src":"163:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1916,"mutability":"mutable","name":"feeToken","nameLocation":"187:8:15","nodeType":"VariableDeclaration","scope":1921,"src":"179:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1915,"name":"address","nodeType":"ElementaryTypeName","src":"179:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1918,"mutability":"mutable","name":"amount","nameLocation":"202:6:15","nodeType":"VariableDeclaration","scope":1921,"src":"197:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1917,"name":"uint","nodeType":"ElementaryTypeName","src":"197:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"162:47:15"},"returnParameters":{"id":1920,"nodeType":"ParameterList","parameters":[],"src":"218:0:15"},"scope":1922,"src":"141:78:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1923,"src":"63:158:15","usedErrors":[]}],"src":"37:184:15"},"id":15},"contracts/vault/IStorageView.sol":{"ast":{"absolutePath":"contracts/vault/IStorageView.sol","exportedSymbols":{"IStorageView":[1971]},"id":1972,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":1924,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"37:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IStorageView","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1971,"linearizedBaseContracts":[1971],"name":"IStorageView","nameLocation":"73:12:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1925,"nodeType":"StructuredDocumentation","src":"93:50:16","text":" Storage variable view functions"},"functionSelector":"6c1f5633","id":1930,"implemented":false,"kind":"function","modifiers":[],"name":"discountBps","nameLocation":"157:11:16","nodeType":"FunctionDefinition","parameters":{"id":1926,"nodeType":"ParameterList","parameters":[],"src":"168:2:16"},"returnParameters":{"id":1929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1930,"src":"193:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1927,"name":"uint32","nodeType":"ElementaryTypeName","src":"193:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"192:8:16"},"scope":1971,"src":"148:53:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"82131470","id":1935,"implemented":false,"kind":"function","modifiers":[],"name":"dailyVolumeUSD","nameLocation":"215:14:16","nodeType":"FunctionDefinition","parameters":{"id":1931,"nodeType":"ParameterList","parameters":[],"src":"229:2:16"},"returnParameters":{"id":1934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1935,"src":"254:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1932,"name":"uint","nodeType":"ElementaryTypeName","src":"254:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"253:6:16"},"scope":1971,"src":"206:54:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5c975abb","id":1940,"implemented":false,"kind":"function","modifiers":[],"name":"paused","nameLocation":"274:6:16","nodeType":"FunctionDefinition","parameters":{"id":1936,"nodeType":"ParameterList","parameters":[],"src":"280:2:16"},"returnParameters":{"id":1939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1940,"src":"306:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1937,"name":"bool","nodeType":"ElementaryTypeName","src":"306:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"305:6:16"},"scope":1971,"src":"265:47:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"45c6a874","id":1945,"implemented":false,"kind":"function","modifiers":[],"name":"adminMultiSig","nameLocation":"326:13:16","nodeType":"FunctionDefinition","parameters":{"id":1941,"nodeType":"ParameterList","parameters":[],"src":"339:2:16"},"returnParameters":{"id":1944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1945,"src":"365:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1942,"name":"address","nodeType":"ElementaryTypeName","src":"365:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"364:9:16"},"scope":1971,"src":"317:57:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6162cb91","id":1950,"implemented":false,"kind":"function","modifiers":[],"name":"dxbl","nameLocation":"388:4:16","nodeType":"FunctionDefinition","parameters":{"id":1946,"nodeType":"ParameterList","parameters":[],"src":"392:2:16"},"returnParameters":{"id":1949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1950,"src":"418:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1947,"name":"address","nodeType":"ElementaryTypeName","src":"418:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"417:9:16"},"scope":1971,"src":"379:48:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a74aa566","id":1955,"implemented":false,"kind":"function","modifiers":[],"name":"dexible","nameLocation":"441:7:16","nodeType":"FunctionDefinition","parameters":{"id":1951,"nodeType":"ParameterList","parameters":[],"src":"448:2:16"},"returnParameters":{"id":1954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1955,"src":"474:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1952,"name":"address","nodeType":"ElementaryTypeName","src":"474:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"473:9:16"},"scope":1971,"src":"432:51:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"17fcb39b","id":1960,"implemented":false,"kind":"function","modifiers":[],"name":"wrappedNativeToken","nameLocation":"497:18:16","nodeType":"FunctionDefinition","parameters":{"id":1956,"nodeType":"ParameterList","parameters":[],"src":"515:2:16"},"returnParameters":{"id":1959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1960,"src":"541:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1957,"name":"address","nodeType":"ElementaryTypeName","src":"541:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"540:9:16"},"scope":1971,"src":"488:62:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"65a1f3c3","id":1965,"implemented":false,"kind":"function","modifiers":[],"name":"timelockSeconds","nameLocation":"564:15:16","nodeType":"FunctionDefinition","parameters":{"id":1961,"nodeType":"ParameterList","parameters":[],"src":"579:2:16"},"returnParameters":{"id":1964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1965,"src":"605:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1962,"name":"uint32","nodeType":"ElementaryTypeName","src":"605:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"604:8:16"},"scope":1971,"src":"555:58:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"56168843","id":1970,"implemented":false,"kind":"function","modifiers":[],"name":"baseMintThreshold","nameLocation":"627:17:16","nodeType":"FunctionDefinition","parameters":{"id":1966,"nodeType":"ParameterList","parameters":[],"src":"644:2:16"},"returnParameters":{"id":1969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1970,"src":"670:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1967,"name":"uint","nodeType":"ElementaryTypeName","src":"670:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"669:6:16"},"scope":1971,"src":"618:58:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1972,"src":"63:615:16","usedErrors":[]}],"src":"37:641:16"},"id":16},"contracts/vault/V1Migrateable.sol":{"ast":{"absolutePath":"contracts/vault/V1Migrateable.sol","exportedSymbols":{"IDXBL":[1464],"IERC20":[664],"IERC20Metadata":[689],"IPriceFeed":[1909],"V1Migrateable":[1990],"V1MigrationTarget":[1982],"VaultStorage":[2107]},"id":1991,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":1973,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"37:24:17"},{"absolutePath":"contracts/vault/VaultStorage.sol","file":"./VaultStorage.sol","id":1974,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1991,"sourceUnit":2108,"src":"63:28:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"V1MigrationTarget","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1982,"linearizedBaseContracts":[1982],"name":"V1MigrationTarget","nameLocation":"103:17:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1975,"nodeType":"StructuredDocumentation","src":"127:97:17","text":" Call from current vault to migrate the state of the old vault to the new one. "},"functionSelector":"5864de4e","id":1981,"implemented":false,"kind":"function","modifiers":[],"name":"migrationFromV1","nameLocation":"238:15:17","nodeType":"FunctionDefinition","parameters":{"id":1979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1978,"mutability":"mutable","name":"data","nameLocation":"291:4:17","nodeType":"VariableDeclaration","scope":1981,"src":"254:41:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VaultMigrationV1_$2098_memory_ptr","typeString":"struct VaultStorage.VaultMigrationV1"},"typeName":{"id":1977,"nodeType":"UserDefinedTypeName","pathNode":{"id":1976,"name":"VaultStorage.VaultMigrationV1","nameLocations":["254:12:17","267:16:17"],"nodeType":"IdentifierPath","referencedDeclaration":2098,"src":"254:29:17"},"referencedDeclaration":2098,"src":"254:29:17","typeDescriptions":{"typeIdentifier":"t_struct$_VaultMigrationV1_$2098_storage_ptr","typeString":"struct VaultStorage.VaultMigrationV1"}},"visibility":"internal"}],"src":"253:43:17"},"returnParameters":{"id":1980,"nodeType":"ParameterList","parameters":[],"src":"305:0:17"},"scope":1982,"src":"229:77:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1991,"src":"93:215:17","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"V1Migrateable","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1990,"linearizedBaseContracts":[1990],"name":"V1Migrateable","nameLocation":"320:13:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1983,"nodeType":"StructuredDocumentation","src":"341:200:17","text":" Migrate the vault to a new vault address that implements the target interface\n to receive this vault's state. This will transfer all fee token assets to the \n new vault."},"functionSelector":"c76380b7","id":1989,"implemented":false,"kind":"function","modifiers":[],"name":"migrateV1","nameLocation":"555:9:17","nodeType":"FunctionDefinition","parameters":{"id":1987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1986,"mutability":"mutable","name":"newVault","nameLocation":"583:8:17","nodeType":"VariableDeclaration","scope":1989,"src":"565:26:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_V1MigrationTarget_$1982","typeString":"contract V1MigrationTarget"},"typeName":{"id":1985,"nodeType":"UserDefinedTypeName","pathNode":{"id":1984,"name":"V1MigrationTarget","nameLocations":["565:17:17"],"nodeType":"IdentifierPath","referencedDeclaration":1982,"src":"565:17:17"},"referencedDeclaration":1982,"src":"565:17:17","typeDescriptions":{"typeIdentifier":"t_contract$_V1MigrationTarget_$1982","typeString":"contract V1MigrationTarget"}},"visibility":"internal"}],"src":"564:28:17"},"returnParameters":{"id":1988,"nodeType":"ParameterList","parameters":[],"src":"601:0:17"},"scope":1990,"src":"546:56:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1991,"src":"310:299:17","usedErrors":[]}],"src":"37:572:17"},"id":17},"contracts/vault/VaultStorage.sol":{"ast":{"absolutePath":"contracts/vault/VaultStorage.sol","exportedSymbols":{"IDXBL":[1464],"IERC20":[664],"IERC20Metadata":[689],"IPriceFeed":[1909],"VaultStorage":[2107]},"id":2108,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":1992,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"37:24:18"},{"absolutePath":"contracts/token/IDXBL.sol","file":"../token/IDXBL.sol","id":1993,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2108,"sourceUnit":1465,"src":"63:28:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/vault/IPriceFeed.sol","file":"./IPriceFeed.sol","id":1994,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2108,"sourceUnit":1910,"src":"92:26:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"VaultStorage","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":2107,"linearizedBaseContracts":[2107],"name":"VaultStorage","nameLocation":"128:12:18","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1997,"mutability":"constant","name":"VAULT_STORAGE_KEY","nameLocation":"165:17:18","nodeType":"VariableDeclaration","scope":2107,"src":"148:103:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1995,"name":"bytes32","nodeType":"ElementaryTypeName","src":"148:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862666137366563323936376564376638643364343063643535326631343531616230333537336235393662666365393331613661303136663737333330373863","id":1996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"185:66:18","typeDescriptions":{"typeIdentifier":"t_rational_86687581977398694949020020634703355319415521613498695067684755871716623976332_by_1","typeString":"int_const 8668...(69 digits omitted)...6332"},"value":"0xbfa76ec2967ed7f8d3d40cd552f1451ab03573b596bfce931a6a016f7733078c"},"visibility":"internal"},{"canonicalName":"VaultStorage.MintRateRangeConfig","id":2004,"members":[{"constant":false,"id":1999,"mutability":"mutable","name":"minMMVolume","nameLocation":"529:11:18","nodeType":"VariableDeclaration","scope":2004,"src":"522:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1998,"name":"uint16","nodeType":"ElementaryTypeName","src":"522:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2001,"mutability":"mutable","name":"maxMMVolume","nameLocation":"557:11:18","nodeType":"VariableDeclaration","scope":2004,"src":"550:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2000,"name":"uint16","nodeType":"ElementaryTypeName","src":"550:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2003,"mutability":"mutable","name":"rate","nameLocation":"583:4:18","nodeType":"VariableDeclaration","scope":2004,"src":"578:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2002,"name":"uint","nodeType":"ElementaryTypeName","src":"578:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"MintRateRangeConfig","nameLocation":"492:19:18","nodeType":"StructDefinition","scope":2107,"src":"485:109:18","visibility":"public"},{"canonicalName":"VaultStorage.FeeTokenConfig","id":2011,"members":[{"constant":false,"id":2007,"mutability":"mutable","name":"feeTokens","nameLocation":"692:9:18","nodeType":"VariableDeclaration","scope":2011,"src":"682:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2005,"name":"address","nodeType":"ElementaryTypeName","src":"682:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2006,"nodeType":"ArrayTypeName","src":"682:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2010,"mutability":"mutable","name":"priceFeeds","nameLocation":"721:10:18","nodeType":"VariableDeclaration","scope":2011,"src":"711:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2008,"name":"address","nodeType":"ElementaryTypeName","src":"711:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2009,"nodeType":"ArrayTypeName","src":"711:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"name":"FeeTokenConfig","nameLocation":"657:14:18","nodeType":"StructDefinition","scope":2107,"src":"650:88:18","visibility":"public"},{"canonicalName":"VaultStorage.VaultConfig","id":2025,"members":[{"constant":false,"id":2013,"mutability":"mutable","name":"wrappedNativeToken","nameLocation":"877:18:18","nodeType":"VariableDeclaration","scope":2025,"src":"869:26:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2012,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2015,"mutability":"mutable","name":"adminMultiSig","nameLocation":"980:13:18","nodeType":"VariableDeclaration","scope":2025,"src":"972:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2014,"name":"address","nodeType":"ElementaryTypeName","src":"972:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2017,"mutability":"mutable","name":"baseMintThreshold","nameLocation":"1140:17:18","nodeType":"VariableDeclaration","scope":2025,"src":"1135:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2016,"name":"uint","nodeType":"ElementaryTypeName","src":"1135:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2021,"mutability":"mutable","name":"rateRanges","nameLocation":"1229:10:18","nodeType":"VariableDeclaration","scope":2025,"src":"1207:32:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MintRateRangeConfig_$2004_storage_$dyn_storage_ptr","typeString":"struct VaultStorage.MintRateRangeConfig[]"},"typeName":{"baseType":{"id":2019,"nodeType":"UserDefinedTypeName","pathNode":{"id":2018,"name":"MintRateRangeConfig","nameLocations":["1207:19:18"],"nodeType":"IdentifierPath","referencedDeclaration":2004,"src":"1207:19:18"},"referencedDeclaration":2004,"src":"1207:19:18","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRangeConfig_$2004_storage_ptr","typeString":"struct VaultStorage.MintRateRangeConfig"}},"id":2020,"nodeType":"ArrayTypeName","src":"1207:21:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MintRateRangeConfig_$2004_storage_$dyn_storage_ptr","typeString":"struct VaultStorage.MintRateRangeConfig[]"}},"visibility":"internal"},{"constant":false,"id":2024,"mutability":"mutable","name":"feeTokenConfig","nameLocation":"1328:14:18","nodeType":"VariableDeclaration","scope":2025,"src":"1313:29:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_FeeTokenConfig_$2011_storage_ptr","typeString":"struct VaultStorage.FeeTokenConfig"},"typeName":{"id":2023,"nodeType":"UserDefinedTypeName","pathNode":{"id":2022,"name":"FeeTokenConfig","nameLocations":["1313:14:18"],"nodeType":"IdentifierPath","referencedDeclaration":2011,"src":"1313:14:18"},"referencedDeclaration":2011,"src":"1313:14:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeTokenConfig_$2011_storage_ptr","typeString":"struct VaultStorage.FeeTokenConfig"}},"visibility":"internal"}],"name":"VaultConfig","nameLocation":"796:11:18","nodeType":"StructDefinition","scope":2107,"src":"789:560:18","visibility":"public"},{"canonicalName":"VaultStorage.MintRateRange","id":2034,"members":[{"constant":false,"id":2027,"mutability":"mutable","name":"minMMVolume","nameLocation":"1611:11:18","nodeType":"VariableDeclaration","scope":2034,"src":"1604:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2026,"name":"uint16","nodeType":"ElementaryTypeName","src":"1604:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2029,"mutability":"mutable","name":"maxMMVolume","nameLocation":"1639:11:18","nodeType":"VariableDeclaration","scope":2034,"src":"1632:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2028,"name":"uint16","nodeType":"ElementaryTypeName","src":"1632:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2031,"mutability":"mutable","name":"rate","nameLocation":"1665:4:18","nodeType":"VariableDeclaration","scope":2034,"src":"1660:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2030,"name":"uint","nodeType":"ElementaryTypeName","src":"1660:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2033,"mutability":"mutable","name":"index","nameLocation":"1684:5:18","nodeType":"VariableDeclaration","scope":2034,"src":"1679:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2032,"name":"uint","nodeType":"ElementaryTypeName","src":"1679:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"MintRateRange","nameLocation":"1580:13:18","nodeType":"StructDefinition","scope":2107,"src":"1573:123:18","visibility":"public"},{"canonicalName":"VaultStorage.PriceFeed","id":2040,"members":[{"constant":false,"id":2037,"mutability":"mutable","name":"feed","nameLocation":"1773:4:18","nodeType":"VariableDeclaration","scope":2040,"src":"1762:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceFeed_$1909","typeString":"contract IPriceFeed"},"typeName":{"id":2036,"nodeType":"UserDefinedTypeName","pathNode":{"id":2035,"name":"IPriceFeed","nameLocations":["1762:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":1909,"src":"1762:10:18"},"referencedDeclaration":1909,"src":"1762:10:18","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceFeed_$1909","typeString":"contract IPriceFeed"}},"visibility":"internal"},{"constant":false,"id":2039,"mutability":"mutable","name":"decimals","nameLocation":"1793:8:18","nodeType":"VariableDeclaration","scope":2040,"src":"1787:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2038,"name":"uint8","nodeType":"ElementaryTypeName","src":"1787:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"PriceFeed","nameLocation":"1742:9:18","nodeType":"StructDefinition","scope":2107,"src":"1735:73:18","visibility":"public"},{"canonicalName":"VaultStorage.VaultData","id":2086,"members":[{"constant":false,"id":2042,"mutability":"mutable","name":"paused","nameLocation":"2100:6:18","nodeType":"VariableDeclaration","scope":2086,"src":"2095:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2041,"name":"bool","nodeType":"ElementaryTypeName","src":"2095:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2044,"mutability":"mutable","name":"adminMultiSig","nameLocation":"2151:13:18","nodeType":"VariableDeclaration","scope":2086,"src":"2143:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2043,"name":"address","nodeType":"ElementaryTypeName","src":"2143:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2047,"mutability":"mutable","name":"dxbl","nameLocation":"2205:4:18","nodeType":"VariableDeclaration","scope":2086,"src":"2199:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IDXBL_$1464","typeString":"contract IDXBL"},"typeName":{"id":2046,"nodeType":"UserDefinedTypeName","pathNode":{"id":2045,"name":"IDXBL","nameLocations":["2199:5:18"],"nodeType":"IdentifierPath","referencedDeclaration":1464,"src":"2199:5:18"},"referencedDeclaration":1464,"src":"2199:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IDXBL_$1464","typeString":"contract IDXBL"}},"visibility":"internal"},{"constant":false,"id":2049,"mutability":"mutable","name":"dexible","nameLocation":"2300:7:18","nodeType":"VariableDeclaration","scope":2086,"src":"2292:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2048,"name":"address","nodeType":"ElementaryTypeName","src":"2292:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2051,"mutability":"mutable","name":"wrappedNativeToken","nameLocation":"2385:18:18","nodeType":"VariableDeclaration","scope":2086,"src":"2377:26:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2050,"name":"address","nodeType":"ElementaryTypeName","src":"2377:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2053,"mutability":"mutable","name":"timelockSeconds","nameLocation":"2461:15:18","nodeType":"VariableDeclaration","scope":2086,"src":"2454:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2052,"name":"uint32","nodeType":"ElementaryTypeName","src":"2454:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2055,"mutability":"mutable","name":"baseMintThreshold","nameLocation":"2619:17:18","nodeType":"VariableDeclaration","scope":2086,"src":"2614:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2054,"name":"uint","nodeType":"ElementaryTypeName","src":"2614:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2057,"mutability":"mutable","name":"currentVolume","nameLocation":"2702:13:18","nodeType":"VariableDeclaration","scope":2086,"src":"2697:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2056,"name":"uint","nodeType":"ElementaryTypeName","src":"2697:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2059,"mutability":"mutable","name":"lastTradeTimestamp","nameLocation":"2797:18:18","nodeType":"VariableDeclaration","scope":2086,"src":"2792:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2058,"name":"uint","nodeType":"ElementaryTypeName","src":"2792:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2061,"mutability":"mutable","name":"migrateAfterTime","nameLocation":"2897:16:18","nodeType":"VariableDeclaration","scope":2086,"src":"2892:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2060,"name":"uint","nodeType":"ElementaryTypeName","src":"2892:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2065,"mutability":"mutable","name":"feeTokens","nameLocation":"2986:9:18","nodeType":"VariableDeclaration","scope":2086,"src":"2977:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$664_$dyn_storage_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":2063,"nodeType":"UserDefinedTypeName","pathNode":{"id":2062,"name":"IERC20","nameLocations":["2977:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"2977:6:18"},"referencedDeclaration":664,"src":"2977:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"id":2064,"nodeType":"ArrayTypeName","src":"2977:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$664_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":2068,"mutability":"mutable","name":"currentMintRate","nameLocation":"3088:15:18","nodeType":"VariableDeclaration","scope":2086,"src":"3074:29:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_storage_ptr","typeString":"struct VaultStorage.MintRateRange"},"typeName":{"id":2067,"nodeType":"UserDefinedTypeName","pathNode":{"id":2066,"name":"MintRateRange","nameLocations":["3074:13:18"],"nodeType":"IdentifierPath","referencedDeclaration":2034,"src":"3074:13:18"},"referencedDeclaration":2034,"src":"3074:13:18","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_storage_ptr","typeString":"struct VaultStorage.MintRateRange"}},"visibility":"internal"},{"constant":false,"id":2072,"mutability":"mutable","name":"mintRateRanges","nameLocation":"3237:14:18","nodeType":"VariableDeclaration","scope":2086,"src":"3221:30:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MintRateRange_$2034_storage_$dyn_storage_ptr","typeString":"struct VaultStorage.MintRateRange[]"},"typeName":{"baseType":{"id":2070,"nodeType":"UserDefinedTypeName","pathNode":{"id":2069,"name":"MintRateRange","nameLocations":["3221:13:18"],"nodeType":"IdentifierPath","referencedDeclaration":2034,"src":"3221:13:18"},"referencedDeclaration":2034,"src":"3221:13:18","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_storage_ptr","typeString":"struct VaultStorage.MintRateRange"}},"id":2071,"nodeType":"ArrayTypeName","src":"3221:15:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MintRateRange_$2034_storage_$dyn_storage_ptr","typeString":"struct VaultStorage.MintRateRange[]"}},"visibility":"internal"},{"constant":false,"id":2076,"mutability":"mutable","name":"hourlyVolume","nameLocation":"3344:12:18","nodeType":"VariableDeclaration","scope":2086,"src":"3335:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$24_storage_ptr","typeString":"uint256[24]"},"typeName":{"baseType":{"id":2073,"name":"uint","nodeType":"ElementaryTypeName","src":"3335:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2075,"length":{"hexValue":"3234","id":2074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3340:2:18","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"nodeType":"ArrayTypeName","src":"3335:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$24_storage_ptr","typeString":"uint256[24]"}},"visibility":"internal"},{"constant":false,"id":2080,"mutability":"mutable","name":"tokenDecimals","nameLocation":"3422:13:18","nodeType":"VariableDeclaration","scope":2086,"src":"3396:39:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint8_$","typeString":"mapping(address => uint8)"},"typeName":{"id":2079,"keyType":{"id":2077,"name":"address","nodeType":"ElementaryTypeName","src":"3404:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3396:25:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint8_$","typeString":"mapping(address => uint8)"},"valueType":{"id":2078,"name":"uint8","nodeType":"ElementaryTypeName","src":"3415:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}},"visibility":"internal"},{"constant":false,"id":2085,"mutability":"mutable","name":"allowedFeeTokens","nameLocation":"3544:16:18","nodeType":"VariableDeclaration","scope":2086,"src":"3514:46:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PriceFeed_$2040_storage_$","typeString":"mapping(address => struct VaultStorage.PriceFeed)"},"typeName":{"id":2084,"keyType":{"id":2081,"name":"address","nodeType":"ElementaryTypeName","src":"3522:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3514:29:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PriceFeed_$2040_storage_$","typeString":"mapping(address => struct VaultStorage.PriceFeed)"},"valueType":{"id":2083,"nodeType":"UserDefinedTypeName","pathNode":{"id":2082,"name":"PriceFeed","nameLocations":["3533:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":2040,"src":"3533:9:18"},"referencedDeclaration":2040,"src":"3533:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$2040_storage_ptr","typeString":"struct VaultStorage.PriceFeed"}}},"visibility":"internal"}],"name":"VaultData","nameLocation":"2037:9:18","nodeType":"StructDefinition","scope":2107,"src":"2030:1537:18","visibility":"public"},{"canonicalName":"VaultStorage.VaultMigrationV1","id":2098,"members":[{"constant":false,"id":2088,"mutability":"mutable","name":"currentVolume","nameLocation":"4163:13:18","nodeType":"VariableDeclaration","scope":2098,"src":"4158:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2087,"name":"uint","nodeType":"ElementaryTypeName","src":"4158:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2090,"mutability":"mutable","name":"lastTradeTimestamp","nameLocation":"4258:18:18","nodeType":"VariableDeclaration","scope":2098,"src":"4253:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2089,"name":"uint","nodeType":"ElementaryTypeName","src":"4253:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2094,"mutability":"mutable","name":"hourlyVolume","nameLocation":"4353:12:18","nodeType":"VariableDeclaration","scope":2098,"src":"4344:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$24_storage_ptr","typeString":"uint256[24]"},"typeName":{"baseType":{"id":2091,"name":"uint","nodeType":"ElementaryTypeName","src":"4344:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2093,"length":{"hexValue":"3234","id":2092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4349:2:18","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"nodeType":"ArrayTypeName","src":"4344:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$24_storage_ptr","typeString":"uint256[24]"}},"visibility":"internal"},{"constant":false,"id":2097,"mutability":"mutable","name":"currentMintRate","nameLocation":"4458:15:18","nodeType":"VariableDeclaration","scope":2098,"src":"4444:29:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_storage_ptr","typeString":"struct VaultStorage.MintRateRange"},"typeName":{"id":2096,"nodeType":"UserDefinedTypeName","pathNode":{"id":2095,"name":"MintRateRange","nameLocations":["4444:13:18"],"nodeType":"IdentifierPath","referencedDeclaration":2034,"src":"4444:13:18"},"referencedDeclaration":2034,"src":"4444:13:18","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_storage_ptr","typeString":"struct VaultStorage.MintRateRange"}},"visibility":"internal"}],"name":"VaultMigrationV1","nameLocation":"4081:16:18","nodeType":"StructDefinition","scope":2107,"src":"4074:406:18","visibility":"public"},{"body":{"id":2105,"nodeType":"Block","src":"4547:57:18","statements":[{"AST":{"nodeType":"YulBlock","src":"4566:32:18","statements":[{"nodeType":"YulAssignment","src":"4568:28:18","value":{"name":"VAULT_STORAGE_KEY","nodeType":"YulIdentifier","src":"4579:17:18"},"variableNames":[{"name":"ds.slot","nodeType":"YulIdentifier","src":"4568:7:18"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1997,"isOffset":false,"isSlot":false,"src":"4579:17:18","valueSize":1},{"declaration":2102,"isOffset":false,"isSlot":true,"src":"4568:7:18","suffix":"slot","valueSize":1}],"id":2104,"nodeType":"InlineAssembly","src":"4557:41:18"}]},"id":2106,"implemented":true,"kind":"function","modifiers":[],"name":"load","nameLocation":"4495:4:18","nodeType":"FunctionDefinition","parameters":{"id":2099,"nodeType":"ParameterList","parameters":[],"src":"4499:2:18"},"returnParameters":{"id":2103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2102,"mutability":"mutable","name":"ds","nameLocation":"4543:2:18","nodeType":"VariableDeclaration","scope":2106,"src":"4525:20:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"},"typeName":{"id":2101,"nodeType":"UserDefinedTypeName","pathNode":{"id":2100,"name":"VaultData","nameLocations":["4525:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":2086,"src":"4525:9:18"},"referencedDeclaration":2086,"src":"4525:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"}},"visibility":"internal"}],"src":"4524:22:18"},"scope":2107,"src":"4486:118:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2108,"src":"120:4486:18","usedErrors":[]}],"src":"37:4569:18"},"id":18},"contracts/vault/baseContracts/ComputationalView.sol":{"ast":{"absolutePath":"contracts/vault/baseContracts/ComputationalView.sol","exportedSymbols":{"ComputationalView":[2764],"IComputationalView":[1887],"IDXBL":[1464],"IERC20":[664],"IERC20Metadata":[689],"IPriceFeed":[1909],"LibConstants":[1389],"VaultStorage":[2107]},"id":2765,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":2109,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"37:24:19"},{"absolutePath":"contracts/vault/VaultStorage.sol","file":"../VaultStorage.sol","id":2110,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2765,"sourceUnit":2108,"src":"63:29:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/vault/IComputationalView.sol","file":"../IComputationalView.sol","id":2111,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2765,"sourceUnit":1888,"src":"93:35:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/common/LibConstants.sol","file":"../../common/LibConstants.sol","id":2112,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2765,"sourceUnit":1390,"src":"129:39:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2113,"name":"IComputationalView","nameLocations":["200:18:19"],"nodeType":"IdentifierPath","referencedDeclaration":1887,"src":"200:18:19"},"id":2114,"nodeType":"InheritanceSpecifier","src":"200:18:19"}],"canonicalName":"ComputationalView","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2764,"linearizedBaseContracts":[2764,1887],"name":"ComputationalView","nameLocation":"179:17:19","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1839],"body":{"id":2192,"nodeType":"Block","src":"314:568:19","statements":[{"assignments":[2127],"declarations":[{"constant":false,"id":2127,"mutability":"mutable","name":"rs","nameLocation":"355:2:19","nodeType":"VariableDeclaration","scope":2192,"src":"324:33:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"},"typeName":{"id":2126,"nodeType":"UserDefinedTypeName","pathNode":{"id":2125,"name":"VaultStorage.VaultData","nameLocations":["324:12:19","337:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":2086,"src":"324:22:19"},"referencedDeclaration":2086,"src":"324:22:19","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"}},"visibility":"internal"}],"id":2131,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2128,"name":"VaultStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"360:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VaultStorage_$2107_$","typeString":"type(library VaultStorage)"}},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"373:4:19","memberName":"load","nodeType":"MemberAccess","referencedDeclaration":2106,"src":"360:17:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VaultData_$2086_storage_ptr_$","typeString":"function () pure returns (struct VaultStorage.VaultData storage pointer)"}},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"360:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"324:55:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2132,"name":"feeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"393:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2133,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"405:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":2134,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"408:18:19","memberName":"wrappedNativeToken","nodeType":"MemberAccess","referencedDeclaration":2051,"src":"405:21:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"393:33:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2139,"nodeType":"IfStatement","src":"390:115:19","trueBody":{"id":2138,"nodeType":"Block","src":"428:77:19","statements":[{"expression":{"id":2136,"name":"gasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"487:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2122,"id":2137,"nodeType":"Return","src":"480:14:19"}]}},{"assignments":[2141],"declarations":[{"constant":false,"id":2141,"mutability":"mutable","name":"np","nameLocation":"519:2:19","nodeType":"VariableDeclaration","scope":2192,"src":"514:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2140,"name":"uint","nodeType":"ElementaryTypeName","src":"514:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2149,"initialValue":{"arguments":[{"baseExpression":{"expression":{"id":2143,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"534:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":2144,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"537:16:19","memberName":"allowedFeeTokens","nodeType":"MemberAccess","referencedDeclaration":2085,"src":"534:19:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PriceFeed_$2040_storage_$","typeString":"mapping(address => struct VaultStorage.PriceFeed storage ref)"}},"id":2147,"indexExpression":{"expression":{"id":2145,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"554:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":2146,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"557:18:19","memberName":"wrappedNativeToken","nodeType":"MemberAccess","referencedDeclaration":2051,"src":"554:21:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"534:42:19","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$2040_storage","typeString":"struct VaultStorage.PriceFeed storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PriceFeed_$2040_storage","typeString":"struct VaultStorage.PriceFeed storage ref"}],"id":2142,"name":"_getPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"524:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_PriceFeed_$2040_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct VaultStorage.PriceFeed storage pointer) view returns (uint256)"}},"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"524:53:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"514:63:19"},{"assignments":[2151],"declarations":[{"constant":false,"id":2151,"mutability":"mutable","name":"ftp","nameLocation":"592:3:19","nodeType":"VariableDeclaration","scope":2192,"src":"587:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2150,"name":"uint","nodeType":"ElementaryTypeName","src":"587:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2158,"initialValue":{"arguments":[{"baseExpression":{"expression":{"id":2153,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"608:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":2154,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"611:16:19","memberName":"allowedFeeTokens","nodeType":"MemberAccess","referencedDeclaration":2085,"src":"608:19:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PriceFeed_$2040_storage_$","typeString":"mapping(address => struct VaultStorage.PriceFeed storage ref)"}},"id":2156,"indexExpression":{"id":2155,"name":"feeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"628:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"608:29:19","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$2040_storage","typeString":"struct VaultStorage.PriceFeed storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PriceFeed_$2040_storage","typeString":"struct VaultStorage.PriceFeed storage ref"}],"id":2152,"name":"_getPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"598:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_PriceFeed_$2040_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct VaultStorage.PriceFeed storage pointer) view returns (uint256)"}},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"598:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"587:51:19"},{"assignments":[2160],"declarations":[{"constant":false,"id":2160,"mutability":"mutable","name":"ftpNative","nameLocation":"653:9:19","nodeType":"VariableDeclaration","scope":2192,"src":"648:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2159,"name":"uint","nodeType":"ElementaryTypeName","src":"648:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2168,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2161,"name":"np","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"666:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":2162,"name":"LibConstants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"669:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibConstants_$1389_$","typeString":"type(library LibConstants)"}},"id":2163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"682:15:19","memberName":"PRICE_PRECISION","nodeType":"MemberAccess","referencedDeclaration":1382,"src":"669:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"666:31:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2165,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"665:33:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2166,"name":"ftp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"699:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"665:37:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"648:54:19"},{"assignments":[2170],"declarations":[{"constant":false,"id":2170,"mutability":"mutable","name":"ftpUnits","nameLocation":"717:8:19","nodeType":"VariableDeclaration","scope":2192,"src":"712:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2169,"name":"uint","nodeType":"ElementaryTypeName","src":"712:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2178,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2171,"name":"ftpNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"729:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2172,"name":"gasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"741:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"729:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2174,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"728:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":2175,"name":"LibConstants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"752:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibConstants_$1389_$","typeString":"type(library LibConstants)"}},"id":2176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"765:15:19","memberName":"PRICE_PRECISION","nodeType":"MemberAccess","referencedDeclaration":1382,"src":"752:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"728:52:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"712:68:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2179,"name":"ftpUnits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"798:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"810:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"baseExpression":{"expression":{"id":2181,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"814:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":2182,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"817:13:19","memberName":"tokenDecimals","nodeType":"MemberAccess","referencedDeclaration":2080,"src":"814:16:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint8_$","typeString":"mapping(address => uint8)"}},"id":2184,"indexExpression":{"id":2183,"name":"feeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"831:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"814:26:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"810:30:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2186,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"809:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"798:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2188,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"797:45:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":2189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"845:4:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"797:52:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2122,"id":2191,"nodeType":"Return","src":"790:59:19"}]},"functionSelector":"3931f45d","id":2193,"implemented":true,"kind":"function","modifiers":[],"name":"convertGasToFeeToken","nameLocation":"235:20:19","nodeType":"FunctionDefinition","parameters":{"id":2119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2116,"mutability":"mutable","name":"feeToken","nameLocation":"264:8:19","nodeType":"VariableDeclaration","scope":2193,"src":"256:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2115,"name":"address","nodeType":"ElementaryTypeName","src":"256:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2118,"mutability":"mutable","name":"gasCost","nameLocation":"279:7:19","nodeType":"VariableDeclaration","scope":2193,"src":"274:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2117,"name":"uint","nodeType":"ElementaryTypeName","src":"274:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"255:32:19"},"returnParameters":{"id":2122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2193,"src":"309:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2120,"name":"uint","nodeType":"ElementaryTypeName","src":"309:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"308:6:19"},"scope":2764,"src":"226:656:19","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1848],"body":{"id":2259,"nodeType":"Block","src":"979:879:19","statements":[{"assignments":[2206],"declarations":[{"constant":false,"id":2206,"mutability":"mutable","name":"rs","nameLocation":"1020:2:19","nodeType":"VariableDeclaration","scope":2259,"src":"989:33:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"},"typeName":{"id":2205,"nodeType":"UserDefinedTypeName","pathNode":{"id":2204,"name":"VaultStorage.VaultData","nameLocations":["989:12:19","1002:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":2086,"src":"989:22:19"},"referencedDeclaration":2086,"src":"989:22:19","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"}},"visibility":"internal"}],"id":2210,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2207,"name":"VaultStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"1024:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VaultStorage_$2107_$","typeString":"type(library VaultStorage)"}},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1037:4:19","memberName":"load","nodeType":"MemberAccess","referencedDeclaration":2106,"src":"1024:17:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VaultData_$2086_storage_ptr_$","typeString":"function () pure returns (struct VaultStorage.VaultData storage pointer)"}},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1024:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"989:54:19"},{"assignments":[2212],"declarations":[{"constant":false,"id":2212,"mutability":"mutable","name":"nav","nameLocation":"1058:3:19","nodeType":"VariableDeclaration","scope":2259,"src":"1053:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2211,"name":"uint","nodeType":"ElementaryTypeName","src":"1053:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2215,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2213,"name":"currentNavUSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"1064:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1064:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1053:26:19"},{"expression":{"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2216,"name":"nav","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"1137:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2217,"name":"nav","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"1144:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":2218,"name":"LibConstants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"1150:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibConstants_$1389_$","typeString":"type(library LibConstants)"}},"id":2219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1163:15:19","memberName":"PRICE_PRECISION","nodeType":"MemberAccess","referencedDeclaration":1382,"src":"1150:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1144:34:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2221,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1143:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":2222,"name":"LibConstants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"1182:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibConstants_$1389_$","typeString":"type(library LibConstants)"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1195:13:19","memberName":"USD_PRECISION","nodeType":"MemberAccess","referencedDeclaration":1376,"src":"1182:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1143:65:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1137:71:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2226,"nodeType":"ExpressionStatement","src":"1137:71:19"},{"assignments":[2228],"declarations":[{"constant":false,"id":2228,"mutability":"mutable","name":"ftUSD","nameLocation":"1360:5:19","nodeType":"VariableDeclaration","scope":2259,"src":"1355:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2227,"name":"uint","nodeType":"ElementaryTypeName","src":"1355:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2232,"initialValue":{"arguments":[{"id":2230,"name":"rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"1385:11:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2229,"name":"feeTokenPriceUSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"1368:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1368:29:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1355:42:19"},{"assignments":[2234],"declarations":[{"constant":false,"id":2234,"mutability":"mutable","name":"ftDecs","nameLocation":"1414:6:19","nodeType":"VariableDeclaration","scope":2259,"src":"1408:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2233,"name":"uint8","nodeType":"ElementaryTypeName","src":"1408:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2239,"initialValue":{"baseExpression":{"expression":{"id":2235,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"1423:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":2236,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1426:13:19","memberName":"tokenDecimals","nodeType":"MemberAccess","referencedDeclaration":2080,"src":"1423:16:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint8_$","typeString":"mapping(address => uint8)"}},"id":2238,"indexExpression":{"id":2237,"name":"rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"1440:11:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1423:29:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"1408:44:19"},{"assignments":[2241],"declarations":[{"constant":false,"id":2241,"mutability":"mutable","name":"ftUnitPrice","nameLocation":"1602:11:19","nodeType":"VariableDeclaration","scope":2259,"src":"1597:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2240,"name":"uint","nodeType":"ElementaryTypeName","src":"1597:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2251,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2242,"name":"nav","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"1617:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1622:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2244,"name":"ftDecs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"1626:6:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"1622:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2246,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1617:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2248,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1616:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2249,"name":"ftUSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"1635:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1597:43:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2252,"name":"dxblAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"1821:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2253,"name":"ftUnitPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"1834:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2255,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1820:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":2256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1847:4:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"1820:31:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2201,"id":2258,"nodeType":"Return","src":"1813:38:19"}]},"functionSelector":"7262f557","id":2260,"implemented":true,"kind":"function","modifiers":[],"name":"estimateRedemption","nameLocation":"897:18:19","nodeType":"FunctionDefinition","parameters":{"id":2198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2195,"mutability":"mutable","name":"rewardToken","nameLocation":"924:11:19","nodeType":"VariableDeclaration","scope":2260,"src":"916:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2194,"name":"address","nodeType":"ElementaryTypeName","src":"916:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2197,"mutability":"mutable","name":"dxblAmount","nameLocation":"942:10:19","nodeType":"VariableDeclaration","scope":2260,"src":"937:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2196,"name":"uint","nodeType":"ElementaryTypeName","src":"937:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"915:38:19"},"returnParameters":{"id":2201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2260,"src":"974:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2199,"name":"uint","nodeType":"ElementaryTypeName","src":"974:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"973:6:19"},"scope":2764,"src":"888:970:19","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1855],"body":{"id":2304,"nodeType":"Block","src":"1934:251:19","statements":[{"assignments":[2271],"declarations":[{"constant":false,"id":2271,"mutability":"mutable","name":"rs","nameLocation":"1975:2:19","nodeType":"VariableDeclaration","scope":2304,"src":"1944:33:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"},"typeName":{"id":2270,"nodeType":"UserDefinedTypeName","pathNode":{"id":2269,"name":"VaultStorage.VaultData","nameLocations":["1944:12:19","1957:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":2086,"src":"1944:22:19"},"referencedDeclaration":2086,"src":"1944:22:19","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"}},"visibility":"internal"}],"id":2275,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2272,"name":"VaultStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"1980:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VaultStorage_$2107_$","typeString":"type(library VaultStorage)"}},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1993:4:19","memberName":"load","nodeType":"MemberAccess","referencedDeclaration":2106,"src":"1980:17:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VaultData_$2086_storage_ptr_$","typeString":"function () pure returns (struct VaultStorage.VaultData storage pointer)"}},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1980:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"1944:55:19"},{"assignments":[2280],"declarations":[{"constant":false,"id":2280,"mutability":"mutable","name":"pf","nameLocation":"2040:2:19","nodeType":"VariableDeclaration","scope":2304,"src":"2009:33:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$2040_storage_ptr","typeString":"struct VaultStorage.PriceFeed"},"typeName":{"id":2279,"nodeType":"UserDefinedTypeName","pathNode":{"id":2278,"name":"VaultStorage.PriceFeed","nameLocations":["2009:12:19","2022:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":2040,"src":"2009:22:19"},"referencedDeclaration":2040,"src":"2009:22:19","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$2040_storage_ptr","typeString":"struct VaultStorage.PriceFeed"}},"visibility":"internal"}],"id":2285,"initialValue":{"baseExpression":{"expression":{"id":2281,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"2045:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":2282,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2048:16:19","memberName":"allowedFeeTokens","nodeType":"MemberAccess","referencedDeclaration":2085,"src":"2045:19:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PriceFeed_$2040_storage_$","typeString":"mapping(address => struct VaultStorage.PriceFeed storage ref)"}},"id":2284,"indexExpression":{"id":2283,"name":"feeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"2065:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2045:29:19","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$2040_storage","typeString":"struct VaultStorage.PriceFeed storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2009:65:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2289,"name":"pf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"2100:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$2040_storage_ptr","typeString":"struct VaultStorage.PriceFeed storage pointer"}},"id":2290,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2103:4:19","memberName":"feed","nodeType":"MemberAccess","referencedDeclaration":2037,"src":"2100:7:19","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceFeed_$1909","typeString":"contract IPriceFeed"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IPriceFeed_$1909","typeString":"contract IPriceFeed"}],"id":2288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2092:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2287,"name":"address","nodeType":"ElementaryTypeName","src":"2092:7:19","typeDescriptions":{}}},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2120:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2112:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2292,"name":"address","nodeType":"ElementaryTypeName","src":"2112:7:19","typeDescriptions":{}}},"id":2295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2112:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2092:30:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e737570706f727465642066656520746f6b656e","id":2297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2124:23:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_feab262476110b6da19dad5f74ffa5fc85a39886ca1e6c4c3619a320fb4c8b10","typeString":"literal_string \"Unsupported fee token\""},"value":"Unsupported fee token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_feab262476110b6da19dad5f74ffa5fc85a39886ca1e6c4c3619a320fb4c8b10","typeString":"literal_string \"Unsupported fee token\""}],"id":2286,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2084:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2084:64:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2299,"nodeType":"ExpressionStatement","src":"2084:64:19"},{"expression":{"arguments":[{"id":2301,"name":"pf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"2175:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$2040_storage_ptr","typeString":"struct VaultStorage.PriceFeed storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PriceFeed_$2040_storage_ptr","typeString":"struct VaultStorage.PriceFeed storage pointer"}],"id":2300,"name":"_getPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"2165:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_PriceFeed_$2040_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct VaultStorage.PriceFeed storage pointer) view returns (uint256)"}},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2165:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2266,"id":2303,"nodeType":"Return","src":"2158:20:19"}]},"functionSelector":"ce25cb4d","id":2305,"implemented":true,"kind":"function","modifiers":[],"name":"feeTokenPriceUSD","nameLocation":"1873:16:19","nodeType":"FunctionDefinition","parameters":{"id":2263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2262,"mutability":"mutable","name":"feeToken","nameLocation":"1898:8:19","nodeType":"VariableDeclaration","scope":2305,"src":"1890:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2261,"name":"address","nodeType":"ElementaryTypeName","src":"1890:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1889:18:19"},"returnParameters":{"id":2266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2305,"src":"1929:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2264,"name":"uint","nodeType":"ElementaryTypeName","src":"1929:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1928:6:19"},"scope":2764,"src":"1864:321:19","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1886],"body":{"id":2354,"nodeType":"Block","src":"2284:320:19","statements":[{"assignments":[2318],"declarations":[{"constant":false,"id":2318,"mutability":"mutable","name":"fs","nameLocation":"2325:2:19","nodeType":"VariableDeclaration","scope":2354,"src":"2294:33:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"},"typeName":{"id":2317,"nodeType":"UserDefinedTypeName","pathNode":{"id":2316,"name":"VaultStorage.VaultData","nameLocations":["2294:12:19","2307:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":2086,"src":"2294:22:19"},"referencedDeclaration":2086,"src":"2294:22:19","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"}},"visibility":"internal"}],"id":2322,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2319,"name":"VaultStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"2330:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VaultStorage_$2107_$","typeString":"type(library VaultStorage)"}},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2343:4:19","memberName":"load","nodeType":"MemberAccess","referencedDeclaration":2106,"src":"2330:17:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VaultData_$2086_storage_ptr_$","typeString":"function () pure returns (struct VaultStorage.VaultData storage pointer)"}},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2330:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2294:55:19"},{"assignments":[2327],"declarations":[{"constant":false,"id":2327,"mutability":"mutable","name":"pf","nameLocation":"2390:2:19","nodeType":"VariableDeclaration","scope":2354,"src":"2359:33:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$2040_storage_ptr","typeString":"struct VaultStorage.PriceFeed"},"typeName":{"id":2326,"nodeType":"UserDefinedTypeName","pathNode":{"id":2325,"name":"VaultStorage.PriceFeed","nameLocations":["2359:12:19","2372:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":2040,"src":"2359:22:19"},"referencedDeclaration":2040,"src":"2359:22:19","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$2040_storage_ptr","typeString":"struct VaultStorage.PriceFeed"}},"visibility":"internal"}],"id":2332,"initialValue":{"baseExpression":{"expression":{"id":2328,"name":"fs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"2395:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":2329,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2398:16:19","memberName":"allowedFeeTokens","nodeType":"MemberAccess","referencedDeclaration":2085,"src":"2395:19:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PriceFeed_$2040_storage_$","typeString":"mapping(address => struct VaultStorage.PriceFeed storage ref)"}},"id":2331,"indexExpression":{"id":2330,"name":"feeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"2415:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2395:29:19","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$2040_storage","typeString":"struct VaultStorage.PriceFeed storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2359:65:19"},{"assignments":[2334],"declarations":[{"constant":false,"id":2334,"mutability":"mutable","name":"ftp","nameLocation":"2491:3:19","nodeType":"VariableDeclaration","scope":2354,"src":"2486:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2333,"name":"uint","nodeType":"ElementaryTypeName","src":"2486:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2338,"initialValue":{"arguments":[{"id":2336,"name":"pf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"2507:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$2040_storage_ptr","typeString":"struct VaultStorage.PriceFeed storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PriceFeed_$2040_storage_ptr","typeString":"struct VaultStorage.PriceFeed storage pointer"}],"id":2335,"name":"_getPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"2497:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_PriceFeed_$2040_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct VaultStorage.PriceFeed storage pointer) view returns (uint256)"}},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2486:24:19"},{"assignments":[2340,null],"declarations":[{"constant":false,"id":2340,"mutability":"mutable","name":"v","nameLocation":"2527:1:19","nodeType":"VariableDeclaration","scope":2354,"src":"2522:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2339,"name":"uint","nodeType":"ElementaryTypeName","src":"2522:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":2349,"initialValue":{"arguments":[{"id":2342,"name":"fs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"2540:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},{"arguments":[{"id":2344,"name":"feeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"2551:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2343,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"2544:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$664_$","typeString":"type(contract IERC20)"}},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2544:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},{"id":2346,"name":"ftp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"2562:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2347,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"2567:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"},{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2341,"name":"_toUSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"2533:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_VaultData_$2086_storage_ptr_$_t_contract$_IERC20_$664_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct VaultStorage.VaultData storage pointer,contract IERC20,uint256,uint256) view returns (uint256,uint256)"}},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"2521:53:19"},{"expression":{"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2350,"name":"volumeUSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"2584:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2351,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"2596:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2584:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2353,"nodeType":"ExpressionStatement","src":"2584:13:19"}]},"functionSelector":"f7406fc3","id":2355,"implemented":true,"kind":"function","modifiers":[],"name":"computeVolumeUSD","nameLocation":"2200:16:19","nodeType":"FunctionDefinition","parameters":{"id":2310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2307,"mutability":"mutable","name":"feeToken","nameLocation":"2225:8:19","nodeType":"VariableDeclaration","scope":2355,"src":"2217:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2306,"name":"address","nodeType":"ElementaryTypeName","src":"2217:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2309,"mutability":"mutable","name":"amount","nameLocation":"2240:6:19","nodeType":"VariableDeclaration","scope":2355,"src":"2235:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2308,"name":"uint","nodeType":"ElementaryTypeName","src":"2235:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2216:31:19"},"returnParameters":{"id":2313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2312,"mutability":"mutable","name":"volumeUSD","nameLocation":"2273:9:19","nodeType":"VariableDeclaration","scope":2355,"src":"2268:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2311,"name":"uint","nodeType":"ElementaryTypeName","src":"2268:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2267:16:19"},"scope":2764,"src":"2191:413:19","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1860],"body":{"id":2431,"nodeType":"Block","src":"2657:683:19","statements":[{"assignments":[2364],"declarations":[{"constant":false,"id":2364,"mutability":"mutable","name":"fs","nameLocation":"2698:2:19","nodeType":"VariableDeclaration","scope":2431,"src":"2667:33:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"},"typeName":{"id":2363,"nodeType":"UserDefinedTypeName","pathNode":{"id":2362,"name":"VaultStorage.VaultData","nameLocations":["2667:12:19","2680:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":2086,"src":"2667:22:19"},"referencedDeclaration":2086,"src":"2667:22:19","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"}},"visibility":"internal"}],"id":2368,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2365,"name":"VaultStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"2703:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VaultStorage_$2107_$","typeString":"type(library VaultStorage)"}},"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2716:4:19","memberName":"load","nodeType":"MemberAccess","referencedDeclaration":2106,"src":"2703:17:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VaultData_$2086_storage_ptr_$","typeString":"function () pure returns (struct VaultStorage.VaultData storage pointer)"}},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2703:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2667:55:19"},{"assignments":[2373],"declarations":[{"constant":false,"id":2373,"mutability":"mutable","name":"feeTokens","nameLocation":"2863:9:19","nodeType":"VariableDeclaration","scope":2431,"src":"2847:25:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$664_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":2371,"nodeType":"UserDefinedTypeName","pathNode":{"id":2370,"name":"IERC20","nameLocations":["2847:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"2847:6:19"},"referencedDeclaration":664,"src":"2847:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"id":2372,"nodeType":"ArrayTypeName","src":"2847:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$664_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"id":2376,"initialValue":{"expression":{"id":2374,"name":"fs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"2875:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":2375,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2878:9:19","memberName":"feeTokens","nodeType":"MemberAccess","referencedDeclaration":2065,"src":"2875:12:19","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$664_$dyn_storage","typeString":"contract IERC20[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2847:40:19"},{"body":{"id":2429,"nodeType":"Block","src":"2934:400:19","statements":[{"assignments":[2390],"declarations":[{"constant":false,"id":2390,"mutability":"mutable","name":"ft","nameLocation":"2955:2:19","nodeType":"VariableDeclaration","scope":2429,"src":"2948:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"},"typeName":{"id":2389,"nodeType":"UserDefinedTypeName","pathNode":{"id":2388,"name":"IERC20","nameLocations":["2948:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"2948:6:19"},"referencedDeclaration":664,"src":"2948:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"visibility":"internal"}],"id":2396,"initialValue":{"arguments":[{"baseExpression":{"id":2392,"name":"feeTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"2967:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$664_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":2394,"indexExpression":{"id":2393,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"2977:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2967:12:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}],"id":2391,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"2960:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$664_$","typeString":"type(contract IERC20)"}},"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2960:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"2948:32:19"},{"assignments":[2401],"declarations":[{"constant":false,"id":2401,"mutability":"mutable","name":"pf","nameLocation":"3025:2:19","nodeType":"VariableDeclaration","scope":2429,"src":"2994:33:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$2040_storage_ptr","typeString":"struct VaultStorage.PriceFeed"},"typeName":{"id":2400,"nodeType":"UserDefinedTypeName","pathNode":{"id":2399,"name":"VaultStorage.PriceFeed","nameLocations":["2994:12:19","3007:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":2040,"src":"2994:22:19"},"referencedDeclaration":2040,"src":"2994:22:19","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$2040_storage_ptr","typeString":"struct VaultStorage.PriceFeed"}},"visibility":"internal"}],"id":2409,"initialValue":{"baseExpression":{"expression":{"id":2402,"name":"fs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"3030:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":2403,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3033:16:19","memberName":"allowedFeeTokens","nodeType":"MemberAccess","referencedDeclaration":2085,"src":"3030:19:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PriceFeed_$2040_storage_$","typeString":"mapping(address => struct VaultStorage.PriceFeed storage ref)"}},"id":2408,"indexExpression":{"arguments":[{"id":2406,"name":"ft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"3058:2:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}],"id":2405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3050:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2404,"name":"address","nodeType":"ElementaryTypeName","src":"3050:7:19","typeDescriptions":{}}},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3050:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3030:32:19","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$2040_storage","typeString":"struct VaultStorage.PriceFeed storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2994:68:19"},{"assignments":[2411],"declarations":[{"constant":false,"id":2411,"mutability":"mutable","name":"price","nameLocation":"3182:5:19","nodeType":"VariableDeclaration","scope":2429,"src":"3177:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2410,"name":"uint","nodeType":"ElementaryTypeName","src":"3177:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2415,"initialValue":{"arguments":[{"id":2413,"name":"pf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"3200:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$2040_storage_ptr","typeString":"struct VaultStorage.PriceFeed storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PriceFeed_$2040_storage_ptr","typeString":"struct VaultStorage.PriceFeed storage pointer"}],"id":2412,"name":"_getPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"3190:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_PriceFeed_$2040_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct VaultStorage.PriceFeed storage pointer) view returns (uint256)"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3190:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3177:26:19"},{"assignments":[2417,null],"declarations":[{"constant":false,"id":2417,"mutability":"mutable","name":"_usd","nameLocation":"3265:4:19","nodeType":"VariableDeclaration","scope":2429,"src":"3260:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2416,"name":"uint","nodeType":"ElementaryTypeName","src":"3260:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":2424,"initialValue":{"arguments":[{"id":2419,"name":"fs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"3281:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},{"id":2420,"name":"ft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"3285:2:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},{"id":2421,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"3289:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":2422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3296:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"},{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2418,"name":"_toUSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"3274:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_VaultData_$2086_storage_ptr_$_t_contract$_IERC20_$664_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct VaultStorage.VaultData storage pointer,contract IERC20,uint256,uint256) view returns (uint256,uint256)"}},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3274:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3259:39:19"},{"expression":{"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2425,"name":"usd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"3312:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2426,"name":"_usd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"3319:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3312:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2428,"nodeType":"ExpressionStatement","src":"3312:11:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2381,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"2910:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2382,"name":"feeTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"2912:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$664_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2922:6:19","memberName":"length","nodeType":"MemberAccess","src":"2912:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2430,"initializationExpression":{"assignments":[2378],"declarations":[{"constant":false,"id":2378,"mutability":"mutable","name":"i","nameLocation":"2906:1:19","nodeType":"VariableDeclaration","scope":2430,"src":"2901:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2377,"name":"uint","nodeType":"ElementaryTypeName","src":"2901:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2380,"initialValue":{"hexValue":"30","id":2379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2908:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2901:8:19"},"loopExpression":{"expression":{"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2929:3:19","subExpression":{"id":2385,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"2931:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2387,"nodeType":"ExpressionStatement","src":"2929:3:19"},"nodeType":"ForStatement","src":"2897:437:19"}]},"functionSelector":"20529bb1","id":2432,"implemented":true,"kind":"function","modifiers":[],"name":"aumUSD","nameLocation":"2619:6:19","nodeType":"FunctionDefinition","parameters":{"id":2356,"nodeType":"ParameterList","parameters":[],"src":"2625:2:19"},"returnParameters":{"id":2359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2358,"mutability":"mutable","name":"usd","nameLocation":"2653:3:19","nodeType":"VariableDeclaration","scope":2432,"src":"2648:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2357,"name":"uint","nodeType":"ElementaryTypeName","src":"2648:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2647:10:19"},"scope":2764,"src":"2610:730:19","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1865],"body":{"id":2478,"nodeType":"Block","src":"3400:642:19","statements":[{"assignments":[2441],"declarations":[{"constant":false,"id":2441,"mutability":"mutable","name":"rs","nameLocation":"3523:2:19","nodeType":"VariableDeclaration","scope":2478,"src":"3492:33:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"},"typeName":{"id":2440,"nodeType":"UserDefinedTypeName","pathNode":{"id":2439,"name":"VaultStorage.VaultData","nameLocations":["3492:12:19","3505:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":2086,"src":"3492:22:19"},"referencedDeclaration":2086,"src":"3492:22:19","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"}},"visibility":"internal"}],"id":2445,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2442,"name":"VaultStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"3528:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VaultStorage_$2107_$","typeString":"type(library VaultStorage)"}},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3541:4:19","memberName":"load","nodeType":"MemberAccess","referencedDeclaration":2106,"src":"3528:17:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VaultData_$2086_storage_ptr_$","typeString":"function () pure returns (struct VaultStorage.VaultData storage pointer)"}},"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3528:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3492:55:19"},{"assignments":[2447],"declarations":[{"constant":false,"id":2447,"mutability":"mutable","name":"supply","nameLocation":"3609:6:19","nodeType":"VariableDeclaration","scope":2478,"src":"3604:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2446,"name":"uint","nodeType":"ElementaryTypeName","src":"3604:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2452,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":2448,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"3618:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":2449,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3621:4:19","memberName":"dxbl","nodeType":"MemberAccess","referencedDeclaration":2047,"src":"3618:7:19","typeDescriptions":{"typeIdentifier":"t_contract$_IDXBL_$1464","typeString":"contract IDXBL"}},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3626:11:19","memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":613,"src":"3618:19:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3618:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3604:35:19"},{"assignments":[2454],"declarations":[{"constant":false,"id":2454,"mutability":"mutable","name":"aum","nameLocation":"3714:3:19","nodeType":"VariableDeclaration","scope":2478,"src":"3709:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2453,"name":"uint","nodeType":"ElementaryTypeName","src":"3709:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2457,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2455,"name":"aumUSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"3720:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3720:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3709:19:19"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2458,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"3781:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3791:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3781:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2461,"name":"aum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"3796:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3803:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3796:8:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3781:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2468,"nodeType":"IfStatement","src":"3778:61:19","trueBody":{"id":2467,"nodeType":"Block","src":"3806:33:19","statements":[{"expression":{"hexValue":"30","id":2465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3827:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2436,"id":2466,"nodeType":"Return","src":"3820:8:19"}]}},{"expression":{"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2469,"name":"nav","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"3930:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2470,"name":"aum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"3937:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":2471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3941:4:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"3937:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2473,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3936:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2474,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"3949:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3936:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3930:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2477,"nodeType":"ExpressionStatement","src":"3930:25:19"}]},"functionSelector":"5de11890","id":2479,"implemented":true,"kind":"function","modifiers":[],"name":"currentNavUSD","nameLocation":"3355:13:19","nodeType":"FunctionDefinition","parameters":{"id":2433,"nodeType":"ParameterList","parameters":[],"src":"3368:2:19"},"returnParameters":{"id":2436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2435,"mutability":"mutable","name":"nav","nameLocation":"3396:3:19","nodeType":"VariableDeclaration","scope":2479,"src":"3391:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2434,"name":"uint","nodeType":"ElementaryTypeName","src":"3391:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3390:10:19"},"scope":2764,"src":"3346:696:19","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1872],"body":{"id":2593,"nodeType":"Block","src":"4132:1219:19","statements":[{"assignments":[2490],"declarations":[{"constant":false,"id":2490,"mutability":"mutable","name":"fs","nameLocation":"4311:2:19","nodeType":"VariableDeclaration","scope":2593,"src":"4280:33:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"},"typeName":{"id":2489,"nodeType":"UserDefinedTypeName","pathNode":{"id":2488,"name":"VaultStorage.VaultData","nameLocations":["4280:12:19","4293:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":2086,"src":"4280:22:19"},"referencedDeclaration":2086,"src":"4280:22:19","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"}},"visibility":"internal"}],"documentation":" RISK: Must limit the fee token count to avoid miner not allowing call due to high\n gas usage","id":2494,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2491,"name":"VaultStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"4316:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VaultStorage_$2107_$","typeString":"type(library VaultStorage)"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4329:4:19","memberName":"load","nodeType":"MemberAccess","referencedDeclaration":2106,"src":"4316:17:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VaultData_$2086_storage_ptr_$","typeString":"function () pure returns (struct VaultStorage.VaultData storage pointer)"}},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4316:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4280:55:19"},{"expression":{"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2495,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"4410:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$1830_memory_ptr_$dyn_memory_ptr","typeString":"struct IComputationalView.AssetInfo memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"expression":{"id":2500,"name":"fs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"4454:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":2501,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4457:9:19","memberName":"feeTokens","nodeType":"MemberAccess","referencedDeclaration":2065,"src":"4454:12:19","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$664_$dyn_storage","typeString":"contract IERC20[] storage ref"}},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4467:6:19","memberName":"length","nodeType":"MemberAccess","src":"4454:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4419:34:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_AssetInfo_$1830_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct IComputationalView.AssetInfo memory[] memory)"},"typeName":{"baseType":{"id":2497,"nodeType":"UserDefinedTypeName","pathNode":{"id":2496,"name":"IComputationalView.AssetInfo","nameLocations":["4423:18:19","4442:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":1830,"src":"4423:28:19"},"referencedDeclaration":1830,"src":"4423:28:19","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$1830_storage_ptr","typeString":"struct IComputationalView.AssetInfo"}},"id":2498,"nodeType":"ArrayTypeName","src":"4423:30:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$1830_storage_$dyn_storage_ptr","typeString":"struct IComputationalView.AssetInfo[]"}}},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4419:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$1830_memory_ptr_$dyn_memory_ptr","typeString":"struct IComputationalView.AssetInfo memory[] memory"}},"src":"4410:64:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$1830_memory_ptr_$dyn_memory_ptr","typeString":"struct IComputationalView.AssetInfo memory[] memory"}},"id":2505,"nodeType":"ExpressionStatement","src":"4410:64:19"},{"assignments":[2507],"declarations":[{"constant":false,"id":2507,"mutability":"mutable","name":"cnt","nameLocation":"4530:3:19","nodeType":"VariableDeclaration","scope":2593,"src":"4525:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2506,"name":"uint","nodeType":"ElementaryTypeName","src":"4525:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2509,"initialValue":{"hexValue":"30","id":2508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4536:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4525:12:19"},{"assignments":[2514],"declarations":[{"constant":false,"id":2514,"mutability":"mutable","name":"feeTokens","nameLocation":"4647:9:19","nodeType":"VariableDeclaration","scope":2593,"src":"4631:25:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$664_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":2512,"nodeType":"UserDefinedTypeName","pathNode":{"id":2511,"name":"IERC20","nameLocations":["4631:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"4631:6:19"},"referencedDeclaration":664,"src":"4631:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"id":2513,"nodeType":"ArrayTypeName","src":"4631:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$664_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"id":2517,"initialValue":{"expression":{"id":2515,"name":"fs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"4659:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":2516,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4662:9:19","memberName":"feeTokens","nodeType":"MemberAccess","referencedDeclaration":2065,"src":"4659:12:19","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$664_$dyn_storage","typeString":"contract IERC20[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4631:40:19"},{"body":{"id":2591,"nodeType":"Block","src":"4718:627:19","statements":[{"assignments":[2531],"declarations":[{"constant":false,"id":2531,"mutability":"mutable","name":"ft","nameLocation":"4739:2:19","nodeType":"VariableDeclaration","scope":2591,"src":"4732:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"},"typeName":{"id":2530,"nodeType":"UserDefinedTypeName","pathNode":{"id":2529,"name":"IERC20","nameLocations":["4732:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"4732:6:19"},"referencedDeclaration":664,"src":"4732:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"visibility":"internal"}],"id":2535,"initialValue":{"baseExpression":{"id":2532,"name":"feeTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"4744:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$664_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":2534,"indexExpression":{"id":2533,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"4754:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4744:12:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"4732:24:19"},{"assignments":[2540],"declarations":[{"constant":false,"id":2540,"mutability":"mutable","name":"pf","nameLocation":"4801:2:19","nodeType":"VariableDeclaration","scope":2591,"src":"4770:33:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$2040_storage_ptr","typeString":"struct VaultStorage.PriceFeed"},"typeName":{"id":2539,"nodeType":"UserDefinedTypeName","pathNode":{"id":2538,"name":"VaultStorage.PriceFeed","nameLocations":["4770:12:19","4783:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":2040,"src":"4770:22:19"},"referencedDeclaration":2040,"src":"4770:22:19","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$2040_storage_ptr","typeString":"struct VaultStorage.PriceFeed"}},"visibility":"internal"}],"id":2548,"initialValue":{"baseExpression":{"expression":{"id":2541,"name":"fs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"4806:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":2542,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4809:16:19","memberName":"allowedFeeTokens","nodeType":"MemberAccess","referencedDeclaration":2085,"src":"4806:19:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PriceFeed_$2040_storage_$","typeString":"mapping(address => struct VaultStorage.PriceFeed storage ref)"}},"id":2547,"indexExpression":{"arguments":[{"id":2545,"name":"ft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"4834:2:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}],"id":2544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4826:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2543,"name":"address","nodeType":"ElementaryTypeName","src":"4826:7:19","typeDescriptions":{}}},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4826:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4806:32:19","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$2040_storage","typeString":"struct VaultStorage.PriceFeed storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4770:68:19"},{"assignments":[2550],"declarations":[{"constant":false,"id":2550,"mutability":"mutable","name":"price","nameLocation":"4914:5:19","nodeType":"VariableDeclaration","scope":2591,"src":"4909:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2549,"name":"uint","nodeType":"ElementaryTypeName","src":"4909:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2554,"initialValue":{"arguments":[{"id":2552,"name":"pf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"4932:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$2040_storage_ptr","typeString":"struct VaultStorage.PriceFeed storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PriceFeed_$2040_storage_ptr","typeString":"struct VaultStorage.PriceFeed storage pointer"}],"id":2551,"name":"_getPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"4922:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_PriceFeed_$2040_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct VaultStorage.PriceFeed storage pointer) view returns (uint256)"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4922:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4909:26:19"},{"assignments":[2556,2558],"declarations":[{"constant":false,"id":2556,"mutability":"mutable","name":"usd","nameLocation":"5011:3:19","nodeType":"VariableDeclaration","scope":2591,"src":"5006:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2555,"name":"uint","nodeType":"ElementaryTypeName","src":"5006:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2558,"mutability":"mutable","name":"bal","nameLocation":"5021:3:19","nodeType":"VariableDeclaration","scope":2591,"src":"5016:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2557,"name":"uint","nodeType":"ElementaryTypeName","src":"5016:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2565,"initialValue":{"arguments":[{"id":2560,"name":"fs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"5035:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},{"id":2561,"name":"ft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"5039:2:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},{"id":2562,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"5043:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":2563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5050:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"},{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2559,"name":"_toUSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"5028:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_VaultData_$2086_storage_ptr_$_t_contract$_IERC20_$664_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct VaultStorage.VaultData storage pointer,contract IERC20,uint256,uint256) view returns (uint256,uint256)"}},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5028:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5005:47:19"},{"expression":{"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2566,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"5067:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$1830_memory_ptr_$dyn_memory_ptr","typeString":"struct IComputationalView.AssetInfo memory[] memory"}},"id":2568,"indexExpression":{"id":2567,"name":"cnt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"5074:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5067:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$1830_memory_ptr","typeString":"struct IComputationalView.AssetInfo memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2573,"name":"ft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"5143:2:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}],"id":2572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5135:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2571,"name":"address","nodeType":"ElementaryTypeName","src":"5135:7:19","typeDescriptions":{}}},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5135:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2575,"name":"bal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"5173:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2576,"name":"usd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"5204:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2577,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"5236:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":2578,"name":"LibConstants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"5242:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibConstants_$1389_$","typeString":"type(library LibConstants)"}},"id":2579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5255:13:19","memberName":"USD_PRECISION","nodeType":"MemberAccess","referencedDeclaration":1376,"src":"5242:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5236:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2581,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5235:34:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":2582,"name":"LibConstants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"5272:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibConstants_$1389_$","typeString":"type(library LibConstants)"}},"id":2583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5285:15:19","memberName":"PRICE_PRECISION","nodeType":"MemberAccess","referencedDeclaration":1382,"src":"5272:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5235:65:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2569,"name":"IComputationalView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"5081:18:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IComputationalView_$1887_$","typeString":"type(contract IComputationalView)"}},"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5100:9:19","memberName":"AssetInfo","nodeType":"MemberAccess","referencedDeclaration":1830,"src":"5081:28:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AssetInfo_$1830_storage_ptr_$","typeString":"type(struct IComputationalView.AssetInfo storage pointer)"}},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5128:5:19","5164:7:19","5194:8:19","5225:8:19"],"names":["token","balance","usdValue","usdPrice"],"nodeType":"FunctionCall","src":"5081:234:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$1830_memory_ptr","typeString":"struct IComputationalView.AssetInfo memory"}},"src":"5067:248:19","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$1830_memory_ptr","typeString":"struct IComputationalView.AssetInfo memory"}},"id":2587,"nodeType":"ExpressionStatement","src":"5067:248:19"},{"expression":{"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5329:5:19","subExpression":{"id":2588,"name":"cnt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"5331:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2590,"nodeType":"ExpressionStatement","src":"5329:5:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2522,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"4694:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2523,"name":"feeTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"4696:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$664_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4706:6:19","memberName":"length","nodeType":"MemberAccess","src":"4696:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4694:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2592,"initializationExpression":{"assignments":[2519],"declarations":[{"constant":false,"id":2519,"mutability":"mutable","name":"i","nameLocation":"4690:1:19","nodeType":"VariableDeclaration","scope":2592,"src":"4685:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2518,"name":"uint","nodeType":"ElementaryTypeName","src":"4685:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2521,"initialValue":{"hexValue":"30","id":2520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4692:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4685:8:19"},"loopExpression":{"expression":{"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"4713:3:19","subExpression":{"id":2526,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"4715:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2528,"nodeType":"ExpressionStatement","src":"4713:3:19"},"nodeType":"ForStatement","src":"4681:664:19"}]},"functionSelector":"71a97305","id":2594,"implemented":true,"kind":"function","modifiers":[],"name":"assets","nameLocation":"4057:6:19","nodeType":"FunctionDefinition","parameters":{"id":2480,"nodeType":"ParameterList","parameters":[],"src":"4063:2:19"},"returnParameters":{"id":2485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2484,"mutability":"mutable","name":"tokens","nameLocation":"4125:6:19","nodeType":"VariableDeclaration","scope":2594,"src":"4087:44:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$1830_memory_ptr_$dyn_memory_ptr","typeString":"struct IComputationalView.AssetInfo[]"},"typeName":{"baseType":{"id":2482,"nodeType":"UserDefinedTypeName","pathNode":{"id":2481,"name":"IComputationalView.AssetInfo","nameLocations":["4087:18:19","4106:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":1830,"src":"4087:28:19"},"referencedDeclaration":1830,"src":"4087:28:19","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$1830_storage_ptr","typeString":"struct IComputationalView.AssetInfo"}},"id":2483,"nodeType":"ArrayTypeName","src":"4087:30:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$1830_storage_$dyn_storage_ptr","typeString":"struct IComputationalView.AssetInfo[]"}},"visibility":"internal"}],"src":"4086:46:19"},"scope":2764,"src":"4048:1303:19","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1877],"body":{"id":2641,"nodeType":"Block","src":"5418:711:19","statements":[{"assignments":[2603],"declarations":[{"constant":false,"id":2603,"mutability":"mutable","name":"rs","nameLocation":"5572:2:19","nodeType":"VariableDeclaration","scope":2641,"src":"5541:33:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"},"typeName":{"id":2602,"nodeType":"UserDefinedTypeName","pathNode":{"id":2601,"name":"VaultStorage.VaultData","nameLocations":["5541:12:19","5554:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":2086,"src":"5541:22:19"},"referencedDeclaration":2086,"src":"5541:22:19","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"}},"visibility":"internal"}],"documentation":" formula for mint rate:\n startingRate+(startingRate*(ratePerMM*MM_vol))","id":2607,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2604,"name":"VaultStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"5577:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VaultStorage_$2107_$","typeString":"type(library VaultStorage)"}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5590:4:19","memberName":"load","nodeType":"MemberAccess","referencedDeclaration":2106,"src":"5577:17:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VaultData_$2086_storage_ptr_$","typeString":"function () pure returns (struct VaultStorage.VaultData storage pointer)"}},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5577:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5541:55:19"},{"assignments":[2609],"declarations":[{"constant":false,"id":2609,"mutability":"mutable","name":"normalizedMMInVolume","nameLocation":"5614:20:19","nodeType":"VariableDeclaration","scope":2641,"src":"5607:27:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2608,"name":"uint16","nodeType":"ElementaryTypeName","src":"5607:6:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"id":2618,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2612,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2603,"src":"5644:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":2613,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5647:13:19","memberName":"currentVolume","nodeType":"MemberAccess","referencedDeclaration":2057,"src":"5644:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":2614,"name":"LibConstants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"5663:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibConstants_$1389_$","typeString":"type(library LibConstants)"}},"id":2615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5676:9:19","memberName":"MM_VOLUME","nodeType":"MemberAccess","referencedDeclaration":1379,"src":"5663:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5644:41:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5637:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":2610,"name":"uint16","nodeType":"ElementaryTypeName","src":"5637:6:19","typeDescriptions":{}}},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5637:49:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"VariableDeclarationStatement","src":"5607:79:19"},{"assignments":[2620],"declarations":[{"constant":false,"id":2620,"mutability":"mutable","name":"percIncrease","nameLocation":"5867:12:19","nodeType":"VariableDeclaration","scope":2641,"src":"5862:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2619,"name":"uint","nodeType":"ElementaryTypeName","src":"5862:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2626,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2621,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2603,"src":"5882:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":2622,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5885:15:19","memberName":"currentMintRate","nodeType":"MemberAccess","referencedDeclaration":2068,"src":"5882:18:19","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_storage","typeString":"struct VaultStorage.MintRateRange storage ref"}},"id":2623,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5901:4:19","memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":2031,"src":"5882:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2624,"name":"normalizedMMInVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"5908:20:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"5882:46:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5862:66:19"},{"expression":{"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2627,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"6048:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2628,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2603,"src":"6055:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":2629,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6058:17:19","memberName":"baseMintThreshold","nodeType":"MemberAccess","referencedDeclaration":2055,"src":"6055:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2630,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2603,"src":"6080:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":2631,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6083:17:19","memberName":"baseMintThreshold","nodeType":"MemberAccess","referencedDeclaration":2055,"src":"6080:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2632,"name":"percIncrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"6103:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6080:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2634,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6079:37:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":2635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6117:4:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"6079:42:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2637,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6078:44:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6055:67:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6048:74:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2640,"nodeType":"ExpressionStatement","src":"6048:74:19"}]},"functionSelector":"41b5774a","id":2642,"implemented":true,"kind":"function","modifiers":[],"name":"currentMintRateUSD","nameLocation":"5366:18:19","nodeType":"FunctionDefinition","parameters":{"id":2595,"nodeType":"ParameterList","parameters":[],"src":"5384:2:19"},"returnParameters":{"id":2598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2597,"mutability":"mutable","name":"rate","nameLocation":"5413:4:19","nodeType":"VariableDeclaration","scope":2642,"src":"5408:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2596,"name":"uint","nodeType":"ElementaryTypeName","src":"5408:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5407:11:19"},"scope":2764,"src":"5357:772:19","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2698,"nodeType":"Block","src":"6219:531:19","statements":[{"assignments":[null,2651,null,2653,null],"declarations":[null,{"constant":false,"id":2651,"mutability":"mutable","name":"answer","nameLocation":"6281:6:19","nodeType":"VariableDeclaration","scope":2698,"src":"6274:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2650,"name":"int256","nodeType":"ElementaryTypeName","src":"6274:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},null,{"constant":false,"id":2653,"mutability":"mutable","name":"updatedAt","nameLocation":"6323:9:19","nodeType":"VariableDeclaration","scope":2698,"src":"6315:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2652,"name":"uint256","nodeType":"ElementaryTypeName","src":"6315:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":2658,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":2654,"name":"pf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"6346:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$2040_storage_ptr","typeString":"struct VaultStorage.PriceFeed storage pointer"}},"id":2655,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6349:4:19","memberName":"feed","nodeType":"MemberAccess","referencedDeclaration":2037,"src":"6346:7:19","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceFeed_$1909","typeString":"contract IPriceFeed"}},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6354:15:19","memberName":"latestRoundData","nodeType":"MemberAccess","referencedDeclaration":1903,"src":"6346:23:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"function () view external returns (uint80,int256,uint256,uint256,uint80)"}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6346:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"nodeType":"VariableDeclarationStatement","src":"6256:115:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2660,"name":"answer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"6422:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6431:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6422:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f207072696365206461746120617661696c61626c65","id":2663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6434:25:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b0df79b6cb2496d5d4d34caf2e75280779b90d3c442f3e9e91afd6e516af648","typeString":"literal_string \"No price data available\""},"value":"No price data available"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4b0df79b6cb2496d5d4d34caf2e75280779b90d3c442f3e9e91afd6e516af648","typeString":"literal_string \"No price data available\""}],"id":2659,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6414:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6414:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2665,"nodeType":"ExpressionStatement","src":"6414:46:19"},{"assignments":[2667],"declarations":[{"constant":false,"id":2667,"mutability":"mutable","name":"stale","nameLocation":"6554:5:19","nodeType":"VariableDeclaration","scope":2698,"src":"6549:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2666,"name":"uint","nodeType":"ElementaryTypeName","src":"6549:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2675,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2668,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6562:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6568:9:19","memberName":"timestamp","nodeType":"MemberAccess","src":"6562:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":2670,"name":"LibConstants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"6580:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibConstants_$1389_$","typeString":"type(library LibConstants)"}},"id":2671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6593:3:19","memberName":"DAY","nodeType":"MemberAccess","referencedDeclaration":1373,"src":"6580:16:19","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"6562:34:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"363030","id":2673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6599:3:19","typeDescriptions":{"typeIdentifier":"t_rational_600_by_1","typeString":"int_const 600"},"value":"600"},"src":"6562:40:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6549:53:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2677,"name":"updatedAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"6620:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2678,"name":"stale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"6632:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6620:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616c652070726963652064617461","id":2680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6639:18:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ca421925c4941a3397518dad13c20d3418010081598deda6cc2f02a05282c33","typeString":"literal_string \"Stale price data\""},"value":"Stale price data"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2ca421925c4941a3397518dad13c20d3418010081598deda6cc2f02a05282c33","typeString":"literal_string \"Stale price data\""}],"id":2676,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6612:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6612:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2682,"nodeType":"ExpressionStatement","src":"6612:46:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2685,"name":"answer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"6684:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6676:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2683,"name":"uint256","nodeType":"ElementaryTypeName","src":"6676:7:19","typeDescriptions":{}}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6676:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":2687,"name":"LibConstants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"6694:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibConstants_$1389_$","typeString":"type(library LibConstants)"}},"id":2688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6707:15:19","memberName":"PRICE_PRECISION","nodeType":"MemberAccess","referencedDeclaration":1382,"src":"6694:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6676:46:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2690,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6675:48:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6727:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"expression":{"id":2692,"name":"pf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"6731:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$2040_storage_ptr","typeString":"struct VaultStorage.PriceFeed storage pointer"}},"id":2693,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6734:8:19","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":2039,"src":"6731:11:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6727:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2695,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6726:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6675:68:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2649,"id":2697,"nodeType":"Return","src":"6668:75:19"}]},"id":2699,"implemented":true,"kind":"function","modifiers":[],"name":"_getPrice","nameLocation":"6145:9:19","nodeType":"FunctionDefinition","parameters":{"id":2646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2645,"mutability":"mutable","name":"pf","nameLocation":"6186:2:19","nodeType":"VariableDeclaration","scope":2699,"src":"6155:33:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$2040_storage_ptr","typeString":"struct VaultStorage.PriceFeed"},"typeName":{"id":2644,"nodeType":"UserDefinedTypeName","pathNode":{"id":2643,"name":"VaultStorage.PriceFeed","nameLocations":["6155:12:19","6168:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":2040,"src":"6155:22:19"},"referencedDeclaration":2040,"src":"6155:22:19","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$2040_storage_ptr","typeString":"struct VaultStorage.PriceFeed"}},"visibility":"internal"}],"src":"6154:35:19"},"returnParameters":{"id":2649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2699,"src":"6213:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2647,"name":"uint","nodeType":"ElementaryTypeName","src":"6213:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6212:6:19"},"scope":2764,"src":"6136:614:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2762,"nodeType":"Block","src":"6947:450:19","statements":[{"expression":{"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2717,"name":"bal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"6957:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2718,"name":"amt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"6963:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6957:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2720,"nodeType":"ExpressionStatement","src":"6957:9:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2721,"name":"bal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"6979:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6986:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6979:8:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2735,"nodeType":"IfStatement","src":"6976:74:19","trueBody":{"id":2734,"nodeType":"Block","src":"6989:61:19","statements":[{"expression":{"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2724,"name":"bal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"7003:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2729,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7033:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_ComputationalView_$2764","typeString":"contract ComputationalView"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ComputationalView_$2764","typeString":"contract ComputationalView"}],"id":2728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7025:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2727,"name":"address","nodeType":"ElementaryTypeName","src":"7025:7:19","typeDescriptions":{}}},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7025:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2725,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2706,"src":"7009:5:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7015:9:19","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":621,"src":"7009:15:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7009:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7003:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2733,"nodeType":"ExpressionStatement","src":"7003:36:19"}]}},{"expression":{"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2736,"name":"usd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"7184:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2737,"name":"bal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"7191:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2738,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"7197:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7191:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2740,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7190:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":2741,"name":"LibConstants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"7204:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibConstants_$1389_$","typeString":"type(library LibConstants)"}},"id":2742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7217:13:19","memberName":"USD_PRECISION","nodeType":"MemberAccess","referencedDeclaration":1376,"src":"7204:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7190:40:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7184:46:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2745,"nodeType":"ExpressionStatement","src":"7184:46:19"},{"expression":{"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2746,"name":"usd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"7307:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7315:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"baseExpression":{"expression":{"id":2748,"name":"fs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"7319:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":2749,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7322:13:19","memberName":"tokenDecimals","nodeType":"MemberAccess","referencedDeclaration":2080,"src":"7319:16:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint8_$","typeString":"mapping(address => uint8)"}},"id":2754,"indexExpression":{"arguments":[{"id":2752,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2706,"src":"7344:5:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}],"id":2751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7336:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2750,"name":"address","nodeType":"ElementaryTypeName","src":"7336:7:19","typeDescriptions":{}}},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7336:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7319:32:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7315:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":2756,"name":"LibConstants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"7352:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibConstants_$1389_$","typeString":"type(library LibConstants)"}},"id":2757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7365:15:19","memberName":"PRICE_PRECISION","nodeType":"MemberAccess","referencedDeclaration":1382,"src":"7352:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7315:65:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2759,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7314:67:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7307:74:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2761,"nodeType":"ExpressionStatement","src":"7307:74:19"}]},"documentation":{"id":2700,"nodeType":"StructuredDocumentation","src":"6756:57:19","text":" Convert an assets total balance to USD"},"id":2763,"implemented":true,"kind":"function","modifiers":[],"name":"_toUSD","nameLocation":"6827:6:19","nodeType":"FunctionDefinition","parameters":{"id":2711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2703,"mutability":"mutable","name":"fs","nameLocation":"6865:2:19","nodeType":"VariableDeclaration","scope":2763,"src":"6834:33:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"},"typeName":{"id":2702,"nodeType":"UserDefinedTypeName","pathNode":{"id":2701,"name":"VaultStorage.VaultData","nameLocations":["6834:12:19","6847:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":2086,"src":"6834:22:19"},"referencedDeclaration":2086,"src":"6834:22:19","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"}},"visibility":"internal"},{"constant":false,"id":2706,"mutability":"mutable","name":"token","nameLocation":"6876:5:19","nodeType":"VariableDeclaration","scope":2763,"src":"6869:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"},"typeName":{"id":2705,"nodeType":"UserDefinedTypeName","pathNode":{"id":2704,"name":"IERC20","nameLocations":["6869:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"6869:6:19"},"referencedDeclaration":664,"src":"6869:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$664","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2708,"mutability":"mutable","name":"price","nameLocation":"6888:5:19","nodeType":"VariableDeclaration","scope":2763,"src":"6883:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2707,"name":"uint","nodeType":"ElementaryTypeName","src":"6883:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2710,"mutability":"mutable","name":"amt","nameLocation":"6900:3:19","nodeType":"VariableDeclaration","scope":2763,"src":"6895:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2709,"name":"uint","nodeType":"ElementaryTypeName","src":"6895:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6833:71:19"},"returnParameters":{"id":2716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2713,"mutability":"mutable","name":"usd","nameLocation":"6932:3:19","nodeType":"VariableDeclaration","scope":2763,"src":"6927:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2712,"name":"uint","nodeType":"ElementaryTypeName","src":"6927:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2715,"mutability":"mutable","name":"bal","nameLocation":"6942:3:19","nodeType":"VariableDeclaration","scope":2763,"src":"6937:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2714,"name":"uint","nodeType":"ElementaryTypeName","src":"6937:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6926:20:19"},"scope":2764,"src":"6818:579:19","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2765,"src":"170:7229:19","usedErrors":[]}],"src":"37:7362:19"},"id":19},"contracts/vault/baseContracts/RewardHandler.sol":{"ast":{"absolutePath":"contracts/vault/baseContracts/RewardHandler.sol","exportedSymbols":{"ComputationalView":[2764],"IComputationalView":[1887],"IDXBL":[1464],"IERC20":[664],"IERC20Metadata":[689],"IPriceFeed":[1909],"IRewardHandler":[1922],"LibConstants":[1389],"RewardHandler":[3177],"VaultStorage":[2107]},"id":3178,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":2766,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"37:24:20"},{"absolutePath":"contracts/vault/VaultStorage.sol","file":"../VaultStorage.sol","id":2767,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3178,"sourceUnit":2108,"src":"63:29:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/vault/IComputationalView.sol","file":"../IComputationalView.sol","id":2768,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3178,"sourceUnit":1888,"src":"93:35:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/common/LibConstants.sol","file":"../../common/LibConstants.sol","id":2769,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3178,"sourceUnit":1390,"src":"129:39:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/vault/baseContracts/ComputationalView.sol","file":"./ComputationalView.sol","id":2770,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3178,"sourceUnit":2765,"src":"169:33:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/vault/IRewardHandler.sol","file":"../IRewardHandler.sol","id":2771,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3178,"sourceUnit":1923,"src":"203:31:20","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2772,"name":"IRewardHandler","nameLocations":["271:14:20"],"nodeType":"IdentifierPath","referencedDeclaration":1922,"src":"271:14:20"},"id":2773,"nodeType":"InheritanceSpecifier","src":"271:14:20"}],"canonicalName":"RewardHandler","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3177,"linearizedBaseContracts":[3177,1922],"name":"RewardHandler","nameLocation":"254:13:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":2794,"nodeType":"Block","src":"316:142:20","statements":[{"assignments":[2779],"declarations":[{"constant":false,"id":2779,"mutability":"mutable","name":"vs","nameLocation":"357:2:20","nodeType":"VariableDeclaration","scope":2794,"src":"326:33:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"},"typeName":{"id":2778,"nodeType":"UserDefinedTypeName","pathNode":{"id":2777,"name":"VaultStorage.VaultData","nameLocations":["326:12:20","339:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":2086,"src":"326:22:20"},"referencedDeclaration":2086,"src":"326:22:20","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"}},"visibility":"internal"}],"id":2783,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2780,"name":"VaultStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"362:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VaultStorage_$2107_$","typeString":"type(library VaultStorage)"}},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"375:4:20","memberName":"load","nodeType":"MemberAccess","referencedDeclaration":2106,"src":"362:17:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VaultData_$2086_storage_ptr_$","typeString":"function () pure returns (struct VaultStorage.VaultData storage pointer)"}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"362:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"326:55:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2785,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"399:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"403:6:20","memberName":"sender","nodeType":"MemberAccess","src":"399:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2787,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"413:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":2788,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"416:7:20","memberName":"dexible","nodeType":"MemberAccess","referencedDeclaration":2049,"src":"413:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"399:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e617574686f72697a6564","id":2790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"425:14:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5","typeString":"literal_string \"Unauthorized\""},"value":"Unauthorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5","typeString":"literal_string \"Unauthorized\""}],"id":2784,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"391:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"391:49:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2792,"nodeType":"ExpressionStatement","src":"391:49:20"},{"id":2793,"nodeType":"PlaceholderStatement","src":"450:1:20"}]},"id":2795,"name":"onlyDexible","nameLocation":"302:11:20","nodeType":"ModifierDefinition","parameters":{"id":2774,"nodeType":"ParameterList","parameters":[],"src":"313:2:20"},"src":"293:165:20","virtual":false,"visibility":"internal"},{"baseFunctions":[1921],"body":{"id":2863,"nodeType":"Block","src":"609:559:20","statements":[{"assignments":[2812],"declarations":[{"constant":false,"id":2812,"mutability":"mutable","name":"rs","nameLocation":"650:2:20","nodeType":"VariableDeclaration","scope":2863,"src":"619:33:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"},"typeName":{"id":2811,"nodeType":"UserDefinedTypeName","pathNode":{"id":2810,"name":"VaultStorage.VaultData","nameLocations":["619:12:20","632:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":2086,"src":"619:22:20"},"referencedDeclaration":2086,"src":"619:22:20","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"}},"visibility":"internal"}],"id":2816,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2813,"name":"VaultStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"655:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VaultStorage_$2107_$","typeString":"type(library VaultStorage)"}},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"668:4:20","memberName":"load","nodeType":"MemberAccess","referencedDeclaration":2106,"src":"655:17:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VaultData_$2086_storage_ptr_$","typeString":"function () pure returns (struct VaultStorage.VaultData storage pointer)"}},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"655:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"619:55:20"},{"assignments":[2818],"declarations":[{"constant":false,"id":2818,"mutability":"mutable","name":"volumeUSD","nameLocation":"689:9:20","nodeType":"VariableDeclaration","scope":2863,"src":"684:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2817,"name":"uint","nodeType":"ElementaryTypeName","src":"684:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2829,"initialValue":{"arguments":[{"id":2826,"name":"feeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"752:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2827,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"762:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":2822,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"728:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_RewardHandler_$3177","typeString":"contract RewardHandler"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RewardHandler_$3177","typeString":"contract RewardHandler"}],"id":2821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"720:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2820,"name":"address","nodeType":"ElementaryTypeName","src":"720:7:20","typeDescriptions":{}}},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"720:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2819,"name":"IComputationalView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"701:18:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IComputationalView_$1887_$","typeString":"type(contract IComputationalView)"}},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"701:33:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IComputationalView_$1887","typeString":"contract IComputationalView"}},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"735:16:20","memberName":"computeVolumeUSD","nodeType":"MemberAccess","referencedDeclaration":1886,"src":"701:50:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"701:68:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"684:85:20"},{"assignments":[2831],"declarations":[{"constant":false,"id":2831,"mutability":"mutable","name":"rate","nameLocation":"819:4:20","nodeType":"VariableDeclaration","scope":2863,"src":"814:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2830,"name":"uint","nodeType":"ElementaryTypeName","src":"814:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2840,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"arguments":[{"id":2835,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"853:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_RewardHandler_$3177","typeString":"contract RewardHandler"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RewardHandler_$3177","typeString":"contract RewardHandler"}],"id":2834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"845:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2833,"name":"address","nodeType":"ElementaryTypeName","src":"845:7:20","typeDescriptions":{}}},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"845:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2832,"name":"IComputationalView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"826:18:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IComputationalView_$1887_$","typeString":"type(contract IComputationalView)"}},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"826:33:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IComputationalView_$1887","typeString":"contract IComputationalView"}},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"860:18:20","memberName":"currentMintRateUSD","nodeType":"MemberAccess","referencedDeclaration":1877,"src":"826:52:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"826:54:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"814:66:20"},{"expression":{"arguments":[{"id":2842,"name":"volumeUSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"954:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2841,"name":"_adjustVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"940:13:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"940:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2844,"nodeType":"ExpressionStatement","src":"940:24:20"},{"assignments":[2846],"declarations":[{"constant":false,"id":2846,"mutability":"mutable","name":"tokens","nameLocation":"1030:6:20","nodeType":"VariableDeclaration","scope":2863,"src":"1025:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2845,"name":"uint","nodeType":"ElementaryTypeName","src":"1025:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2853,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2847,"name":"volumeUSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"1040:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":2848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:4:20","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"1040:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2850,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1039:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2851,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"1058:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1039:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1025:37:20"},{"expression":{"arguments":[{"id":2859,"name":"trader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"1146:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2860,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"1154:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2854,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"1133:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":2857,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1136:4:20","memberName":"dxbl","nodeType":"MemberAccess","referencedDeclaration":2047,"src":"1133:7:20","typeDescriptions":{"typeIdentifier":"t_contract$_IDXBL_$1464","typeString":"contract IDXBL"}},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1141:4:20","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":1438,"src":"1133:12:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1133:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2862,"nodeType":"ExpressionStatement","src":"1133:28:20"}]},"documentation":{"id":2796,"nodeType":"StructuredDocumentation","src":"464:41:20","text":" Modification functions"},"functionSelector":"ab1094c0","id":2864,"implemented":true,"kind":"function","modifiers":[{"id":2806,"kind":"modifierInvocation","modifierName":{"id":2805,"name":"onlyDexible","nameLocations":["597:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":2795,"src":"597:11:20"},"nodeType":"ModifierInvocation","src":"597:11:20"}],"name":"rewardTrader","nameLocation":"519:12:20","nodeType":"FunctionDefinition","overrides":{"id":2804,"nodeType":"OverrideSpecifier","overrides":[],"src":"588:8:20"},"parameters":{"id":2803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2798,"mutability":"mutable","name":"trader","nameLocation":"540:6:20","nodeType":"VariableDeclaration","scope":2864,"src":"532:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2797,"name":"address","nodeType":"ElementaryTypeName","src":"532:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2800,"mutability":"mutable","name":"feeToken","nameLocation":"556:8:20","nodeType":"VariableDeclaration","scope":2864,"src":"548:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2799,"name":"address","nodeType":"ElementaryTypeName","src":"548:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2802,"mutability":"mutable","name":"amount","nameLocation":"571:6:20","nodeType":"VariableDeclaration","scope":2864,"src":"566:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2801,"name":"uint","nodeType":"ElementaryTypeName","src":"566:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"531:47:20"},"returnParameters":{"id":2807,"nodeType":"ParameterList","parameters":[],"src":"609:0:20"},"scope":3177,"src":"510:658:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2995,"nodeType":"Block","src":"1223:1830:20","statements":[{"assignments":[2873],"declarations":[{"constant":false,"id":2873,"mutability":"mutable","name":"rs","nameLocation":"1264:2:20","nodeType":"VariableDeclaration","scope":2995,"src":"1233:33:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"},"typeName":{"id":2872,"nodeType":"UserDefinedTypeName","pathNode":{"id":2871,"name":"VaultStorage.VaultData","nameLocations":["1233:12:20","1246:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":2086,"src":"1233:22:20"},"referencedDeclaration":2086,"src":"1233:22:20","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"}},"visibility":"internal"}],"id":2877,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2874,"name":"VaultStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"1269:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VaultStorage_$2107_$","typeString":"type(library VaultStorage)"}},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1282:4:20","memberName":"load","nodeType":"MemberAccess","referencedDeclaration":2106,"src":"1269:17:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VaultData_$2086_storage_ptr_$","typeString":"function () pure returns (struct VaultStorage.VaultData storage pointer)"}},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1269:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"1233:55:20"},{"assignments":[2879],"declarations":[{"constant":false,"id":2879,"mutability":"mutable","name":"lastTrade","nameLocation":"1335:9:20","nodeType":"VariableDeclaration","scope":2995,"src":"1330:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2878,"name":"uint","nodeType":"ElementaryTypeName","src":"1330:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2882,"initialValue":{"expression":{"id":2880,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"1347:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":2881,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1350:18:20","memberName":"lastTradeTimestamp","nodeType":"MemberAccess","referencedDeclaration":2059,"src":"1347:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1330:38:20"},{"expression":{"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2883,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"1425:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":2885,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1428:18:20","memberName":"lastTradeTimestamp","nodeType":"MemberAccess","referencedDeclaration":2059,"src":"1425:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2886,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1449:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1455:9:20","memberName":"timestamp","nodeType":"MemberAccess","src":"1449:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1425:39:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2889,"nodeType":"ExpressionStatement","src":"1425:39:20"},{"assignments":[2891],"declarations":[{"constant":false,"id":2891,"mutability":"mutable","name":"newVolume","nameLocation":"1479:9:20","nodeType":"VariableDeclaration","scope":2995,"src":"1474:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2890,"name":"uint","nodeType":"ElementaryTypeName","src":"1474:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2893,"initialValue":{"id":2892,"name":"volumeUSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"1491:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1474:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2894,"name":"lastTrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"1513:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1525:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1513:13:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2897,"name":"lastTrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"1530:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2898,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1544:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1550:9:20","memberName":"timestamp","nodeType":"MemberAccess","src":"1544:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":2900,"name":"LibConstants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"1562:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibConstants_$1389_$","typeString":"type(library LibConstants)"}},"id":2901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1575:3:20","memberName":"DAY","nodeType":"MemberAccess","referencedDeclaration":1373,"src":"1562:16:20","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"1544:34:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2903,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1543:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1530:49:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1513:66:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2976,"nodeType":"Block","src":"1634:1302:20","statements":[{"assignments":[2912],"declarations":[{"constant":false,"id":2912,"mutability":"mutable","name":"hr","nameLocation":"1772:2:20","nodeType":"VariableDeclaration","scope":2976,"src":"1767:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2911,"name":"uint","nodeType":"ElementaryTypeName","src":"1767:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2922,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2913,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1778:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1784:9:20","memberName":"timestamp","nodeType":"MemberAccess","src":"1778:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"expression":{"id":2915,"name":"LibConstants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"1796:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibConstants_$1389_$","typeString":"type(library LibConstants)"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1809:3:20","memberName":"DAY","nodeType":"MemberAccess","referencedDeclaration":1373,"src":"1796:16:20","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"1778:34:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2918,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1777:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":2919,"name":"LibConstants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"1816:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibConstants_$1389_$","typeString":"type(library LibConstants)"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1829:4:20","memberName":"HOUR","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"1816:17:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"1777:56:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1767:66:20"},{"assignments":[2924],"declarations":[{"constant":false,"id":2924,"mutability":"mutable","name":"slot","nameLocation":"1852:4:20","nodeType":"VariableDeclaration","scope":2976,"src":"1847:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2923,"name":"uint","nodeType":"ElementaryTypeName","src":"1847:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2926,"initialValue":{"hexValue":"30","id":2925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1859:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1847:13:20"},{"id":2936,"nodeType":"UncheckedBlock","src":"1926:29:20","statements":[{"expression":{"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2927,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"1936:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2928,"name":"hr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"1944:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1947:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1944:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2931,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1943:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3234","id":2932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:2:20","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"src":"1943:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1936:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2935,"nodeType":"ExpressionStatement","src":"1936:16:20"}]},{"assignments":[2938],"declarations":[{"constant":false,"id":2938,"mutability":"mutable","name":"yesterdayTotal","nameLocation":"2064:14:20","nodeType":"VariableDeclaration","scope":2976,"src":"2059:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2937,"name":"uint","nodeType":"ElementaryTypeName","src":"2059:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2943,"initialValue":{"baseExpression":{"expression":{"id":2939,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"2081:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":2940,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2084:12:20","memberName":"hourlyVolume","nodeType":"MemberAccess","referencedDeclaration":2076,"src":"2081:15:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$24_storage","typeString":"uint256[24] storage ref"}},"id":2942,"indexExpression":{"id":2941,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"2097:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2081:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2059:43:20"},{"expression":{"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2944,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"2409:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":2947,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2412:12:20","memberName":"hourlyVolume","nodeType":"MemberAccess","referencedDeclaration":2076,"src":"2409:15:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$24_storage","typeString":"uint256[24] storage ref"}},"id":2948,"indexExpression":{"id":2946,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"2425:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2409:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2433:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2409:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2951,"nodeType":"ExpressionStatement","src":"2409:25:20"},{"expression":{"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2952,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"2498:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":2955,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2501:12:20","memberName":"hourlyVolume","nodeType":"MemberAccess","referencedDeclaration":2076,"src":"2498:15:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$24_storage","typeString":"uint256[24] storage ref"}},"id":2956,"indexExpression":{"id":2954,"name":"hr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"2514:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2498:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2957,"name":"volumeUSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"2521:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2498:32:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2959,"nodeType":"ExpressionStatement","src":"2498:32:20"},{"expression":{"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2960,"name":"newVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"2599:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2961,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"2611:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":2962,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2614:13:20","memberName":"currentVolume","nodeType":"MemberAccess","referencedDeclaration":2057,"src":"2611:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2963,"name":"volumeUSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"2630:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2611:28:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2599:40:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2966,"nodeType":"ExpressionStatement","src":"2599:40:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2967,"name":"yesterdayTotal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"2723:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2740:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2723:18:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2975,"nodeType":"IfStatement","src":"2720:205:20","trueBody":{"id":2974,"nodeType":"Block","src":"2743:182:20","statements":[{"expression":{"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2970,"name":"newVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"2883:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2971,"name":"yesterdayTotal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"2896:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2883:27:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2973,"nodeType":"ExpressionStatement","src":"2883:27:20"}]}}]},"id":2977,"nodeType":"IfStatement","src":"1510:1426:20","trueBody":{"id":2910,"nodeType":"Block","src":"1581:47:20","statements":[{"expression":{"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"1595:22:20","subExpression":{"expression":{"id":2906,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"1602:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":2907,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1605:12:20","memberName":"hourlyVolume","nodeType":"MemberAccess","referencedDeclaration":2076,"src":"1602:15:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$24_storage","typeString":"uint256[24] storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2909,"nodeType":"ExpressionStatement","src":"1595:22:20"}]}},{"expression":{"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2978,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"2945:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":2980,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2948:13:20","memberName":"currentVolume","nodeType":"MemberAccess","referencedDeclaration":2057,"src":"2945:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2981,"name":"newVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"2964:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2945:28:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2983,"nodeType":"ExpressionStatement","src":"2945:28:20"},{"expression":{"arguments":[{"id":2985,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"2999:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2988,"name":"newVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"3010:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":2989,"name":"LibConstants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"3022:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibConstants_$1389_$","typeString":"type(library LibConstants)"}},"id":2990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3035:9:20","memberName":"MM_VOLUME","nodeType":"MemberAccess","referencedDeclaration":1379,"src":"3022:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3010:34:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3003:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":2986,"name":"uint16","nodeType":"ElementaryTypeName","src":"3003:6:20","typeDescriptions":{}}},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3003:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":2984,"name":"_adjustMintRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"2983:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_VaultData_$2086_storage_ptr_$_t_uint16_$returns$__$","typeString":"function (struct VaultStorage.VaultData storage pointer,uint16)"}},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2983:63:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2994,"nodeType":"ExpressionStatement","src":"2983:63:20"}]},"id":2996,"implemented":true,"kind":"function","modifiers":[],"name":"_adjustVolume","nameLocation":"1184:13:20","nodeType":"FunctionDefinition","parameters":{"id":2867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2866,"mutability":"mutable","name":"volumeUSD","nameLocation":"1203:9:20","nodeType":"VariableDeclaration","scope":2996,"src":"1198:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2865,"name":"uint","nodeType":"ElementaryTypeName","src":"1198:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1197:16:20"},"returnParameters":{"id":2868,"nodeType":"ParameterList","parameters":[],"src":"1223:0:20"},"scope":3177,"src":"1175:1878:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3035,"nodeType":"Block","src":"3264:705:20","statements":[{"assignments":[3009],"declarations":[{"constant":false,"id":3009,"mutability":"mutable","name":"mr","nameLocation":"3317:2:20","nodeType":"VariableDeclaration","scope":3035,"src":"3283:36:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_memory_ptr","typeString":"struct VaultStorage.MintRateRange"},"typeName":{"id":3008,"nodeType":"UserDefinedTypeName","pathNode":{"id":3007,"name":"VaultStorage.MintRateRange","nameLocations":["3283:12:20","3296:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":2034,"src":"3283:26:20"},"referencedDeclaration":2034,"src":"3283:26:20","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_storage_ptr","typeString":"struct VaultStorage.MintRateRange"}},"visibility":"internal"}],"id":3012,"initialValue":{"expression":{"id":3010,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"3322:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":3011,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3325:15:20","memberName":"currentMintRate","nodeType":"MemberAccess","referencedDeclaration":2068,"src":"3322:18:20","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_storage","typeString":"struct VaultStorage.MintRateRange storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3283:57:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3013,"name":"mr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"3435:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_memory_ptr","typeString":"struct VaultStorage.MintRateRange memory"}},"id":3014,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3438:11:20","memberName":"maxMMVolume","nodeType":"MemberAccess","referencedDeclaration":2029,"src":"3435:14:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3015,"name":"normalizedMMInVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"3453:20:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"3435:38:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3023,"name":"mr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"3711:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_memory_ptr","typeString":"struct VaultStorage.MintRateRange memory"}},"id":3024,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3714:11:20","memberName":"minMMVolume","nodeType":"MemberAccess","referencedDeclaration":2027,"src":"3711:14:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3025,"name":"normalizedMMInVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"3729:20:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"3711:38:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3033,"nodeType":"IfStatement","src":"3708:228:20","trueBody":{"id":3032,"nodeType":"Block","src":"3751:185:20","statements":[{"expression":{"arguments":[{"id":3028,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"3900:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},{"id":3029,"name":"normalizedMMInVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"3904:20:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":3027,"name":"_adjustMintRateDown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"3880:19:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_VaultData_$2086_storage_ptr_$_t_uint16_$returns$__$","typeString":"function (struct VaultStorage.VaultData storage pointer,uint16)"}},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3880:45:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3031,"nodeType":"ExpressionStatement","src":"3880:45:20"}]}},"id":3034,"nodeType":"IfStatement","src":"3432:504:20","trueBody":{"id":3022,"nodeType":"Block","src":"3475:227:20","statements":[{"expression":{"arguments":[{"id":3018,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"3584:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},{"id":3019,"name":"normalizedMMInVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"3588:20:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":3017,"name":"_adjustMintRateUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"3566:17:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_VaultData_$2086_storage_ptr_$_t_uint16_$returns$__$","typeString":"function (struct VaultStorage.VaultData storage pointer,uint16)"}},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3566:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3021,"nodeType":"ExpressionStatement","src":"3566:43:20"}]}}]},"documentation":{"id":2997,"nodeType":"StructuredDocumentation","src":"3059:102:20","text":" Make an adjustment to the mint rate if the 24hr volume falls into a new rate bucket"},"id":3036,"implemented":true,"kind":"function","modifiers":[],"name":"_adjustMintRate","nameLocation":"3175:15:20","nodeType":"FunctionDefinition","parameters":{"id":3003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3000,"mutability":"mutable","name":"rs","nameLocation":"3222:2:20","nodeType":"VariableDeclaration","scope":3036,"src":"3191:33:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"},"typeName":{"id":2999,"nodeType":"UserDefinedTypeName","pathNode":{"id":2998,"name":"VaultStorage.VaultData","nameLocations":["3191:12:20","3204:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":2086,"src":"3191:22:20"},"referencedDeclaration":2086,"src":"3191:22:20","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"}},"visibility":"internal"},{"constant":false,"id":3002,"mutability":"mutable","name":"normalizedMMInVolume","nameLocation":"3233:20:20","nodeType":"VariableDeclaration","scope":3036,"src":"3226:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3001,"name":"uint16","nodeType":"ElementaryTypeName","src":"3226:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"3190:64:20"},"returnParameters":{"id":3004,"nodeType":"ParameterList","parameters":[],"src":"3264:0:20"},"scope":3177,"src":"3166:803:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3098,"nodeType":"Block","src":"4140:620:20","statements":[{"assignments":[3049],"declarations":[{"constant":false,"id":3049,"mutability":"mutable","name":"mr","nameLocation":"4184:2:20","nodeType":"VariableDeclaration","scope":3098,"src":"4150:36:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_memory_ptr","typeString":"struct VaultStorage.MintRateRange"},"typeName":{"id":3048,"nodeType":"UserDefinedTypeName","pathNode":{"id":3047,"name":"VaultStorage.MintRateRange","nameLocations":["4150:12:20","4163:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":2034,"src":"4150:26:20"},"referencedDeclaration":2034,"src":"4150:26:20","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_storage_ptr","typeString":"struct VaultStorage.MintRateRange"}},"visibility":"internal"}],"id":3052,"initialValue":{"expression":{"id":3050,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"4189:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":3051,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4192:15:20","memberName":"currentMintRate","nodeType":"MemberAccess","referencedDeclaration":2068,"src":"4189:18:20","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_storage","typeString":"struct VaultStorage.MintRateRange storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4150:57:20"},{"body":{"id":3082,"nodeType":"Block","src":"4245:354:20","statements":[{"assignments":[3062],"declarations":[{"constant":false,"id":3062,"mutability":"mutable","name":"next","nameLocation":"4387:4:20","nodeType":"VariableDeclaration","scope":3082,"src":"4352:39:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_storage_ptr","typeString":"struct VaultStorage.MintRateRange"},"typeName":{"id":3061,"nodeType":"UserDefinedTypeName","pathNode":{"id":3060,"name":"VaultStorage.MintRateRange","nameLocations":["4352:12:20","4365:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":2034,"src":"4352:26:20"},"referencedDeclaration":2034,"src":"4352:26:20","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_storage_ptr","typeString":"struct VaultStorage.MintRateRange"}},"visibility":"internal"}],"id":3070,"initialValue":{"baseExpression":{"expression":{"id":3063,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"4394:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":3064,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4397:14:20","memberName":"mintRateRanges","nodeType":"MemberAccess","referencedDeclaration":2072,"src":"4394:17:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MintRateRange_$2034_storage_$dyn_storage","typeString":"struct VaultStorage.MintRateRange storage ref[] storage ref"}},"id":3069,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3065,"name":"mr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"4412:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_memory_ptr","typeString":"struct VaultStorage.MintRateRange memory"}},"id":3066,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4415:5:20","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":2033,"src":"4412:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4423:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4412:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4394:31:20","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_storage","typeString":"struct VaultStorage.MintRateRange storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4352:73:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3071,"name":"next","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"4442:4:20","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_storage_ptr","typeString":"struct VaultStorage.MintRateRange storage pointer"}},"id":3072,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4447:4:20","memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":2031,"src":"4442:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4455:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4442:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3077,"nodeType":"IfStatement","src":"4439:127:20","trueBody":{"id":3076,"nodeType":"Block","src":"4458:108:20","statements":[{"id":3075,"nodeType":"Break","src":"4546:5:20"}]}},{"expression":{"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3078,"name":"mr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"4579:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_memory_ptr","typeString":"struct VaultStorage.MintRateRange memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3079,"name":"next","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"4584:4:20","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_storage_ptr","typeString":"struct VaultStorage.MintRateRange storage pointer"}},"src":"4579:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_memory_ptr","typeString":"struct VaultStorage.MintRateRange memory"}},"id":3081,"nodeType":"ExpressionStatement","src":"4579:9:20"}]},"condition":{"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4223:20:20","subExpression":{"arguments":[{"id":3054,"name":"mr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"4237:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_memory_ptr","typeString":"struct VaultStorage.MintRateRange memory"}},{"id":3055,"name":"mm","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"4240:2:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_MintRateRange_$2034_memory_ptr","typeString":"struct VaultStorage.MintRateRange memory"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":3053,"name":"_rateInRange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"4224:12:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_MintRateRange_$2034_memory_ptr_$_t_uint16_$returns$_t_bool_$","typeString":"function (struct VaultStorage.MintRateRange memory,uint16) pure returns (bool)"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4224:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3083,"nodeType":"WhileStatement","src":"4217:382:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3084,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"4661:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":3085,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4664:15:20","memberName":"currentMintRate","nodeType":"MemberAccess","referencedDeclaration":2068,"src":"4661:18:20","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_storage","typeString":"struct VaultStorage.MintRateRange storage ref"}},"id":3086,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4680:4:20","memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":2031,"src":"4661:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3087,"name":"mr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"4688:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_memory_ptr","typeString":"struct VaultStorage.MintRateRange memory"}},"id":3088,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4691:4:20","memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":2031,"src":"4688:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4661:34:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3097,"nodeType":"IfStatement","src":"4658:87:20","trueBody":{"id":3096,"nodeType":"Block","src":"4697:48:20","statements":[{"expression":{"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3090,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"4711:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":3092,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4714:15:20","memberName":"currentMintRate","nodeType":"MemberAccess","referencedDeclaration":2068,"src":"4711:18:20","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_storage","typeString":"struct VaultStorage.MintRateRange storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3093,"name":"mr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"4732:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_memory_ptr","typeString":"struct VaultStorage.MintRateRange memory"}},"src":"4711:23:20","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_storage","typeString":"struct VaultStorage.MintRateRange storage ref"}},"id":3095,"nodeType":"ExpressionStatement","src":"4711:23:20"}]}}]},"documentation":{"id":3037,"nodeType":"StructuredDocumentation","src":"3975:78:20","text":" Increase the minimum volume required to mint a single token"},"id":3099,"implemented":true,"kind":"function","modifiers":[],"name":"_adjustMintRateUp","nameLocation":"4067:17:20","nodeType":"FunctionDefinition","parameters":{"id":3043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3040,"mutability":"mutable","name":"rs","nameLocation":"4116:2:20","nodeType":"VariableDeclaration","scope":3099,"src":"4085:33:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"},"typeName":{"id":3039,"nodeType":"UserDefinedTypeName","pathNode":{"id":3038,"name":"VaultStorage.VaultData","nameLocations":["4085:12:20","4098:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":2086,"src":"4085:22:20"},"referencedDeclaration":2086,"src":"4085:22:20","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"}},"visibility":"internal"},{"constant":false,"id":3042,"mutability":"mutable","name":"mm","nameLocation":"4127:2:20","nodeType":"VariableDeclaration","scope":3099,"src":"4120:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3041,"name":"uint16","nodeType":"ElementaryTypeName","src":"4120:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"4084:46:20"},"returnParameters":{"id":3044,"nodeType":"ParameterList","parameters":[],"src":"4140:0:20"},"scope":3177,"src":"4058:702:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3154,"nodeType":"Block","src":"4931:507:20","statements":[{"assignments":[3112],"declarations":[{"constant":false,"id":3112,"mutability":"mutable","name":"mr","nameLocation":"4975:2:20","nodeType":"VariableDeclaration","scope":3154,"src":"4941:36:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_memory_ptr","typeString":"struct VaultStorage.MintRateRange"},"typeName":{"id":3111,"nodeType":"UserDefinedTypeName","pathNode":{"id":3110,"name":"VaultStorage.MintRateRange","nameLocations":["4941:12:20","4954:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":2034,"src":"4941:26:20"},"referencedDeclaration":2034,"src":"4941:26:20","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_storage_ptr","typeString":"struct VaultStorage.MintRateRange"}},"visibility":"internal"}],"id":3115,"initialValue":{"expression":{"id":3113,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"4980:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":3114,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4983:15:20","memberName":"currentMintRate","nodeType":"MemberAccess","referencedDeclaration":2068,"src":"4980:18:20","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_storage","typeString":"struct VaultStorage.MintRateRange storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4941:57:20"},{"body":{"id":3146,"nodeType":"Block","src":"5036:363:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3121,"name":"mr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"5053:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_memory_ptr","typeString":"struct VaultStorage.MintRateRange memory"}},"id":3122,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5056:5:20","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":2033,"src":"5053:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5064:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5053:12:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3144,"nodeType":"Block","src":"5303:86:20","statements":[{"id":3143,"nodeType":"Break","src":"5369:5:20"}]},"id":3145,"nodeType":"IfStatement","src":"5050:339:20","trueBody":{"id":3142,"nodeType":"Block","src":"5067:230:20","statements":[{"assignments":[3129],"declarations":[{"constant":false,"id":3129,"mutability":"mutable","name":"next","nameLocation":"5217:4:20","nodeType":"VariableDeclaration","scope":3142,"src":"5182:39:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_storage_ptr","typeString":"struct VaultStorage.MintRateRange"},"typeName":{"id":3128,"nodeType":"UserDefinedTypeName","pathNode":{"id":3127,"name":"VaultStorage.MintRateRange","nameLocations":["5182:12:20","5195:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":2034,"src":"5182:26:20"},"referencedDeclaration":2034,"src":"5182:26:20","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_storage_ptr","typeString":"struct VaultStorage.MintRateRange"}},"visibility":"internal"}],"id":3137,"initialValue":{"baseExpression":{"expression":{"id":3130,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"5224:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":3131,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5227:14:20","memberName":"mintRateRanges","nodeType":"MemberAccess","referencedDeclaration":2072,"src":"5224:17:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MintRateRange_$2034_storage_$dyn_storage","typeString":"struct VaultStorage.MintRateRange storage ref[] storage ref"}},"id":3136,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3132,"name":"mr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"5242:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_memory_ptr","typeString":"struct VaultStorage.MintRateRange memory"}},"id":3133,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5245:5:20","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":2033,"src":"5242:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5253:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5242:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5224:31:20","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_storage","typeString":"struct VaultStorage.MintRateRange storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5182:73:20"},{"expression":{"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3138,"name":"mr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"5273:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_memory_ptr","typeString":"struct VaultStorage.MintRateRange memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3139,"name":"next","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"5278:4:20","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_storage_ptr","typeString":"struct VaultStorage.MintRateRange storage pointer"}},"src":"5273:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_memory_ptr","typeString":"struct VaultStorage.MintRateRange memory"}},"id":3141,"nodeType":"ExpressionStatement","src":"5273:9:20"}]}}]},"condition":{"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5014:20:20","subExpression":{"arguments":[{"id":3117,"name":"mr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"5028:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_memory_ptr","typeString":"struct VaultStorage.MintRateRange memory"}},{"id":3118,"name":"mm","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"5031:2:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_MintRateRange_$2034_memory_ptr","typeString":"struct VaultStorage.MintRateRange memory"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":3116,"name":"_rateInRange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"5015:12:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_MintRateRange_$2034_memory_ptr_$_t_uint16_$returns$_t_bool_$","typeString":"function (struct VaultStorage.MintRateRange memory,uint16) pure returns (bool)"}},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5015:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3147,"nodeType":"WhileStatement","src":"5008:391:20"},{"expression":{"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3148,"name":"rs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"5408:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":3150,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5411:15:20","memberName":"currentMintRate","nodeType":"MemberAccess","referencedDeclaration":2068,"src":"5408:18:20","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_storage","typeString":"struct VaultStorage.MintRateRange storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3151,"name":"mr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"5429:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_memory_ptr","typeString":"struct VaultStorage.MintRateRange memory"}},"src":"5408:23:20","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_storage","typeString":"struct VaultStorage.MintRateRange storage ref"}},"id":3153,"nodeType":"ExpressionStatement","src":"5408:23:20"}]},"documentation":{"id":3100,"nodeType":"StructuredDocumentation","src":"4770:72:20","text":" Decrease minimum volume required to mint a DXBL token"},"id":3155,"implemented":true,"kind":"function","modifiers":[],"name":"_adjustMintRateDown","nameLocation":"4856:19:20","nodeType":"FunctionDefinition","parameters":{"id":3106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3103,"mutability":"mutable","name":"rs","nameLocation":"4907:2:20","nodeType":"VariableDeclaration","scope":3155,"src":"4876:33:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"},"typeName":{"id":3102,"nodeType":"UserDefinedTypeName","pathNode":{"id":3101,"name":"VaultStorage.VaultData","nameLocations":["4876:12:20","4889:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":2086,"src":"4876:22:20"},"referencedDeclaration":2086,"src":"4876:22:20","typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData"}},"visibility":"internal"},{"constant":false,"id":3105,"mutability":"mutable","name":"mm","nameLocation":"4918:2:20","nodeType":"VariableDeclaration","scope":3155,"src":"4911:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3104,"name":"uint16","nodeType":"ElementaryTypeName","src":"4911:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"4875:46:20"},"returnParameters":{"id":3107,"nodeType":"ParameterList","parameters":[],"src":"4931:0:20"},"scope":3177,"src":"4847:591:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3175,"nodeType":"Block","src":"5602:73:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3165,"name":"range","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"5619:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_memory_ptr","typeString":"struct VaultStorage.MintRateRange memory"}},"id":3166,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5625:11:20","memberName":"minMMVolume","nodeType":"MemberAccess","referencedDeclaration":2027,"src":"5619:17:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3167,"name":"mm","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"5640:2:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"5619:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3169,"name":"mm","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"5646:2:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3170,"name":"range","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"5651:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_memory_ptr","typeString":"struct VaultStorage.MintRateRange memory"}},"id":3171,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5657:11:20","memberName":"maxMMVolume","nodeType":"MemberAccess","referencedDeclaration":2029,"src":"5651:17:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"5646:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5619:49:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3164,"id":3174,"nodeType":"Return","src":"5612:56:20"}]},"id":3176,"implemented":true,"kind":"function","modifiers":[],"name":"_rateInRange","nameLocation":"5508:12:20","nodeType":"FunctionDefinition","parameters":{"id":3161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3158,"mutability":"mutable","name":"range","nameLocation":"5555:5:20","nodeType":"VariableDeclaration","scope":3176,"src":"5521:39:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_memory_ptr","typeString":"struct VaultStorage.MintRateRange"},"typeName":{"id":3157,"nodeType":"UserDefinedTypeName","pathNode":{"id":3156,"name":"VaultStorage.MintRateRange","nameLocations":["5521:12:20","5534:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":2034,"src":"5521:26:20"},"referencedDeclaration":2034,"src":"5521:26:20","typeDescriptions":{"typeIdentifier":"t_struct$_MintRateRange_$2034_storage_ptr","typeString":"struct VaultStorage.MintRateRange"}},"visibility":"internal"},{"constant":false,"id":3160,"mutability":"mutable","name":"mm","nameLocation":"5569:2:20","nodeType":"VariableDeclaration","scope":3176,"src":"5562:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3159,"name":"uint16","nodeType":"ElementaryTypeName","src":"5562:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"5520:52:20"},"returnParameters":{"id":3164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3163,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3176,"src":"5596:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3162,"name":"bool","nodeType":"ElementaryTypeName","src":"5596:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5595:6:20"},"scope":3177,"src":"5499:176:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3178,"src":"236:5446:20","usedErrors":[]}],"src":"37:5645:20"},"id":20},"contracts/vault/baseContracts/StorageView.sol":{"ast":{"absolutePath":"contracts/vault/baseContracts/StorageView.sol","exportedSymbols":{"IDXBL":[1464],"IERC20":[664],"IERC20Metadata":[689],"IPriceFeed":[1909],"IStorageView":[1971],"StorageView":[3288],"VaultStorage":[2107]},"id":3289,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":3179,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"37:24:21"},{"absolutePath":"contracts/vault/VaultStorage.sol","file":"../VaultStorage.sol","id":3180,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3289,"sourceUnit":2108,"src":"63:29:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/vault/IStorageView.sol","file":"../IStorageView.sol","id":3181,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3289,"sourceUnit":1972,"src":"93:29:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3182,"name":"IStorageView","nameLocations":["148:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":1971,"src":"148:12:21"},"id":3183,"nodeType":"InheritanceSpecifier","src":"148:12:21"}],"canonicalName":"StorageView","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3288,"linearizedBaseContracts":[3288,1971],"name":"StorageView","nameLocation":"133:11:21","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1930],"body":{"id":3195,"nodeType":"Block","src":"221:70:21","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3188,"name":"VaultStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"238:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VaultStorage_$2107_$","typeString":"type(library VaultStorage)"}},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"251:4:21","memberName":"load","nodeType":"MemberAccess","referencedDeclaration":2106,"src":"238:17:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VaultData_$2086_storage_ptr_$","typeString":"function () pure returns (struct VaultStorage.VaultData storage pointer)"}},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"238:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":3191,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"258:4:21","memberName":"dxbl","nodeType":"MemberAccess","referencedDeclaration":2047,"src":"238:24:21","typeDescriptions":{"typeIdentifier":"t_contract$_IDXBL_$1464","typeString":"contract IDXBL"}},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"263:19:21","memberName":"discountPerTokenBps","nodeType":"MemberAccess","referencedDeclaration":1431,"src":"238:44:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint32_$","typeString":"function () view external returns (uint32)"}},"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"238:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":3187,"id":3194,"nodeType":"Return","src":"231:53:21"}]},"functionSelector":"6c1f5633","id":3196,"implemented":true,"kind":"function","modifiers":[],"name":"discountBps","nameLocation":"177:11:21","nodeType":"FunctionDefinition","parameters":{"id":3184,"nodeType":"ParameterList","parameters":[],"src":"188:2:21"},"returnParameters":{"id":3187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3196,"src":"213:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3185,"name":"uint32","nodeType":"ElementaryTypeName","src":"213:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"212:8:21"},"scope":3288,"src":"168:123:21","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1935],"body":{"id":3206,"nodeType":"Block","src":"351:57:21","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3201,"name":"VaultStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"368:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VaultStorage_$2107_$","typeString":"type(library VaultStorage)"}},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"381:4:21","memberName":"load","nodeType":"MemberAccess","referencedDeclaration":2106,"src":"368:17:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VaultData_$2086_storage_ptr_$","typeString":"function () pure returns (struct VaultStorage.VaultData storage pointer)"}},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"368:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":3204,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"388:13:21","memberName":"currentVolume","nodeType":"MemberAccess","referencedDeclaration":2057,"src":"368:33:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3200,"id":3205,"nodeType":"Return","src":"361:40:21"}]},"functionSelector":"82131470","id":3207,"implemented":true,"kind":"function","modifiers":[],"name":"dailyVolumeUSD","nameLocation":"306:14:21","nodeType":"FunctionDefinition","parameters":{"id":3197,"nodeType":"ParameterList","parameters":[],"src":"320:2:21"},"returnParameters":{"id":3200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3207,"src":"345:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3198,"name":"uint","nodeType":"ElementaryTypeName","src":"345:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"344:6:21"},"scope":3288,"src":"297:111:21","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1940],"body":{"id":3217,"nodeType":"Block","src":"461:50:21","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3212,"name":"VaultStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"478:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VaultStorage_$2107_$","typeString":"type(library VaultStorage)"}},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"491:4:21","memberName":"load","nodeType":"MemberAccess","referencedDeclaration":2106,"src":"478:17:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VaultData_$2086_storage_ptr_$","typeString":"function () pure returns (struct VaultStorage.VaultData storage pointer)"}},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"478:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":3215,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"498:6:21","memberName":"paused","nodeType":"MemberAccess","referencedDeclaration":2042,"src":"478:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3211,"id":3216,"nodeType":"Return","src":"471:33:21"}]},"functionSelector":"5c975abb","id":3218,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"423:6:21","nodeType":"FunctionDefinition","parameters":{"id":3208,"nodeType":"ParameterList","parameters":[],"src":"429:2:21"},"returnParameters":{"id":3211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3218,"src":"455:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3209,"name":"bool","nodeType":"ElementaryTypeName","src":"455:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"454:6:21"},"scope":3288,"src":"414:97:21","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1945],"body":{"id":3228,"nodeType":"Block","src":"574:57:21","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3223,"name":"VaultStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"591:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VaultStorage_$2107_$","typeString":"type(library VaultStorage)"}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"604:4:21","memberName":"load","nodeType":"MemberAccess","referencedDeclaration":2106,"src":"591:17:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VaultData_$2086_storage_ptr_$","typeString":"function () pure returns (struct VaultStorage.VaultData storage pointer)"}},"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"591:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":3226,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"611:13:21","memberName":"adminMultiSig","nodeType":"MemberAccess","referencedDeclaration":2044,"src":"591:33:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3222,"id":3227,"nodeType":"Return","src":"584:40:21"}]},"functionSelector":"45c6a874","id":3229,"implemented":true,"kind":"function","modifiers":[],"name":"adminMultiSig","nameLocation":"526:13:21","nodeType":"FunctionDefinition","parameters":{"id":3219,"nodeType":"ParameterList","parameters":[],"src":"539:2:21"},"returnParameters":{"id":3222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3229,"src":"565:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3220,"name":"address","nodeType":"ElementaryTypeName","src":"565:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"564:9:21"},"scope":3288,"src":"517:114:21","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1950],"body":{"id":3242,"nodeType":"Block","src":"685:57:21","statements":[{"expression":{"arguments":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3236,"name":"VaultStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"710:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VaultStorage_$2107_$","typeString":"type(library VaultStorage)"}},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:4:21","memberName":"load","nodeType":"MemberAccess","referencedDeclaration":2106,"src":"710:17:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VaultData_$2086_storage_ptr_$","typeString":"function () pure returns (struct VaultStorage.VaultData storage pointer)"}},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"710:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":3239,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"730:4:21","memberName":"dxbl","nodeType":"MemberAccess","referencedDeclaration":2047,"src":"710:24:21","typeDescriptions":{"typeIdentifier":"t_contract$_IDXBL_$1464","typeString":"contract IDXBL"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IDXBL_$1464","typeString":"contract IDXBL"}],"id":3235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"702:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3234,"name":"address","nodeType":"ElementaryTypeName","src":"702:7:21","typeDescriptions":{}}},"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"702:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3233,"id":3241,"nodeType":"Return","src":"695:40:21"}]},"functionSelector":"6162cb91","id":3243,"implemented":true,"kind":"function","modifiers":[],"name":"dxbl","nameLocation":"646:4:21","nodeType":"FunctionDefinition","parameters":{"id":3230,"nodeType":"ParameterList","parameters":[],"src":"650:2:21"},"returnParameters":{"id":3233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3243,"src":"676:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3231,"name":"address","nodeType":"ElementaryTypeName","src":"676:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"675:9:21"},"scope":3288,"src":"637:105:21","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1955],"body":{"id":3253,"nodeType":"Block","src":"799:51:21","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3248,"name":"VaultStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"816:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VaultStorage_$2107_$","typeString":"type(library VaultStorage)"}},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"829:4:21","memberName":"load","nodeType":"MemberAccess","referencedDeclaration":2106,"src":"816:17:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VaultData_$2086_storage_ptr_$","typeString":"function () pure returns (struct VaultStorage.VaultData storage pointer)"}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"816:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":3251,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"836:7:21","memberName":"dexible","nodeType":"MemberAccess","referencedDeclaration":2049,"src":"816:27:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3247,"id":3252,"nodeType":"Return","src":"809:34:21"}]},"functionSelector":"a74aa566","id":3254,"implemented":true,"kind":"function","modifiers":[],"name":"dexible","nameLocation":"757:7:21","nodeType":"FunctionDefinition","parameters":{"id":3244,"nodeType":"ParameterList","parameters":[],"src":"764:2:21"},"returnParameters":{"id":3247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3254,"src":"790:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3245,"name":"address","nodeType":"ElementaryTypeName","src":"790:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"789:9:21"},"scope":3288,"src":"748:102:21","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1960],"body":{"id":3264,"nodeType":"Block","src":"918:62:21","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3259,"name":"VaultStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"935:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VaultStorage_$2107_$","typeString":"type(library VaultStorage)"}},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"948:4:21","memberName":"load","nodeType":"MemberAccess","referencedDeclaration":2106,"src":"935:17:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VaultData_$2086_storage_ptr_$","typeString":"function () pure returns (struct VaultStorage.VaultData storage pointer)"}},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"935:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":3262,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"955:18:21","memberName":"wrappedNativeToken","nodeType":"MemberAccess","referencedDeclaration":2051,"src":"935:38:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3258,"id":3263,"nodeType":"Return","src":"928:45:21"}]},"functionSelector":"17fcb39b","id":3265,"implemented":true,"kind":"function","modifiers":[],"name":"wrappedNativeToken","nameLocation":"865:18:21","nodeType":"FunctionDefinition","parameters":{"id":3255,"nodeType":"ParameterList","parameters":[],"src":"883:2:21"},"returnParameters":{"id":3258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3265,"src":"909:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3256,"name":"address","nodeType":"ElementaryTypeName","src":"909:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"908:9:21"},"scope":3288,"src":"856:124:21","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1965],"body":{"id":3275,"nodeType":"Block","src":"1044:59:21","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3270,"name":"VaultStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"1061:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VaultStorage_$2107_$","typeString":"type(library VaultStorage)"}},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1074:4:21","memberName":"load","nodeType":"MemberAccess","referencedDeclaration":2106,"src":"1061:17:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VaultData_$2086_storage_ptr_$","typeString":"function () pure returns (struct VaultStorage.VaultData storage pointer)"}},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1061:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":3273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1081:15:21","memberName":"timelockSeconds","nodeType":"MemberAccess","referencedDeclaration":2053,"src":"1061:35:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":3269,"id":3274,"nodeType":"Return","src":"1054:42:21"}]},"functionSelector":"65a1f3c3","id":3276,"implemented":true,"kind":"function","modifiers":[],"name":"timelockSeconds","nameLocation":"995:15:21","nodeType":"FunctionDefinition","parameters":{"id":3266,"nodeType":"ParameterList","parameters":[],"src":"1010:2:21"},"returnParameters":{"id":3269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3276,"src":"1036:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3267,"name":"uint32","nodeType":"ElementaryTypeName","src":"1036:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1035:8:21"},"scope":3288,"src":"986:117:21","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1970],"body":{"id":3286,"nodeType":"Block","src":"1167:61:21","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3281,"name":"VaultStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"1184:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VaultStorage_$2107_$","typeString":"type(library VaultStorage)"}},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1197:4:21","memberName":"load","nodeType":"MemberAccess","referencedDeclaration":2106,"src":"1184:17:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VaultData_$2086_storage_ptr_$","typeString":"function () pure returns (struct VaultStorage.VaultData storage pointer)"}},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1184:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VaultData_$2086_storage_ptr","typeString":"struct VaultStorage.VaultData storage pointer"}},"id":3284,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1204:17:21","memberName":"baseMintThreshold","nodeType":"MemberAccess","referencedDeclaration":2055,"src":"1184:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3280,"id":3285,"nodeType":"Return","src":"1177:44:21"}]},"functionSelector":"56168843","id":3287,"implemented":true,"kind":"function","modifiers":[],"name":"baseMintThreshold","nameLocation":"1118:17:21","nodeType":"FunctionDefinition","parameters":{"id":3277,"nodeType":"ParameterList","parameters":[],"src":"1135:2:21"},"returnParameters":{"id":3280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3287,"src":"1161:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3278,"name":"uint","nodeType":"ElementaryTypeName","src":"1161:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1160:6:21"},"scope":3288,"src":"1109:119:21","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3289,"src":"124:1106:21","usedErrors":[]}],"src":"37:1193:21"},"id":21},"contracts/vault/baseContracts/V1Migration.sol":{"ast":{"absolutePath":"contracts/vault/baseContracts/V1Migration.sol","exportedSymbols":{"IDXBL":[1464],"IERC20":[664],"IERC20Metadata":[689],"IPriceFeed":[1909],"V1Migrateable":[1990],"V1Migration":[3302],"V1MigrationTarget":[1982],"VaultStorage":[2107]},"id":3303,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":3290,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"37:24:22"},{"absolutePath":"contracts/vault/V1Migrateable.sol","file":"../V1Migrateable.sol","id":3291,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3303,"sourceUnit":1991,"src":"63:30:22","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3292,"name":"V1Migrateable","nameLocations":["128:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":1990,"src":"128:13:22"},"id":3293,"nodeType":"InheritanceSpecifier","src":"128:13:22"}],"canonicalName":"V1Migration","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3302,"linearizedBaseContracts":[3302,1990],"name":"V1Migration","nameLocation":"113:11:22","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1989],"body":{"id":3300,"nodeType":"Block","src":"371:16:22","statements":[]},"documentation":{"id":3294,"nodeType":"StructuredDocumentation","src":"149:163:22","text":" Migrate the state of the vault to a new version. This will transfer all current state\n and transfer fee token balances as well. Note that "},"functionSelector":"c76380b7","id":3301,"implemented":true,"kind":"function","modifiers":[],"name":"migrateV1","nameLocation":"326:9:22","nodeType":"FunctionDefinition","parameters":{"id":3298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3297,"mutability":"mutable","name":"target","nameLocation":"354:6:22","nodeType":"VariableDeclaration","scope":3301,"src":"336:24:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_V1MigrationTarget_$1982","typeString":"contract V1MigrationTarget"},"typeName":{"id":3296,"nodeType":"UserDefinedTypeName","pathNode":{"id":3295,"name":"V1MigrationTarget","nameLocations":["336:17:22"],"nodeType":"IdentifierPath","referencedDeclaration":1982,"src":"336:17:22"},"referencedDeclaration":1982,"src":"336:17:22","typeDescriptions":{"typeIdentifier":"t_contract$_V1MigrationTarget_$1982","typeString":"contract V1MigrationTarget"}},"visibility":"internal"}],"src":"335:26:22"},"returnParameters":{"id":3299,"nodeType":"ParameterList","parameters":[],"src":"371:0:22"},"scope":3302,"src":"317:70:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3303,"src":"95:294:22","usedErrors":[]}],"src":"37:352:22"},"id":22}},"contracts":{"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_44":{"entryPoint":null,"id":44,"parameterSlots":2,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":112,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":287,"id":null,"parameterSlots":2,"returnSlots":2},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":453,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":536,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":393,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":90,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4144:23","statements":[{"nodeType":"YulBlock","src":"6:3:23","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:23"},"nodeType":"YulFunctionCall","src":"66:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:23"},"nodeType":"YulFunctionCall","src":"56:31:23"},"nodeType":"YulExpressionStatement","src":"56:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:23","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:23"},"nodeType":"YulFunctionCall","src":"96:15:23"},"nodeType":"YulExpressionStatement","src":"96:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:23"},"nodeType":"YulFunctionCall","src":"120:15:23"},"nodeType":"YulExpressionStatement","src":"120:15:23"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:23"},{"body":{"nodeType":"YulBlock","src":"210:776:23","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:23"},"nodeType":"YulFunctionCall","src":"261:12:23"},"nodeType":"YulExpressionStatement","src":"261:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:23"},"nodeType":"YulFunctionCall","src":"234:17:23"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:23"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:23"},"nodeType":"YulFunctionCall","src":"230:27:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:23"},"nodeType":"YulFunctionCall","src":"223:35:23"},"nodeType":"YulIf","src":"220:55:23"},{"nodeType":"YulVariableDeclaration","src":"284:23:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:23"},"nodeType":"YulFunctionCall","src":"294:13:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:23","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:23"},"nodeType":"YulFunctionCall","src":"330:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:23"},"nodeType":"YulFunctionCall","src":"326:18:23"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:23"},"nodeType":"YulFunctionCall","src":"369:18:23"},"nodeType":"YulExpressionStatement","src":"369:18:23"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:23"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:23"},"nodeType":"YulFunctionCall","src":"356:10:23"},"nodeType":"YulIf","src":"353:36:23"},{"nodeType":"YulVariableDeclaration","src":"398:17:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:23"},"nodeType":"YulFunctionCall","src":"408:7:23"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:23","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:23"},"nodeType":"YulFunctionCall","src":"438:9:23"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:23","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:23"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:23"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:23"},"nodeType":"YulFunctionCall","src":"498:13:23"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:23"},"nodeType":"YulFunctionCall","src":"494:22:23"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:23","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:23"},"nodeType":"YulFunctionCall","src":"490:31:23"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:23"},"nodeType":"YulFunctionCall","src":"486:40:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:23"},"nodeType":"YulFunctionCall","src":"474:53:23"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:23"},"nodeType":"YulFunctionCall","src":"588:18:23"},"nodeType":"YulExpressionStatement","src":"588:18:23"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:23"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:23"},"nodeType":"YulFunctionCall","src":"542:18:23"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:23"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:23"},"nodeType":"YulFunctionCall","src":"562:22:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:23"},"nodeType":"YulFunctionCall","src":"539:46:23"},"nodeType":"YulIf","src":"536:72:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:23","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:23"},"nodeType":"YulFunctionCall","src":"617:22:23"},"nodeType":"YulExpressionStatement","src":"617:22:23"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:23"},"nodeType":"YulFunctionCall","src":"648:18:23"},"nodeType":"YulExpressionStatement","src":"648:18:23"},{"nodeType":"YulVariableDeclaration","src":"675:14:23","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:23","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:23"},"nodeType":"YulFunctionCall","src":"737:12:23"},"nodeType":"YulExpressionStatement","src":"737:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:23"},"nodeType":"YulFunctionCall","src":"708:15:23"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:23"},"nodeType":"YulFunctionCall","src":"704:24:23"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:23"},"nodeType":"YulFunctionCall","src":"701:33:23"},"nodeType":"YulIf","src":"698:53:23"},{"nodeType":"YulVariableDeclaration","src":"760:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:23","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:23"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:23"},"nodeType":"YulFunctionCall","src":"850:14:23"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:23"},"nodeType":"YulFunctionCall","src":"846:23:23"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:23"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:23"},"nodeType":"YulFunctionCall","src":"881:14:23"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:23"},"nodeType":"YulFunctionCall","src":"877:23:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:23"},"nodeType":"YulFunctionCall","src":"871:30:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:23"},"nodeType":"YulFunctionCall","src":"839:63:23"},"nodeType":"YulExpressionStatement","src":"839:63:23"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:23"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:23"},"nodeType":"YulFunctionCall","src":"787:9:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:23","statements":[{"nodeType":"YulAssignment","src":"799:15:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:23"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:23"},"nodeType":"YulFunctionCall","src":"804:10:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:23","statements":[]},"src":"779:133:23"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"936:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"944:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"932:3:23"},"nodeType":"YulFunctionCall","src":"932:15:23"},{"name":"_4","nodeType":"YulIdentifier","src":"949:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"928:3:23"},"nodeType":"YulFunctionCall","src":"928:24:23"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"921:6:23"},"nodeType":"YulFunctionCall","src":"921:35:23"},"nodeType":"YulExpressionStatement","src":"921:35:23"},{"nodeType":"YulAssignment","src":"965:15:23","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"974:6:23"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"965:5:23"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:23","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:23","type":""}],"src":"146:840:23"},{"body":{"nodeType":"YulBlock","src":"1109:444:23","statements":[{"body":{"nodeType":"YulBlock","src":"1155:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1164:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1167:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1157:6:23"},"nodeType":"YulFunctionCall","src":"1157:12:23"},"nodeType":"YulExpressionStatement","src":"1157:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1130:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"1139:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1126:3:23"},"nodeType":"YulFunctionCall","src":"1126:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"1151:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1122:3:23"},"nodeType":"YulFunctionCall","src":"1122:32:23"},"nodeType":"YulIf","src":"1119:52:23"},{"nodeType":"YulVariableDeclaration","src":"1180:30:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1200:9:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1194:5:23"},"nodeType":"YulFunctionCall","src":"1194:16:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1184:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1219:28:23","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1237:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1241:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1233:3:23"},"nodeType":"YulFunctionCall","src":"1233:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"1245:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1229:3:23"},"nodeType":"YulFunctionCall","src":"1229:18:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1223:2:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"1274:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1283:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1286:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1276:6:23"},"nodeType":"YulFunctionCall","src":"1276:12:23"},"nodeType":"YulExpressionStatement","src":"1276:12:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1262:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"1270:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1259:2:23"},"nodeType":"YulFunctionCall","src":"1259:14:23"},"nodeType":"YulIf","src":"1256:34:23"},{"nodeType":"YulAssignment","src":"1299:71:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1342:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"1353:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1338:3:23"},"nodeType":"YulFunctionCall","src":"1338:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1362:7:23"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1309:28:23"},"nodeType":"YulFunctionCall","src":"1309:61:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1299:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"1379:41:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1405:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1416:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1401:3:23"},"nodeType":"YulFunctionCall","src":"1401:18:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1395:5:23"},"nodeType":"YulFunctionCall","src":"1395:25:23"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1383:8:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"1449:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1458:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1461:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1451:6:23"},"nodeType":"YulFunctionCall","src":"1451:12:23"},"nodeType":"YulExpressionStatement","src":"1451:12:23"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1435:8:23"},{"name":"_1","nodeType":"YulIdentifier","src":"1445:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1432:2:23"},"nodeType":"YulFunctionCall","src":"1432:16:23"},"nodeType":"YulIf","src":"1429:36:23"},{"nodeType":"YulAssignment","src":"1474:73:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1517:9:23"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1528:8:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1513:3:23"},"nodeType":"YulFunctionCall","src":"1513:24:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1539:7:23"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1484:28:23"},"nodeType":"YulFunctionCall","src":"1484:63:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1474:6:23"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1067:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1078:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1090:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1098:6:23","type":""}],"src":"991:562:23"},{"body":{"nodeType":"YulBlock","src":"1613:325:23","statements":[{"nodeType":"YulAssignment","src":"1623:22:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1637:1:23","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1640:4:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1633:3:23"},"nodeType":"YulFunctionCall","src":"1633:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1623:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"1654:38:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1684:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"1690:1:23","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1680:3:23"},"nodeType":"YulFunctionCall","src":"1680:12:23"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1658:18:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"1731:31:23","statements":[{"nodeType":"YulAssignment","src":"1733:27:23","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1747:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"1755:4:23","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1743:3:23"},"nodeType":"YulFunctionCall","src":"1743:17:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1733:6:23"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1711:18:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1704:6:23"},"nodeType":"YulFunctionCall","src":"1704:26:23"},"nodeType":"YulIf","src":"1701:61:23"},{"body":{"nodeType":"YulBlock","src":"1821:111:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1842:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1849:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1854:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1845:3:23"},"nodeType":"YulFunctionCall","src":"1845:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1835:6:23"},"nodeType":"YulFunctionCall","src":"1835:31:23"},"nodeType":"YulExpressionStatement","src":"1835:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1886:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1889:4:23","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1879:6:23"},"nodeType":"YulFunctionCall","src":"1879:15:23"},"nodeType":"YulExpressionStatement","src":"1879:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1914:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1917:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1907:6:23"},"nodeType":"YulFunctionCall","src":"1907:15:23"},"nodeType":"YulExpressionStatement","src":"1907:15:23"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1777:18:23"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1800:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"1808:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1797:2:23"},"nodeType":"YulFunctionCall","src":"1797:14:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1774:2:23"},"nodeType":"YulFunctionCall","src":"1774:38:23"},"nodeType":"YulIf","src":"1771:161:23"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1593:4:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1602:6:23","type":""}],"src":"1558:380:23"},{"body":{"nodeType":"YulBlock","src":"1999:65:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2016:1:23","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2019:3:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2009:6:23"},"nodeType":"YulFunctionCall","src":"2009:14:23"},"nodeType":"YulExpressionStatement","src":"2009:14:23"},{"nodeType":"YulAssignment","src":"2032:26:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2050:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2053:4:23","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2040:9:23"},"nodeType":"YulFunctionCall","src":"2040:18:23"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2032:4:23"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1982:3:23","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1990:4:23","type":""}],"src":"1943:121:23"},{"body":{"nodeType":"YulBlock","src":"2150:464:23","statements":[{"body":{"nodeType":"YulBlock","src":"2183:425:23","statements":[{"nodeType":"YulVariableDeclaration","src":"2197:11:23","value":{"kind":"number","nodeType":"YulLiteral","src":"2207:1:23","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2201:2:23","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2228:2:23"},{"name":"array","nodeType":"YulIdentifier","src":"2232:5:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2221:6:23"},"nodeType":"YulFunctionCall","src":"2221:17:23"},"nodeType":"YulExpressionStatement","src":"2221:17:23"},{"nodeType":"YulVariableDeclaration","src":"2251:31:23","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2273:2:23"},{"kind":"number","nodeType":"YulLiteral","src":"2277:4:23","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2263:9:23"},"nodeType":"YulFunctionCall","src":"2263:19:23"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2255:4:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2295:57:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2318:4:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2328:1:23","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2335:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"2347:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2331:3:23"},"nodeType":"YulFunctionCall","src":"2331:19:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2324:3:23"},"nodeType":"YulFunctionCall","src":"2324:27:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2314:3:23"},"nodeType":"YulFunctionCall","src":"2314:38:23"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2299:11:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"2389:23:23","statements":[{"nodeType":"YulAssignment","src":"2391:19:23","value":{"name":"data","nodeType":"YulIdentifier","src":"2406:4:23"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2391:11:23"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2371:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"2383:4:23","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2368:2:23"},"nodeType":"YulFunctionCall","src":"2368:20:23"},"nodeType":"YulIf","src":"2365:47:23"},{"nodeType":"YulVariableDeclaration","src":"2425:41:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2439:4:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2449:1:23","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2456:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"2461:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2452:3:23"},"nodeType":"YulFunctionCall","src":"2452:12:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2445:3:23"},"nodeType":"YulFunctionCall","src":"2445:20:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2435:3:23"},"nodeType":"YulFunctionCall","src":"2435:31:23"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2429:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2479:24:23","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2492:11:23"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2483:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"2577:21:23","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2586:5:23"},{"name":"_1","nodeType":"YulIdentifier","src":"2593:2:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2579:6:23"},"nodeType":"YulFunctionCall","src":"2579:17:23"},"nodeType":"YulExpressionStatement","src":"2579:17:23"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2527:5:23"},{"name":"_2","nodeType":"YulIdentifier","src":"2534:2:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2524:2:23"},"nodeType":"YulFunctionCall","src":"2524:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2538:26:23","statements":[{"nodeType":"YulAssignment","src":"2540:22:23","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2553:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"2560:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2549:3:23"},"nodeType":"YulFunctionCall","src":"2549:13:23"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2540:5:23"}]}]},"pre":{"nodeType":"YulBlock","src":"2520:3:23","statements":[]},"src":"2516:82:23"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2166:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"2171:2:23","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2163:2:23"},"nodeType":"YulFunctionCall","src":"2163:11:23"},"nodeType":"YulIf","src":"2160:448:23"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2122:5:23","type":""},{"name":"len","nodeType":"YulTypedName","src":"2129:3:23","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2134:10:23","type":""}],"src":"2069:545:23"},{"body":{"nodeType":"YulBlock","src":"2704:81:23","statements":[{"nodeType":"YulAssignment","src":"2714:65:23","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2729:4:23"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2747:1:23","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"2750:3:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2743:3:23"},"nodeType":"YulFunctionCall","src":"2743:11:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2760:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2756:3:23"},"nodeType":"YulFunctionCall","src":"2756:6:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2739:3:23"},"nodeType":"YulFunctionCall","src":"2739:24:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2735:3:23"},"nodeType":"YulFunctionCall","src":"2735:29:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2725:3:23"},"nodeType":"YulFunctionCall","src":"2725:40:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2771:1:23","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2774:3:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2767:3:23"},"nodeType":"YulFunctionCall","src":"2767:11:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2722:2:23"},"nodeType":"YulFunctionCall","src":"2722:57:23"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2714:4:23"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2681:4:23","type":""},{"name":"len","nodeType":"YulTypedName","src":"2687:3:23","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2695:4:23","type":""}],"src":"2619:166:23"},{"body":{"nodeType":"YulBlock","src":"2886:1256:23","statements":[{"nodeType":"YulVariableDeclaration","src":"2896:24:23","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2916:3:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2910:5:23"},"nodeType":"YulFunctionCall","src":"2910:10:23"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"2900:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"2963:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2965:16:23"},"nodeType":"YulFunctionCall","src":"2965:18:23"},"nodeType":"YulExpressionStatement","src":"2965:18:23"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2935:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2951:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2955:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2947:3:23"},"nodeType":"YulFunctionCall","src":"2947:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"2959:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2943:3:23"},"nodeType":"YulFunctionCall","src":"2943:18:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2932:2:23"},"nodeType":"YulFunctionCall","src":"2932:30:23"},"nodeType":"YulIf","src":"2929:56:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3038:4:23"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3076:4:23"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3070:5:23"},"nodeType":"YulFunctionCall","src":"3070:11:23"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3044:25:23"},"nodeType":"YulFunctionCall","src":"3044:38:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"3084:6:23"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"2994:43:23"},"nodeType":"YulFunctionCall","src":"2994:97:23"},"nodeType":"YulExpressionStatement","src":"2994:97:23"},{"nodeType":"YulVariableDeclaration","src":"3100:18:23","value":{"kind":"number","nodeType":"YulLiteral","src":"3117:1:23","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3104:9:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3127:23:23","value":{"kind":"number","nodeType":"YulLiteral","src":"3146:4:23","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3131:11:23","type":""}]},{"nodeType":"YulAssignment","src":"3159:24:23","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3172:11:23"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3159:9:23"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3229:656:23","statements":[{"nodeType":"YulVariableDeclaration","src":"3243:35:23","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3262:6:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3274:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3270:3:23"},"nodeType":"YulFunctionCall","src":"3270:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3258:3:23"},"nodeType":"YulFunctionCall","src":"3258:20:23"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3247:7:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3291:49:23","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3335:4:23"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3305:29:23"},"nodeType":"YulFunctionCall","src":"3305:35:23"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3295:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3353:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"3362:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3357:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"3440:172:23","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3465:6:23"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3483:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3488:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3479:3:23"},"nodeType":"YulFunctionCall","src":"3479:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3473:5:23"},"nodeType":"YulFunctionCall","src":"3473:26:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3458:6:23"},"nodeType":"YulFunctionCall","src":"3458:42:23"},"nodeType":"YulExpressionStatement","src":"3458:42:23"},{"nodeType":"YulAssignment","src":"3517:24:23","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3531:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"3539:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3527:3:23"},"nodeType":"YulFunctionCall","src":"3527:14:23"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3517:6:23"}]},{"nodeType":"YulAssignment","src":"3558:40:23","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3575:9:23"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3586:11:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3571:3:23"},"nodeType":"YulFunctionCall","src":"3571:27:23"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3558:9:23"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3387:1:23"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3390:7:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3384:2:23"},"nodeType":"YulFunctionCall","src":"3384:14:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3399:28:23","statements":[{"nodeType":"YulAssignment","src":"3401:24:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3410:1:23"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3413:11:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3406:3:23"},"nodeType":"YulFunctionCall","src":"3406:19:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3401:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"3380:3:23","statements":[]},"src":"3376:236:23"},{"body":{"nodeType":"YulBlock","src":"3660:166:23","statements":[{"nodeType":"YulVariableDeclaration","src":"3678:43:23","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3705:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3710:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3701:3:23"},"nodeType":"YulFunctionCall","src":"3701:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3695:5:23"},"nodeType":"YulFunctionCall","src":"3695:26:23"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"3682:9:23","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3745:6:23"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"3757:9:23"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3784:1:23","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3787:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3780:3:23"},"nodeType":"YulFunctionCall","src":"3780:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"3796:3:23","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3776:3:23"},"nodeType":"YulFunctionCall","src":"3776:24:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3806:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3802:3:23"},"nodeType":"YulFunctionCall","src":"3802:6:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3772:3:23"},"nodeType":"YulFunctionCall","src":"3772:37:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3768:3:23"},"nodeType":"YulFunctionCall","src":"3768:42:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3753:3:23"},"nodeType":"YulFunctionCall","src":"3753:58:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3738:6:23"},"nodeType":"YulFunctionCall","src":"3738:74:23"},"nodeType":"YulExpressionStatement","src":"3738:74:23"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3631:7:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"3640:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3628:2:23"},"nodeType":"YulFunctionCall","src":"3628:19:23"},"nodeType":"YulIf","src":"3625:201:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3846:4:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3860:1:23","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"3863:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3856:3:23"},"nodeType":"YulFunctionCall","src":"3856:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"3872:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3852:3:23"},"nodeType":"YulFunctionCall","src":"3852:22:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3839:6:23"},"nodeType":"YulFunctionCall","src":"3839:36:23"},"nodeType":"YulExpressionStatement","src":"3839:36:23"}]},"nodeType":"YulCase","src":"3222:663:23","value":{"kind":"number","nodeType":"YulLiteral","src":"3227:1:23","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3902:234:23","statements":[{"nodeType":"YulVariableDeclaration","src":"3916:14:23","value":{"kind":"number","nodeType":"YulLiteral","src":"3929:1:23","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3920:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"3965:67:23","statements":[{"nodeType":"YulAssignment","src":"3983:35:23","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4002:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4007:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:23"},"nodeType":"YulFunctionCall","src":"3998:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3992:5:23"},"nodeType":"YulFunctionCall","src":"3992:26:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3983:5:23"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"3946:6:23"},"nodeType":"YulIf","src":"3943:89:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4052:4:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4111:5:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"4118:6:23"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4058:52:23"},"nodeType":"YulFunctionCall","src":"4058:67:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4045:6:23"},"nodeType":"YulFunctionCall","src":"4045:81:23"},"nodeType":"YulExpressionStatement","src":"4045:81:23"}]},"nodeType":"YulCase","src":"3894:242:23","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3202:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"3210:2:23","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3199:2:23"},"nodeType":"YulFunctionCall","src":"3199:14:23"},"nodeType":"YulSwitch","src":"3192:944:23"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2871:4:23","type":""},{"name":"src","nodeType":"YulTypedName","src":"2877:3:23","type":""}],"src":"2790:1352:23"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":23,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000b4638038062000b4683398101604081905262000034916200011f565b600362000042838262000218565b50600462000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61085280620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069c565b60405180910390f35b6100df6100da366004610706565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610730565b61024c565b604051601281526020016100c3565b6100df610131366004610706565b610270565b6100f361014436600461076c565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610706565b6102a1565b6100df610188366004610706565b610321565b6100f361019b36600461078e565b61032f565b6060600380546101af906107c1565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c1565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d91906107fb565b61035a565b6060600480546101af906107c1565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f2565b600060208083528351808285015260005b818110156106c9578581018301518582016040015282016106ad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070157600080fd5b919050565b6000806040838503121561071957600080fd5b610722836106ea565b946020939093013593505050565b60008060006060848603121561074557600080fd5b61074e846106ea565b925061075c602085016106ea565b9150604084013590509250925092565b60006020828403121561077e57600080fd5b610787826106ea565b9392505050565b600080604083850312156107a157600080fd5b6107aa836106ea565b91506107b8602084016106ea565b90509250929050565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea2646970667358221220bac59eeb3543e5002997b48be41a82cd83282235ecb34b5a62801d41d5004d3064736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB46 CODESIZE SUB DUP1 PUSH3 0xB46 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11F JUMP JUMPDEST PUSH1 0x3 PUSH3 0x42 DUP4 DUP3 PUSH3 0x218 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x51 DUP3 DUP3 PUSH3 0x218 JUMP JUMPDEST POP POP POP PUSH3 0x2E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9F JUMPI PUSH3 0x9F PUSH3 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCA JUMPI PUSH3 0xCA PUSH3 0x5A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10B JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x159 DUP7 DUP4 DUP8 ADD PUSH3 0x70 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x17F DUP6 DUP3 DUP7 ADD PUSH3 0x70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x19E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x213 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1EE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x20F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x234 JUMPI PUSH3 0x234 PUSH3 0x5A JUMP JUMPDEST PUSH3 0x24C DUP2 PUSH3 0x245 DUP5 SLOAD PUSH3 0x189 JUMP JUMPDEST DUP5 PUSH3 0x1C5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x284 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x20F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B5 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x294 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x852 DUP1 PUSH3 0x2F4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x78E JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x722 DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74E DUP5 PUSH2 0x6EA JUMP JUMPDEST SWAP3 POP PUSH2 0x75C PUSH1 0x20 DUP6 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x787 DUP3 PUSH2 0x6EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AA DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH2 0x7B8 PUSH1 0x20 DUP5 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xC5 SWAP15 0xEB CALLDATALOAD NUMBER 0xE5 STOP 0x29 SWAP8 0xB4 DUP12 0xE4 BYTE DUP3 0xCD DUP4 0x28 0x22 CALLDATALOAD 0xEC 0xB3 0x4B GAS PUSH3 0x801D41 0xD5 STOP 0x4D ADDRESS PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"1401:11610:0:-:0;;;1976:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2042:5;:13;2050:5;2042;:13;:::i;:::-;-1:-1:-1;2065:7:0;:17;2075:7;2065;:17;:::i;:::-;;1976:113;;1401:11610;;14:127:23;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:23;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:23;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:23:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:23;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:23;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:23;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:23;;;3992:26;3943:89;-1:-1:-1;;2747:1:23;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:23;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:23;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:23;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:23:o;:::-;1401:11610:0;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_585":{"entryPoint":null,"id":585,"parameterSlots":3,"returnSlots":0},"@_approve_520":{"entryPoint":858,"id":520,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_574":{"entryPoint":null,"id":574,"parameterSlots":3,"returnSlots":0},"@_msgSender_1348":{"entryPoint":null,"id":1348,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_563":{"entryPoint":1150,"id":563,"parameterSlots":3,"returnSlots":0},"@_transfer_346":{"entryPoint":1272,"id":346,"parameterSlots":3,"returnSlots":0},"@allowance_141":{"entryPoint":815,"id":141,"parameterSlots":2,"returnSlots":1},"@approve_166":{"entryPoint":562,"id":166,"parameterSlots":2,"returnSlots":1},"@balanceOf_98":{"entryPoint":null,"id":98,"parameterSlots":1,"returnSlots":1},"@decimals_74":{"entryPoint":null,"id":74,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_269":{"entryPoint":673,"id":269,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_228":{"entryPoint":624,"id":228,"parameterSlots":2,"returnSlots":1},"@name_54":{"entryPoint":416,"id":54,"parameterSlots":0,"returnSlots":1},"@symbol_64":{"entryPoint":658,"id":64,"parameterSlots":0,"returnSlots":1},"@totalSupply_84":{"entryPoint":null,"id":84,"parameterSlots":0,"returnSlots":1},"@transferFrom_199":{"entryPoint":588,"id":199,"parameterSlots":3,"returnSlots":1},"@transfer_123":{"entryPoint":801,"id":123,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":1770,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1900,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1934,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":1840,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1798,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1692,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2043,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1985,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5754:23","statements":[{"nodeType":"YulBlock","src":"6:3:23","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:427:23","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:23","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:23","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:23","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:23"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:23"},"nodeType":"YulFunctionCall","src":"166:21:23"},"nodeType":"YulExpressionStatement","src":"166:21:23"},{"nodeType":"YulVariableDeclaration","src":"196:27:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:23"},"nodeType":"YulFunctionCall","src":"210:13:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:23"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:23"},"nodeType":"YulFunctionCall","src":"239:18:23"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:23"},"nodeType":"YulFunctionCall","src":"232:34:23"},"nodeType":"YulExpressionStatement","src":"232:34:23"},{"nodeType":"YulVariableDeclaration","src":"275:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:23","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:23"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:23"},"nodeType":"YulFunctionCall","src":"369:17:23"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:23"},"nodeType":"YulFunctionCall","src":"365:26:23"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:23"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:23"},"nodeType":"YulFunctionCall","src":"403:14:23"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:23"},"nodeType":"YulFunctionCall","src":"399:23:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:23"},"nodeType":"YulFunctionCall","src":"393:30:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:23"},"nodeType":"YulFunctionCall","src":"358:66:23"},"nodeType":"YulExpressionStatement","src":"358:66:23"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:23"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:23"},"nodeType":"YulFunctionCall","src":"302:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:23","statements":[{"nodeType":"YulAssignment","src":"318:15:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:23"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:23"},"nodeType":"YulFunctionCall","src":"323:10:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:23","statements":[]},"src":"294:140:23"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:23"},{"name":"length","nodeType":"YulIdentifier","src":"469:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"454:3:23"},"nodeType":"YulFunctionCall","src":"454:22:23"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"450:3:23"},"nodeType":"YulFunctionCall","src":"450:31:23"},{"kind":"number","nodeType":"YulLiteral","src":"483:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"443:6:23"},"nodeType":"YulFunctionCall","src":"443:42:23"},"nodeType":"YulExpressionStatement","src":"443:42:23"},{"nodeType":"YulAssignment","src":"494:62:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"510:9:23"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"529:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"537:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:23"},"nodeType":"YulFunctionCall","src":"525:15:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"546:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"542:3:23"},"nodeType":"YulFunctionCall","src":"542:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"521:3:23"},"nodeType":"YulFunctionCall","src":"521:29:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"506:3:23"},"nodeType":"YulFunctionCall","src":"506:45:23"},{"kind":"number","nodeType":"YulLiteral","src":"553:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:23"},"nodeType":"YulFunctionCall","src":"502:54:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:23"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:23","type":""}],"src":"14:548:23"},{"body":{"nodeType":"YulBlock","src":"616:124:23","statements":[{"nodeType":"YulAssignment","src":"626:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"648:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"635:12:23"},"nodeType":"YulFunctionCall","src":"635:20:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"626:5:23"}]},{"body":{"nodeType":"YulBlock","src":"718:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"727:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"730:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"720:6:23"},"nodeType":"YulFunctionCall","src":"720:12:23"},"nodeType":"YulExpressionStatement","src":"720:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"677:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"688:5:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"703:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"708:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"699:3:23"},"nodeType":"YulFunctionCall","src":"699:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"712:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"695:3:23"},"nodeType":"YulFunctionCall","src":"695:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"684:3:23"},"nodeType":"YulFunctionCall","src":"684:31:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"674:2:23"},"nodeType":"YulFunctionCall","src":"674:42:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"667:6:23"},"nodeType":"YulFunctionCall","src":"667:50:23"},"nodeType":"YulIf","src":"664:70:23"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"606:5:23","type":""}],"src":"567:173:23"},{"body":{"nodeType":"YulBlock","src":"832:167:23","statements":[{"body":{"nodeType":"YulBlock","src":"878:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"887:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"890:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"880:6:23"},"nodeType":"YulFunctionCall","src":"880:12:23"},"nodeType":"YulExpressionStatement","src":"880:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"853:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"862:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"849:3:23"},"nodeType":"YulFunctionCall","src":"849:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"874:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"845:3:23"},"nodeType":"YulFunctionCall","src":"845:32:23"},"nodeType":"YulIf","src":"842:52:23"},{"nodeType":"YulAssignment","src":"903:39:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"932:9:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"913:18:23"},"nodeType":"YulFunctionCall","src":"913:29:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"903:6:23"}]},{"nodeType":"YulAssignment","src":"951:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"978:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"989:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"974:3:23"},"nodeType":"YulFunctionCall","src":"974:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"961:12:23"},"nodeType":"YulFunctionCall","src":"961:32:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"951:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"790:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"801:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"813:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"821:6:23","type":""}],"src":"745:254:23"},{"body":{"nodeType":"YulBlock","src":"1099:92:23","statements":[{"nodeType":"YulAssignment","src":"1109:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1121:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1132:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1117:3:23"},"nodeType":"YulFunctionCall","src":"1117:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1109:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:23"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1176:6:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1169:6:23"},"nodeType":"YulFunctionCall","src":"1169:14:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1162:6:23"},"nodeType":"YulFunctionCall","src":"1162:22:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1144:6:23"},"nodeType":"YulFunctionCall","src":"1144:41:23"},"nodeType":"YulExpressionStatement","src":"1144:41:23"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1068:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1079:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1090:4:23","type":""}],"src":"1004:187:23"},{"body":{"nodeType":"YulBlock","src":"1297:76:23","statements":[{"nodeType":"YulAssignment","src":"1307:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1319:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1330:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1315:3:23"},"nodeType":"YulFunctionCall","src":"1315:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1307:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1349:9:23"},{"name":"value0","nodeType":"YulIdentifier","src":"1360:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1342:6:23"},"nodeType":"YulFunctionCall","src":"1342:25:23"},"nodeType":"YulExpressionStatement","src":"1342:25:23"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1266:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1277:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1288:4:23","type":""}],"src":"1196:177:23"},{"body":{"nodeType":"YulBlock","src":"1482:224:23","statements":[{"body":{"nodeType":"YulBlock","src":"1528:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1537:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1540:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1530:6:23"},"nodeType":"YulFunctionCall","src":"1530:12:23"},"nodeType":"YulExpressionStatement","src":"1530:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1503:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"1512:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1499:3:23"},"nodeType":"YulFunctionCall","src":"1499:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"1524:2:23","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1495:3:23"},"nodeType":"YulFunctionCall","src":"1495:32:23"},"nodeType":"YulIf","src":"1492:52:23"},{"nodeType":"YulAssignment","src":"1553:39:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1582:9:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1563:18:23"},"nodeType":"YulFunctionCall","src":"1563:29:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1553:6:23"}]},{"nodeType":"YulAssignment","src":"1601:48:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1634:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1645:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1630:3:23"},"nodeType":"YulFunctionCall","src":"1630:18:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1611:18:23"},"nodeType":"YulFunctionCall","src":"1611:38:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1601:6:23"}]},{"nodeType":"YulAssignment","src":"1658:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1685:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1696:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1681:3:23"},"nodeType":"YulFunctionCall","src":"1681:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1668:12:23"},"nodeType":"YulFunctionCall","src":"1668:32:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1658:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1432:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1443:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1455:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1463:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1471:6:23","type":""}],"src":"1378:328:23"},{"body":{"nodeType":"YulBlock","src":"1808:87:23","statements":[{"nodeType":"YulAssignment","src":"1818:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1830:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1841:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1826:3:23"},"nodeType":"YulFunctionCall","src":"1826:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1818:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1860:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1875:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"1883:4:23","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1871:3:23"},"nodeType":"YulFunctionCall","src":"1871:17:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1853:6:23"},"nodeType":"YulFunctionCall","src":"1853:36:23"},"nodeType":"YulExpressionStatement","src":"1853:36:23"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1777:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1788:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1799:4:23","type":""}],"src":"1711:184:23"},{"body":{"nodeType":"YulBlock","src":"1970:116:23","statements":[{"body":{"nodeType":"YulBlock","src":"2016:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2025:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2028:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2018:6:23"},"nodeType":"YulFunctionCall","src":"2018:12:23"},"nodeType":"YulExpressionStatement","src":"2018:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1991:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"2000:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1987:3:23"},"nodeType":"YulFunctionCall","src":"1987:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"2012:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1983:3:23"},"nodeType":"YulFunctionCall","src":"1983:32:23"},"nodeType":"YulIf","src":"1980:52:23"},{"nodeType":"YulAssignment","src":"2041:39:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2070:9:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2051:18:23"},"nodeType":"YulFunctionCall","src":"2051:29:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2041:6:23"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1936:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1947:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1959:6:23","type":""}],"src":"1900:186:23"},{"body":{"nodeType":"YulBlock","src":"2178:173:23","statements":[{"body":{"nodeType":"YulBlock","src":"2224:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2233:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2236:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2226:6:23"},"nodeType":"YulFunctionCall","src":"2226:12:23"},"nodeType":"YulExpressionStatement","src":"2226:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2199:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"2208:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2195:3:23"},"nodeType":"YulFunctionCall","src":"2195:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"2220:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2191:3:23"},"nodeType":"YulFunctionCall","src":"2191:32:23"},"nodeType":"YulIf","src":"2188:52:23"},{"nodeType":"YulAssignment","src":"2249:39:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2278:9:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2259:18:23"},"nodeType":"YulFunctionCall","src":"2259:29:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2249:6:23"}]},{"nodeType":"YulAssignment","src":"2297:48:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2330:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"2341:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2326:3:23"},"nodeType":"YulFunctionCall","src":"2326:18:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2307:18:23"},"nodeType":"YulFunctionCall","src":"2307:38:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2297:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2136:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2147:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2159:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2167:6:23","type":""}],"src":"2091:260:23"},{"body":{"nodeType":"YulBlock","src":"2411:325:23","statements":[{"nodeType":"YulAssignment","src":"2421:22:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2435:1:23","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2438:4:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2431:3:23"},"nodeType":"YulFunctionCall","src":"2431:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2421:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"2452:38:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2482:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"2488:1:23","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2478:3:23"},"nodeType":"YulFunctionCall","src":"2478:12:23"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2456:18:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"2529:31:23","statements":[{"nodeType":"YulAssignment","src":"2531:27:23","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2545:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"2553:4:23","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2541:3:23"},"nodeType":"YulFunctionCall","src":"2541:17:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2531:6:23"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2509:18:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2502:6:23"},"nodeType":"YulFunctionCall","src":"2502:26:23"},"nodeType":"YulIf","src":"2499:61:23"},{"body":{"nodeType":"YulBlock","src":"2619:111:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2640:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2647:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2652:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2643:3:23"},"nodeType":"YulFunctionCall","src":"2643:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2633:6:23"},"nodeType":"YulFunctionCall","src":"2633:31:23"},"nodeType":"YulExpressionStatement","src":"2633:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2684:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2687:4:23","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2677:6:23"},"nodeType":"YulFunctionCall","src":"2677:15:23"},"nodeType":"YulExpressionStatement","src":"2677:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2712:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2715:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2705:6:23"},"nodeType":"YulFunctionCall","src":"2705:15:23"},"nodeType":"YulExpressionStatement","src":"2705:15:23"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2575:18:23"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2598:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"2606:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2595:2:23"},"nodeType":"YulFunctionCall","src":"2595:14:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2572:2:23"},"nodeType":"YulFunctionCall","src":"2572:38:23"},"nodeType":"YulIf","src":"2569:161:23"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2391:4:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2400:6:23","type":""}],"src":"2356:380:23"},{"body":{"nodeType":"YulBlock","src":"2789:174:23","statements":[{"nodeType":"YulAssignment","src":"2799:16:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2810:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"2813:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2806:3:23"},"nodeType":"YulFunctionCall","src":"2806:9:23"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"2799:3:23"}]},{"body":{"nodeType":"YulBlock","src":"2846:111:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2867:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2874:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2879:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2870:3:23"},"nodeType":"YulFunctionCall","src":"2870:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2860:6:23"},"nodeType":"YulFunctionCall","src":"2860:31:23"},"nodeType":"YulExpressionStatement","src":"2860:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2911:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2914:4:23","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2904:6:23"},"nodeType":"YulFunctionCall","src":"2904:15:23"},"nodeType":"YulExpressionStatement","src":"2904:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2939:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2942:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2932:6:23"},"nodeType":"YulFunctionCall","src":"2932:15:23"},"nodeType":"YulExpressionStatement","src":"2932:15:23"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2830:1:23"},{"name":"sum","nodeType":"YulIdentifier","src":"2833:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2827:2:23"},"nodeType":"YulFunctionCall","src":"2827:10:23"},"nodeType":"YulIf","src":"2824:133:23"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2772:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"2775:1:23","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2781:3:23","type":""}],"src":"2741:222:23"},{"body":{"nodeType":"YulBlock","src":"3142:227:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3159:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3170:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3152:6:23"},"nodeType":"YulFunctionCall","src":"3152:21:23"},"nodeType":"YulExpressionStatement","src":"3152:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3193:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3204:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3189:3:23"},"nodeType":"YulFunctionCall","src":"3189:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"3209:2:23","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3182:6:23"},"nodeType":"YulFunctionCall","src":"3182:30:23"},"nodeType":"YulExpressionStatement","src":"3182:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3232:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3243:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3228:3:23"},"nodeType":"YulFunctionCall","src":"3228:18:23"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"3248:34:23","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3221:6:23"},"nodeType":"YulFunctionCall","src":"3221:62:23"},"nodeType":"YulExpressionStatement","src":"3221:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3303:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3314:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3299:3:23"},"nodeType":"YulFunctionCall","src":"3299:18:23"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"3319:7:23","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3292:6:23"},"nodeType":"YulFunctionCall","src":"3292:35:23"},"nodeType":"YulExpressionStatement","src":"3292:35:23"},{"nodeType":"YulAssignment","src":"3336:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3348:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3359:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3344:3:23"},"nodeType":"YulFunctionCall","src":"3344:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3336:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3119:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3133:4:23","type":""}],"src":"2968:401:23"},{"body":{"nodeType":"YulBlock","src":"3548:226:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3565:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3576:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3558:6:23"},"nodeType":"YulFunctionCall","src":"3558:21:23"},"nodeType":"YulExpressionStatement","src":"3558:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3599:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3610:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3595:3:23"},"nodeType":"YulFunctionCall","src":"3595:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"3615:2:23","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3588:6:23"},"nodeType":"YulFunctionCall","src":"3588:30:23"},"nodeType":"YulExpressionStatement","src":"3588:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3638:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3649:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3634:3:23"},"nodeType":"YulFunctionCall","src":"3634:18:23"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"3654:34:23","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3627:6:23"},"nodeType":"YulFunctionCall","src":"3627:62:23"},"nodeType":"YulExpressionStatement","src":"3627:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3709:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3720:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3705:3:23"},"nodeType":"YulFunctionCall","src":"3705:18:23"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"3725:6:23","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3698:6:23"},"nodeType":"YulFunctionCall","src":"3698:34:23"},"nodeType":"YulExpressionStatement","src":"3698:34:23"},{"nodeType":"YulAssignment","src":"3741:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3753:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3764:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3749:3:23"},"nodeType":"YulFunctionCall","src":"3749:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3741:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3525:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3539:4:23","type":""}],"src":"3374:400:23"},{"body":{"nodeType":"YulBlock","src":"3953:224:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3970:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3981:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3963:6:23"},"nodeType":"YulFunctionCall","src":"3963:21:23"},"nodeType":"YulExpressionStatement","src":"3963:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4004:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4015:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4000:3:23"},"nodeType":"YulFunctionCall","src":"4000:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"4020:2:23","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3993:6:23"},"nodeType":"YulFunctionCall","src":"3993:30:23"},"nodeType":"YulExpressionStatement","src":"3993:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4043:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4054:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4039:3:23"},"nodeType":"YulFunctionCall","src":"4039:18:23"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"4059:34:23","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4032:6:23"},"nodeType":"YulFunctionCall","src":"4032:62:23"},"nodeType":"YulExpressionStatement","src":"4032:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4114:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4125:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4110:3:23"},"nodeType":"YulFunctionCall","src":"4110:18:23"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"4130:4:23","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4103:6:23"},"nodeType":"YulFunctionCall","src":"4103:32:23"},"nodeType":"YulExpressionStatement","src":"4103:32:23"},{"nodeType":"YulAssignment","src":"4144:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4156:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4167:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4152:3:23"},"nodeType":"YulFunctionCall","src":"4152:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4144:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3930:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3944:4:23","type":""}],"src":"3779:398:23"},{"body":{"nodeType":"YulBlock","src":"4356:179:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4373:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4366:6:23"},"nodeType":"YulFunctionCall","src":"4366:21:23"},"nodeType":"YulExpressionStatement","src":"4366:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4407:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4418:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4403:3:23"},"nodeType":"YulFunctionCall","src":"4403:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"4423:2:23","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4396:6:23"},"nodeType":"YulFunctionCall","src":"4396:30:23"},"nodeType":"YulExpressionStatement","src":"4396:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4446:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4457:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4442:3:23"},"nodeType":"YulFunctionCall","src":"4442:18:23"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"4462:31:23","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4435:6:23"},"nodeType":"YulFunctionCall","src":"4435:59:23"},"nodeType":"YulExpressionStatement","src":"4435:59:23"},{"nodeType":"YulAssignment","src":"4503:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4515:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4526:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4511:3:23"},"nodeType":"YulFunctionCall","src":"4511:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4503:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4333:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4347:4:23","type":""}],"src":"4182:353:23"},{"body":{"nodeType":"YulBlock","src":"4714:227:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4731:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4742:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4724:6:23"},"nodeType":"YulFunctionCall","src":"4724:21:23"},"nodeType":"YulExpressionStatement","src":"4724:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4765:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4776:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4761:3:23"},"nodeType":"YulFunctionCall","src":"4761:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"4781:2:23","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4754:6:23"},"nodeType":"YulFunctionCall","src":"4754:30:23"},"nodeType":"YulExpressionStatement","src":"4754:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4804:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4815:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4800:3:23"},"nodeType":"YulFunctionCall","src":"4800:18:23"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"4820:34:23","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4793:6:23"},"nodeType":"YulFunctionCall","src":"4793:62:23"},"nodeType":"YulExpressionStatement","src":"4793:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4875:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4886:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4871:3:23"},"nodeType":"YulFunctionCall","src":"4871:18:23"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"4891:7:23","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4864:6:23"},"nodeType":"YulFunctionCall","src":"4864:35:23"},"nodeType":"YulExpressionStatement","src":"4864:35:23"},{"nodeType":"YulAssignment","src":"4908:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4920:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4931:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4916:3:23"},"nodeType":"YulFunctionCall","src":"4916:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4908:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4691:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4705:4:23","type":""}],"src":"4540:401:23"},{"body":{"nodeType":"YulBlock","src":"5120:225:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5148:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5130:6:23"},"nodeType":"YulFunctionCall","src":"5130:21:23"},"nodeType":"YulExpressionStatement","src":"5130:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5171:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5182:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5167:3:23"},"nodeType":"YulFunctionCall","src":"5167:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"5187:2:23","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5160:6:23"},"nodeType":"YulFunctionCall","src":"5160:30:23"},"nodeType":"YulExpressionStatement","src":"5160:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5210:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5221:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5206:3:23"},"nodeType":"YulFunctionCall","src":"5206:18:23"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"5226:34:23","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5199:6:23"},"nodeType":"YulFunctionCall","src":"5199:62:23"},"nodeType":"YulExpressionStatement","src":"5199:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5281:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5292:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5277:3:23"},"nodeType":"YulFunctionCall","src":"5277:18:23"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"5297:5:23","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5270:6:23"},"nodeType":"YulFunctionCall","src":"5270:33:23"},"nodeType":"YulExpressionStatement","src":"5270:33:23"},{"nodeType":"YulAssignment","src":"5312:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5324:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5335:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5320:3:23"},"nodeType":"YulFunctionCall","src":"5320:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5312:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5097:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5111:4:23","type":""}],"src":"4946:399:23"},{"body":{"nodeType":"YulBlock","src":"5524:228:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5541:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5552:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5534:6:23"},"nodeType":"YulFunctionCall","src":"5534:21:23"},"nodeType":"YulExpressionStatement","src":"5534:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5575:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5586:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5571:3:23"},"nodeType":"YulFunctionCall","src":"5571:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"5591:2:23","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5564:6:23"},"nodeType":"YulFunctionCall","src":"5564:30:23"},"nodeType":"YulExpressionStatement","src":"5564:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5614:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5625:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5610:3:23"},"nodeType":"YulFunctionCall","src":"5610:18:23"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"5630:34:23","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5603:6:23"},"nodeType":"YulFunctionCall","src":"5603:62:23"},"nodeType":"YulExpressionStatement","src":"5603:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5685:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5696:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5681:3:23"},"nodeType":"YulFunctionCall","src":"5681:18:23"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"5701:8:23","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5674:6:23"},"nodeType":"YulFunctionCall","src":"5674:36:23"},"nodeType":"YulExpressionStatement","src":"5674:36:23"},{"nodeType":"YulAssignment","src":"5719:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5731:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5742:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5727:3:23"},"nodeType":"YulFunctionCall","src":"5727:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5719:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5501:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5515:4:23","type":""}],"src":"5350:402:23"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}","id":23,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069c565b60405180910390f35b6100df6100da366004610706565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610730565b61024c565b604051601281526020016100c3565b6100df610131366004610706565b610270565b6100f361014436600461076c565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610706565b6102a1565b6100df610188366004610706565b610321565b6100f361019b36600461078e565b61032f565b6060600380546101af906107c1565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c1565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d91906107fb565b61035a565b6060600480546101af906107c1565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f2565b600060208083528351808285015260005b818110156106c9578581018301518582016040015282016106ad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070157600080fd5b919050565b6000806040838503121561071957600080fd5b610722836106ea565b946020939093013593505050565b60008060006060848603121561074557600080fd5b61074e846106ea565b925061075c602085016106ea565b9150604084013590509250925092565b60006020828403121561077e57600080fd5b610787826106ea565b9392505050565b600080604083850312156107a157600080fd5b6107aa836106ea565b91506107b8602084016106ea565b90509250929050565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea2646970667358221220bac59eeb3543e5002997b48be41a82cd83282235ecb34b5a62801d41d5004d3064736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x78E JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x722 DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74E DUP5 PUSH2 0x6EA JUMP JUMPDEST SWAP3 POP PUSH2 0x75C PUSH1 0x20 DUP6 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x787 DUP3 PUSH2 0x6EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AA DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH2 0x7B8 PUSH1 0x20 DUP5 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xC5 SWAP15 0xEB CALLDATALOAD NUMBER 0xE5 STOP 0x29 SWAP8 0xB4 DUP12 0xE4 BYTE DUP3 0xCD DUP4 0x28 0x22 CALLDATALOAD 0xEC 0xB3 0x4B GAS PUSH3 0x801D41 0xD5 STOP 0x4D ADDRESS PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"1401:11610:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:23;;1162:22;1144:41;;1132:2;1117:18;4431:197:0;1004:187:23;3242:106:0;3329:12;;3242:106;;;1342:25:23;;;1330:2;1315:18;3242:106:0;1196:177:23;5190:286:0;;;;;;:::i;:::-;;:::i;3091:91::-;;;3173:2;1853:36:23;;1841:2;1826:18;3091:91:0;1711:184:23;5871:234:0;;;;;;:::i;:::-;;:::i;3406:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:0;3480:7;3506:18;;;;;;;;;;;;3406:125;2365:102;;;:::i;6592:427::-;;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;:::i;:::-;;:::i;3974:149::-;;;;;;:::i;:::-;;:::i;2154:98::-;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:6;4568:32:0;719:10:6;4584:7:0;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;;:::o;5190:286::-;5317:4;719:10:6;5373:38:0;5389:4;719:10:6;5404:6:0;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:0;;5190:286;-1:-1:-1;;;;5190:286:0:o;5871:234::-;5959:4;719:10:6;6013:64:0;719:10:6;6029:7:0;6066:10;6038:25;719:10:6;6029:7:0;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;2365:102::-;2421:13;2453:7;2446:14;;;;;:::i;6592:427::-;6685:4;719:10:6;6685:4:0;6766:25;719:10:6;6783:7:0;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:0;;3170:2:23;6801:85:0;;;3152:21:23;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:23;;;3292:35;3344:19;;6801:85:0;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;3727:189::-;3806:4;719:10:6;3860:28:0;719:10:6;3877:2:0;3881:6;3860:9;:28::i;3974:149::-;-1:-1:-1;;;;;4089:18:0;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;10504:370::-;-1:-1:-1;;;;;10635:19:0;;10627:68;;;;-1:-1:-1;;;10627:68:0;;3576:2:23;10627:68:0;;;3558:21:23;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:23;;;3698:34;3749:19;;10627:68:0;3374:400:23;10627:68:0;-1:-1:-1;;;;;10713:21:0;;10705:68;;;;-1:-1:-1;;;10705:68:0;;3981:2:23;10705:68:0;;;3963:21:23;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:23;;;4103:32;4152:19;;10705:68:0;3779:398:23;10705:68:0;-1:-1:-1;;;;;10784:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1342:25:23;;;10835:32:0;;1315:18:23;10835:32:0;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:0;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:0;;4384:2:23;11404:68:0;;;4366:21:23;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;11404:68:0;4182:353:23;11404:68:0;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:0;;7591:68;;;;-1:-1:-1;;;7591:68:0;;4742:2:23;7591:68:0;;;4724:21:23;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:23;;;4864:35;4916:19;;7591:68:0;4540:401:23;7591:68:0;-1:-1:-1;;;;;7677:16:0;;7669:64;;;;-1:-1:-1;;;7669:64:0;;5148:2:23;7669:64:0;;;5130:21:23;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:23;;;5270:33;5320:19;;7669:64:0;4946:399:23;7669:64:0;-1:-1:-1;;;;;7815:15:0;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:0;;5552:2:23;7840:72:0;;;5534:21:23;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:23;;;5674:36;5727:19;;7840:72:0;5350:402:23;7840:72:0;-1:-1:-1;;;;;7946:15:0;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;1342:25:23;;;8161:13:0;;8210:26;;1315:18:23;8210:26:0;;;;;;;8247:37;12180:121;14:548:23;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:23;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:23:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:23:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15"},"gasEstimates":{"creation":{"codeDepositCost":"426000","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"24628","balanceOf(address)":"2562","decimals()":"266","decreaseAllowance(address,uint256)":"27016","increaseAllowance(address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"2326","transfer(address,uint256)":"51138","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"infinite","_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"infinite","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_spendAllowance(address,address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":15,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":21,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":23,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":25,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":27,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.","kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"details":"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"nonces(address)":{"details":"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"devdoc":{"details":"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f6a9089acb6ec0ecd83d6708632ced23d4cb1eea17d1724265ac8d880ad3620a64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 0xA9 ADDMOD SWAP11 0xCB PUSH15 0xC0ECD83D6708632CED23D4CB1EEA17 0xD1 PUSH19 0x4265AC8D880AD3620A64736F6C634300081100 CALLER ","sourceMap":"707:3748:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;707:3748:4;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f6a9089acb6ec0ecd83d6708632ced23d4cb1eea17d1724265ac8d880ad3620a64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 0xA9 ADDMOD SWAP11 0xCB PUSH15 0xC0ECD83D6708632CED23D4CB1EEA17 0xD1 PUSH19 0x4265AC8D880AD3620A64736F6C634300081100 CALLER ","sourceMap":"707:3748:4:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_callOptionalReturn(contract IERC20,bytes memory)":"infinite","safeApprove(contract IERC20,address,uint256)":"infinite","safeDecreaseAllowance(contract IERC20,address,uint256)":"infinite","safeIncreaseAllowance(contract IERC20,address,uint256)":"infinite","safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)":"infinite","safeTransfer(contract IERC20,address,uint256)":"infinite","safeTransferFrom(contract IERC20,address,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122013401600000926622401d0f4900fa944dbbb903a44de347ae1f43a1506c3bdeb64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT BLOCKHASH AND STOP STOP MULMOD 0x26 PUSH3 0x2401D0 DELEGATECALL SWAP1 0xF 0xA9 DIFFICULTY 0xDB 0xBB SWAP1 GASPRICE DIFFICULTY 0xDE CALLVALUE PUSH27 0xE1F43A1506C3BDEB64736F6C634300081100330000000000000000 ","sourceMap":"194:8964:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8964:5;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122013401600000926622401d0f4900fa944dbbb903a44de347ae1f43a1506c3bdeb64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT BLOCKHASH AND STOP STOP MULMOD 0x26 PUSH3 0x2401D0 DELEGATECALL SWAP1 0xF 0xA9 DIFFICULTY 0xDB 0xBB SWAP1 GASPRICE DIFFICULTY 0xDE CALLVALUE PUSH27 0xE1F43A1506C3BDEB64736F6C634300081100330000000000000000 ","sourceMap":"194:8964:5:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/common/LibConstants.sol":{"LibConstants":{"abi":[{"inputs":[],"name":"RELAY","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ROLE_MGR","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"61012561003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610603d5760003560e01c8063423154c91460425780638ac4524f146079575b600080fd5b60656040518060400160405280600581526020016452454c415960d81b81525081565b6040516070919060a3565b60405180910390f35b60656040518060400160405280600c81526020016b2927a622afa6a0a720a3a2a960a11b81525081565b600060208083528351808285015260005b8181101560ce5785810183015185820160400152820160b4565b506000604082860101526040601f19601f830116850101925050509291505056fea26469706673582212204a4dfb039f9bc7802f4f0244c127d34328fd011ca23b7c07338205dc905c213e64736f6c63430008110033","opcodes":"PUSH2 0x125 PUSH2 0x3A PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x2D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x423154C9 EQ PUSH1 0x42 JUMPI DUP1 PUSH4 0x8AC4524F EQ PUSH1 0x79 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x65 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x52454C4159 PUSH1 0xD8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x70 SWAP2 SWAP1 PUSH1 0xA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x65 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH12 0x2927A622AFA6A0A720A3A2A9 PUSH1 0xA1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH1 0xCE JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH1 0xB4 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A 0x4D 0xFB SUB SWAP16 SWAP12 0xC7 DUP1 0x2F 0x4F MUL DIFFICULTY 0xC1 0x27 0xD3 NUMBER 0x28 REVERT ADD SHR LOG2 EXTCODESIZE PUSH29 0x7338205DC905C213E64736F6C63430008110033000000000000000000 ","sourceMap":"105:1054:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;105:1054:7;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@RELAY_1388":{"entryPoint":null,"id":1388,"parameterSlots":0,"returnSlots":0},"@ROLE_MGR_1385":{"entryPoint":null,"id":1385,"parameterSlots":0,"returnSlots":0},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_library_reversed":{"entryPoint":163,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:572:23","statements":[{"nodeType":"YulBlock","src":"6:3:23","statements":[]},{"body":{"nodeType":"YulBlock","src":"143:427:23","statements":[{"nodeType":"YulVariableDeclaration","src":"153:12:23","value":{"kind":"number","nodeType":"YulLiteral","src":"163:2:23","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"157:2:23","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"181:9:23"},{"name":"_1","nodeType":"YulIdentifier","src":"192:2:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"174:6:23"},"nodeType":"YulFunctionCall","src":"174:21:23"},"nodeType":"YulExpressionStatement","src":"174:21:23"},{"nodeType":"YulVariableDeclaration","src":"204:27:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"224:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"218:5:23"},"nodeType":"YulFunctionCall","src":"218:13:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"208:6:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"251:9:23"},{"name":"_1","nodeType":"YulIdentifier","src":"262:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"247:3:23"},"nodeType":"YulFunctionCall","src":"247:18:23"},{"name":"length","nodeType":"YulIdentifier","src":"267:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"240:6:23"},"nodeType":"YulFunctionCall","src":"240:34:23"},"nodeType":"YulExpressionStatement","src":"240:34:23"},{"nodeType":"YulVariableDeclaration","src":"283:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"292:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"287:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"352:90:23","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"381:9:23"},{"name":"i","nodeType":"YulIdentifier","src":"392:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"377:3:23"},"nodeType":"YulFunctionCall","src":"377:17:23"},{"kind":"number","nodeType":"YulLiteral","src":"396:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"373:3:23"},"nodeType":"YulFunctionCall","src":"373:26:23"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"415:6:23"},{"name":"i","nodeType":"YulIdentifier","src":"423:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:23"},"nodeType":"YulFunctionCall","src":"411:14:23"},{"name":"_1","nodeType":"YulIdentifier","src":"427:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:23"},"nodeType":"YulFunctionCall","src":"407:23:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"401:5:23"},"nodeType":"YulFunctionCall","src":"401:30:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"366:6:23"},"nodeType":"YulFunctionCall","src":"366:66:23"},"nodeType":"YulExpressionStatement","src":"366:66:23"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"313:1:23"},{"name":"length","nodeType":"YulIdentifier","src":"316:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"310:2:23"},"nodeType":"YulFunctionCall","src":"310:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"324:19:23","statements":[{"nodeType":"YulAssignment","src":"326:15:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"335:1:23"},{"name":"_1","nodeType":"YulIdentifier","src":"338:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"331:3:23"},"nodeType":"YulFunctionCall","src":"331:10:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"326:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"306:3:23","statements":[]},"src":"302:140:23"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"466:9:23"},{"name":"length","nodeType":"YulIdentifier","src":"477:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"462:3:23"},"nodeType":"YulFunctionCall","src":"462:22:23"},{"kind":"number","nodeType":"YulLiteral","src":"486:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"458:3:23"},"nodeType":"YulFunctionCall","src":"458:31:23"},{"kind":"number","nodeType":"YulLiteral","src":"491:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"451:6:23"},"nodeType":"YulFunctionCall","src":"451:42:23"},"nodeType":"YulExpressionStatement","src":"451:42:23"},{"nodeType":"YulAssignment","src":"502:62:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"518:9:23"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"537:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"545:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"533:3:23"},"nodeType":"YulFunctionCall","src":"533:15:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"554:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"550:3:23"},"nodeType":"YulFunctionCall","src":"550:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"529:3:23"},"nodeType":"YulFunctionCall","src":"529:29:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"514:3:23"},"nodeType":"YulFunctionCall","src":"514:45:23"},{"kind":"number","nodeType":"YulLiteral","src":"561:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"510:3:23"},"nodeType":"YulFunctionCall","src":"510:54:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"502:4:23"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_library_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"112:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"123:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"134:4:23","type":""}],"src":"14:556:23"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}","id":23,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"7300000000000000000000000000000000000000003014608060405260043610603d5760003560e01c8063423154c91460425780638ac4524f146079575b600080fd5b60656040518060400160405280600581526020016452454c415960d81b81525081565b6040516070919060a3565b60405180910390f35b60656040518060400160405280600c81526020016b2927a622afa6a0a720a3a2a960a11b81525081565b600060208083528351808285015260005b8181101560ce5785810183015185820160400152820160b4565b506000604082860101526040601f19601f830116850101925050509291505056fea26469706673582212204a4dfb039f9bc7802f4f0244c127d34328fd011ca23b7c07338205dc905c213e64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x423154C9 EQ PUSH1 0x42 JUMPI DUP1 PUSH4 0x8AC4524F EQ PUSH1 0x79 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x65 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x52454C4159 PUSH1 0xD8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x70 SWAP2 SWAP1 PUSH1 0xA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x65 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH12 0x2927A622AFA6A0A720A3A2A9 PUSH1 0xA1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH1 0xCE JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH1 0xB4 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A 0x4D 0xFB SUB SWAP16 SWAP12 0xC7 DUP1 0x2F 0x4F MUL DIFFICULTY 0xC1 0x27 0xD3 NUMBER 0x28 REVERT ADD SHR LOG2 EXTCODESIZE PUSH29 0x7338205DC905C213E64736F6C63430008110033000000000000000000 ","sourceMap":"105:1054:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1117:38;;;;;;;;;;;;;;;-1:-1:-1;;;1117:38:7;;;;;;;;;;;;:::i;:::-;;;;;;;;1019:48;;;;;;;;;;;;;;;-1:-1:-1;;;1019:48:7;;;;;14:556:23;134:4;163:2;192;181:9;174:21;224:6;218:13;267:6;262:2;251:9;247:18;240:34;292:1;302:140;316:6;313:1;310:13;302:140;;;411:14;;;407:23;;401:30;377:17;;;396:2;373:26;366:66;331:10;;302:140;;;306:3;491:1;486:2;477:6;466:9;462:22;458:31;451:42;561:2;554;550:7;545:2;537:6;533:15;529:29;518:9;514:45;510:54;502:62;;;;14:556;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"58600","executionCost":"142","totalCost":"58742"},"external":{"RELAY()":"infinite","ROLE_MGR()":"infinite"}},"methodIdentifiers":{"RELAY()":"423154c9","ROLE_MGR()":"8ac4524f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"RELAY\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROLE_MGR\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Constant values used elsewhere\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/common/LibConstants.sol\":\"LibConstants\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/common/LibConstants.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\n/**\\n * Constant values used elsewhere\\n */\\nlibrary LibConstants {\\n\\n    //gas that was used just to load this contract, etc.\\n    uint constant PRE_OP_GAS = 40_000;\\n    \\n    //final computation needed to compute and transfer gas fees\\n    uint constant POST_OP_GAS = 80_000;\\n    \\n\\n    uint16 constant HOUR = 3600;\\n    uint24 constant DAY = 86400;\\n\\n    //storage and calldata requirements significantly higher when using more than \\n    //6decs for USD price precision\\n    uint constant USD_PRECISION = 1e6;\\n\\n    //1_000_000 as a 6-decimal number\\n    uint constant MM_VOLUME = 1e12;\\n\\n    //when doing asset-related math, increase precision accordingly.\\n    uint constant PRICE_PRECISION = 1e30;\\n\\n    //========================================================================\\n    // Assignable roles for role-managed contracts\\n    //========================================================================\\n\\n    //allowed to add relays and other role managers\\n    string public constant ROLE_MGR = \\\"ROLE_MANAGER\\\";\\n\\n    //allowed to submit execution requests\\n    string public constant RELAY = \\\"RELAY\\\";\\n\\n}\",\"keccak256\":\"0xeb7a3fc112dc919db6dfb1f43c52bd068f14155d3fd7717871d9b1612e4a77a7\",\"license\":\"Unlicense\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"Constant values used elsewhere","version":1}}},"contracts/common/TokenTypes.sol":{"TokenTypes":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c2e7d69e8566da36f22280e858bc154e02d0f949e64aa65a1359cd778c9ebf8864736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0xE7 0xD6 SWAP15 DUP6 PUSH7 0xDA36F22280E858 0xBC ISZERO 0x4E MUL 0xD0 0xF9 0x49 0xE6 0x4A 0xA6 GAS SGT MSIZE 0xCD PUSH24 0x8C9EBF8864736F6C63430008110033000000000000000000 ","sourceMap":"189:170:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;189:170:8;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c2e7d69e8566da36f22280e858bc154e02d0f949e64aa65a1359cd778c9ebf8864736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0xE7 0xD6 SWAP15 DUP6 PUSH7 0xDA36F22280E858 0xBC ISZERO 0x4E MUL 0xD0 0xF9 0x49 0xE6 0x4A 0xA6 GAS SGT MSIZE 0xCD PUSH24 0x8C9EBF8864736F6C63430008110033000000000000000000 ","sourceMap":"189:170:8:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/common/TokenTypes.sol\":\"TokenTypes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"contracts/common/TokenTypes.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\n\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\nlibrary TokenTypes {\\n\\n    /**\\n     * Wrapper structure for token and an amount\\n     */\\n    struct TokenAmount {\\n        uint112 amount;\\n        IERC20 token;\\n    }\\n    \\n}\",\"keccak256\":\"0x7c1b8d6d3be1e957bb0515dafd8247a724a3b7efc29047220b13b5091585dbd5\",\"license\":\"Unlicense\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/token/IDXBL.sol":{"IDXBL":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"holder","type":"address"},{"internalType":"uint256","name":"amt","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bool","name":"referred","type":"bool"},{"internalType":"address","name":"trader","type":"address"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"dxblBalance","type":"uint256"},{"internalType":"uint16","name":"stdBpsRate","type":"uint16"},{"internalType":"uint16","name":"minBpsRate","type":"uint16"}],"internalType":"struct IDXBL.FeeRequest","name":"request","type":"tuple"}],"name":"computeDiscountedFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"discountPerTokenBps","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"acct","type":"address"},{"internalType":"uint256","name":"amt","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"minter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"discount","type":"uint32"}],"name":"setDiscountRate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"minter","type":"address"}],"name":"setNewMinter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(address,uint256)":"9dc29fac","computeDiscountedFee((bool,address,uint256,uint256,uint16,uint16))":"a015b639","decimals()":"313ce567","discountPerTokenBps()":"566826d1","mint(address,uint256)":"40c10f19","minter()":"07546172","name()":"06fdde03","setDiscountRate(uint32)":"466a944e","setNewMinter(address)":"48af6b15","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"referred\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dxblBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"stdBpsRate\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"minBpsRate\",\"type\":\"uint16\"}],\"internalType\":\"struct IDXBL.FeeRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"computeDiscountedFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"discountPerTokenBps\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"acct\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"discount\",\"type\":\"uint32\"}],\"name\":\"setDiscountRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"setNewMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/IDXBL.sol\":\"IDXBL\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"contracts/token/IDXBL.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\ninterface IDXBL is IERC20, IERC20Metadata {\\n    struct FeeRequest {\\n        bool referred;\\n        address trader;\\n        uint amt;\\n        uint dxblBalance;\\n        uint16 stdBpsRate;\\n        uint16 minBpsRate;\\n    }\\n\\n    function minter() external view returns (address);\\n    function discountPerTokenBps() external view returns(uint32);\\n\\n    function mint(address acct, uint amt) external;\\n    function burn(address holder, uint amt) external;\\n    function setDiscountRate(uint32 discount) external;\\n    function setNewMinter(address minter) external;\\n    function computeDiscountedFee(FeeRequest calldata request) external view returns(uint);\\n}\",\"keccak256\":\"0x5c7e94839ff1ff8d19ed800cbb7a9af9ea24d178ec1cca6c84c0b914636494ef\",\"license\":\"Unlicense\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/vault/CommunityVault.sol":{"CommunityVault":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newVolume","type":"uint256"}],"name":"AppliedVolumeGoal","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"stdRate","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"minRate","type":"uint32"}],"name":"BpsChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"holder","type":"address"},{"indexed":false,"internalType":"uint256","name":"dxblAmount","type":"uint256"},{"indexed":false,"internalType":"address","name":"rewardToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"rewardAmount","type":"uint256"}],"name":"DXBLRedeemed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"newRate","type":"uint32"}],"name":"DiscountChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"priceFeed","type":"address"}],"name":"FeeTokenAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"}],"name":"FeeTokenRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"minThreshold","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"maxThreshold","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"percentage","type":"uint256"}],"name":"MintRateChange","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"oldStdRate","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"newStdRate","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"oldMinRate","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"newMinRate","type":"uint32"},{"indexed":false,"internalType":"uint256","name":"allowedAfterTime","type":"uint256"}],"name":"ProposedBpsChange","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"oldRate","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"newRate","type":"uint32"},{"indexed":false,"internalType":"uint256","name":"allowedAfterTime","type":"uint256"}],"name":"ProposedDiscountChange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"priceFeed","type":"address"},{"indexed":false,"internalType":"bool","name":"removal","type":"bool"},{"indexed":false,"internalType":"uint256","name":"allowedAfterTime","type":"uint256"}],"name":"ProposedFeeToken","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"minThreshold","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"maxThreshold","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"percentage","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"allowedAfterTime","type":"uint256"}],"name":"ProposedMintRateChange","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldVolume","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVolume","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"allowedAfterTime","type":"uint256"}],"name":"ProposedVolumeGoal","type":"event"},{"inputs":[],"name":"adminMultiSig","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"assets","outputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"usdValue","type":"uint256"},{"internalType":"uint256","name":"usdPrice","type":"uint256"}],"internalType":"struct IComputationalView.AssetInfo[]","name":"tokens","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"aumUSD","outputs":[{"internalType":"uint256","name":"usd","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseMintThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"feeToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"computeVolumeUSD","outputs":[{"internalType":"uint256","name":"volumeUSD","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"feeToken","type":"address"},{"internalType":"uint256","name":"gasCost","type":"uint256"}],"name":"convertGasToFeeToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentMintRateUSD","outputs":[{"internalType":"uint256","name":"rate","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentNavUSD","outputs":[{"internalType":"uint256","name":"nav","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"dailyVolumeUSD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"dexible","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"discountBps","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"dxbl","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"rewardToken","type":"address"},{"internalType":"uint256","name":"dxblAmount","type":"uint256"}],"name":"estimateRedemption","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"feeToken","type":"address"}],"name":"feeTokenPriceUSD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"isFeeTokenAllowed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract V1MigrationTarget","name":"target","type":"address"}],"name":"migrateV1","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"rewardToken","type":"address"},{"internalType":"uint256","name":"dxblAmount","type":"uint256"},{"internalType":"uint256","name":"minOutAmount","type":"uint256"}],"name":"redeemDXBL","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"resume","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"address","name":"feeToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"rewardTrader","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"timelockSeconds","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"wrappedNativeToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50611e3d806100206000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80636162cb91116100c35780638456cb591161007c5780638456cb591461025e578063a74aa56614610266578063ab1094c01461026e578063c76380b714610281578063ce25cb4d14610292578063f7406fc3146102a557600080fd5b80636162cb911461020157806365a1f3c3146102095780636c1f56331461022657806371a973051461022e5780637262f55714610243578063821314701461025657600080fd5b806341b5774a1161011557806341b5774a146101b657806345c6a874146101be57806356168843146101c65780635c975abb146101ce5780635d204718146101e65780635de11890146101f957600080fd5b8063046f7da21461015257806317fcb39b1461015c57806318ac3b151461017a57806320529bb11461018d5780633931f45d146101a3575b600080fd5b61015a6102b8565b005b610164610312565b6040516101719190611967565b60405180910390f35b61015a610188366004611990565b61032e565b6101956105e6565b604051908152602001610171565b6101956101b13660046119c5565b6106e2565b610195610801565b61016461087c565b61019561089a565b6101d66108ad565b6040519015158152602001610171565b6101d66101f43660046119f1565b6108c0565b6101956108f3565b6101646109c0565b6102116109dc565b60405163ffffffff9091168152602001610171565b6102116109fc565b610236610a83565b6040516101719190611a0e565b6101956102513660046119c5565b610c77565b610195610d1a565b61015a610d2d565b610164610d81565b61015a61027c366004611a7b565b610d9d565b61015a61028f3660046119f1565b50565b6101956102a03660046119f1565b610f4d565b6101956102b33660046119c5565b610fcf565b60006102c261101c565b805490915061010090046001600160a01b031633146102fc5760405162461bcd60e51b81526004016102f390611abc565b60405180910390fd5b600061030661101c565b805460ff191690555050565b600061031c61101c565b600301546001600160a01b0316919050565b600061033861101c565b60018101546040516370a0823160e01b81529192506000916001600160a01b03909116906370a0823190610370903390600401611967565b602060405180830381865afa15801561038d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b19190611ae2565b90508381101561040f5760405162461bcd60e51b815260206004820152602360248201527f496e73756666696369656e74204458424c2062616c616e636520746f2072656460448201526265656d60e81b60648201526084016102f3565b600061041b8686610c77565b90506000866001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161044b9190611967565b602060405180830381865afa158015610468573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048c9190611ae2565b905080821115610513578481106104a557809150610513565b60405162461bcd60e51b815260206004820152603e60248201527f496e73756666696369656e742061737365742062616c616e636520746f20707260448201527f6f6475636520657870656374656420776974686472617720616d6f756e74000060648201526084016102f3565b6105276001600160a01b0388163384611040565b6001840154604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac9061055b9033908a90600401611afb565b600060405180830381600087803b15801561057557600080fd5b505af1158015610589573d6000803e3d6000fd5b505060408051338152602081018a90526001600160a01b038b16818301526060810186905290517f5fe85dc899e158274a44abab0e6df5434416f0ce11df30d42e02f229b8fc8a419350908190036080019150a150505050505050565b6000806105f161101c565b905060008160080180548060200260200160405190810160405280929190818152602001828054801561064d57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161062f575b5050505050905060005b81518110156106dc57600082828151811061067457610674611b14565b6020908102919091018101516001600160a01b03811660009081526026870190925260408220909250906106a78261109b565b905060006106b8878584600061120a565b5090506106c58189611b40565b975050505050806106d590611b53565b9050610657565b50505090565b6000806106ed61101c565b60038101549091506001600160a01b039081169085160361071157829150506107fb565b60038101546001600160a01b0316600090815260268201602052604081206107389061109b565b6001600160a01b038616600090815260268401602052604081209192509061075f9061109b565b905060008161077a68327cb2734119d3b7a9601e1b85611b6c565b6107849190611b99565b9050600068327cb2734119d3b7a9601e1b61079f8884611b6c565b6107a99190611b99565b6001600160a01b0389166000908152602587016020526040902054909150670de0b6b3a7640000906107df9060ff16600a611c91565b6107e99083611b6c565b6107f39190611b99565b955050505050505b92915050565b60008061080c61101c565b9050600064e8d4a5100082600501546108259190611b99565b905060008161ffff1683600901600101546108409190611b6c565b9050670de0b6b3a764000081846004015461085b9190611b6c565b6108659190611b99565b83600401546108749190611b40565b935050505090565b600061088661101c565b5461010090046001600160a01b0316919050565b60006108a461101c565b60040154905090565b60006108b761101c565b5460ff16919050565b6000806108cb61101c565b6001600160a01b03938416600090815260269091016020526040902054909216151592915050565b6000806108fe61101c565b905060008160010160009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610957573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097b9190611ae2565b905060006109876105e6565b9050811580610994575080155b156109a3576000935050505090565b816109b682670de0b6b3a7640000611b6c565b6108749190611b99565b60006109ca61101c565b600101546001600160a01b0316919050565b60006109e661101c565b60030154600160a01b900463ffffffff16919050565b6000610a0661101c565b60010160009054906101000a90046001600160a01b03166001600160a01b031663566826d16040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7e9190611ca0565b905090565b60606000610a8f61101c565b600881015490915067ffffffffffffffff811115610aaf57610aaf611cc6565b604051908082528060200260200182016040528015610b1457816020015b610b01604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b815260200190600190039081610acd5790505b50915060008082600801805480602002602001604051908101604052809291908181526020018280548015610b7257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610b54575b5050505050905060005b8151811015610c70576000828281518110610b9957610b99611b14565b6020908102919091018101516001600160a01b0381166000908152602688019092526040822090925090610bcc8261109b565b9050600080610bde898685600061120a565b915091506040518060800160405280866001600160a01b0316815260200182815260200183815260200168327cb2734119d3b7a9601e1b620f424086610c249190611b6c565b610c2e9190611b99565b8152508a8981518110610c4357610c43611b14565b602002602001018190525087610c5890611b53565b9750505050505080610c6990611b53565b9050610b7c565b5050505090565b600080610c8261101c565b90506000610c8e6108f3565b9050620f4240610caa68327cb2734119d3b7a9601e1b83611b6c565b610cb49190611b99565b90506000610cc186610f4d565b6001600160a01b038716600090815260258501602052604081205491925060ff9091169082610cf183600a611c91565b610cfb9086611b6c565b610d059190611b99565b9050670de0b6b3a76400006107e98289611b6c565b6000610d2461101c565b60050154905090565b6000610d3761101c565b805490915061010090046001600160a01b03163314610d685760405162461bcd60e51b81526004016102f390611abc565b6000610d7261101c565b805460ff191660011790555050565b6000610d8b61101c565b600201546001600160a01b0316919050565b6000610da761101c565b60028101549091506001600160a01b03163314610dd65760405162461bcd60e51b81526004016102f390611abc565b6000610de061101c565b60405163f7406fc360e01b8152909150600090309063f7406fc390610e0b9088908890600401611afb565b602060405180830381865afa158015610e28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4c9190611ae2565b90506000306001600160a01b03166341b5774a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb29190611ae2565b9050610ebd826112f5565b600081610ed284670de0b6b3a7640000611b6c565b610edc9190611b99565b60018501546040516340c10f1960e01b81529192506001600160a01b0316906340c10f1990610f11908b908590600401611afb565b600060405180830381600087803b158015610f2b57600080fd5b505af1158015610f3f573d6000803e3d6000fd5b505050505050505050505050565b600080610f5861101c565b6001600160a01b038085166000908152602683016020526040902080549293509116610fbe5760405162461bcd60e51b81526020600482015260156024820152742ab739bab83837b93a32b2103332b2903a37b5b2b760591b60448201526064016102f3565b610fc78161109b565b949350505050565b600080610fda61101c565b6001600160a01b038516600090815260268201602052604081209192506110008261109b565b905060006110108488848961120a565b50979650505050505050565b7fbfa76ec2967ed7f8d3d40cd552f1451ab03573b596bfce931a6a016f7733078c90565b6110968363a9059cbb60e01b848460405160240161105f929190611afb565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611416565b505050565b60008060008360000160009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156110f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111199190611cfb565b509350509250506000821361116a5760405162461bcd60e51b81526020600482015260176024820152764e6f207072696365206461746120617661696c61626c6560481b60448201526064016102f3565b600061025861117c6201518042611d4b565b6111869190611d4b565b90508082116111ca5760405162461bcd60e51b815260206004820152601060248201526f5374616c65207072696365206461746160801b60448201526064016102f3565b84546111e190600160a01b900460ff16600a611c91565b6111f768327cb2734119d3b7a9601e1b85611b6c565b6112019190611b99565b95945050505050565b600081808203611284576040516370a0823160e01b81526001600160a01b038616906370a0823190611240903090600401611967565b602060405180830381865afa15801561125d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112819190611ae2565b90505b620f42406112928583611b6c565b61129c9190611b6c565b6001600160a01b038616600090815260258801602052604090205490925068327cb2734119d3b7a9601e1b906112d69060ff16600a611c91565b6112e09190611b6c565b6112ea9083611b99565b915094509492505050565b60006112ff61101c565b6006810180544290915590915082811580159061132857506113246201518042611d4b565b8211155b156113405761133b600d84016000611944565b6113f1565b6000610e106113526201518042611d5e565b61135c9190611b99565b90506000601860018301069050600085600d01826018811061138057611380611b14565b01549050600086600d01836018811061139b5761139b611b14565b015586600d870184601881106113b3576113b3611b14565b0160008282546113c39190611b40565b909155505060058601546113d8908890611b40565b935080156113ed576113ea8185611d4b565b93505b5050505b600583018190556114108361140b64e8d4a5100084611b99565b6114e8565b50505050565b600061146b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166115529092919063ffffffff16565b80519091501561109657808060200190518101906114899190611d72565b6110965760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102f3565b60408051608081018252600984015461ffff808216835262010000909104811660208301819052600a86015493830193909352600b8501546060830152909190831610611539576110968383611561565b805161ffff808416911610611096576110968383611687565b6060610fc7848460008561179b565b60408051608081018252600984015461ffff808216835262010000909104166020820152600a84015491810191909152600b83015460608201525b6115a68183611876565b61163257600083600c01826060015160016115c19190611b40565b815481106115d1576115d1611b14565b9060005260206000209060030201905080600101546000036115f35750611632565b60408051608081018252825461ffff8082168352620100009091041660208201526001830154918101919091526002909101546060820152905061159c565b6040810151600a84015414611096578051600984018054602084015161ffff908116620100000263ffffffff199092169316929092179190911790556040810151600a8401556060810151600b840155505050565b60408051608081018252600984015461ffff808216835262010000909104166020820152600a84015491810191909152600b83015460608201525b6116cc8183611876565b6117545760608101511561175457600083600c01600183606001516116f19190611d4b565b8154811061170157611701611b14565b6000918252602091829020604080516080810182526003909302909101805461ffff8082168552620100009091041693830193909352600183015490820152600290910154606082015291506116c29050565b8051600984018054602084015161ffff908116620100000263ffffffff199092169316929092179190911790556040810151600a84015560600151600b9092019190915550565b6060824710156117fc5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016102f3565b600080866001600160a01b031685876040516118189190611db8565b60006040518083038185875af1925050503d8060008114611855576040519150601f19603f3d011682016040523d82523d6000602084013e61185a565b606091505b509150915061186b878383876118a6565b979650505050505050565b60008161ffff16836000015161ffff161115801561189f5750826020015161ffff168261ffff16105b9392505050565b6060831561191557825160000361190e576001600160a01b0385163b61190e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102f3565b5081610fc7565b610fc7838381511561192a5781518083602001fd5b8060405162461bcd60e51b81526004016102f39190611dd4565b5061028f9060188101905b80821115611963576000815560010161194f565b5090565b6001600160a01b0391909116815260200190565b6001600160a01b038116811461028f57600080fd5b6000806000606084860312156119a557600080fd5b83356119b08161197b565b95602085013595506040909401359392505050565b600080604083850312156119d857600080fd5b82356119e38161197b565b946020939093013593505050565b600060208284031215611a0357600080fd5b813561189f8161197b565b602080825282518282018190526000919060409081850190868401855b82811015611a6e57815180516001600160a01b03168552868101518786015285810151868601526060908101519085015260809093019290850190600101611a2b565b5091979650505050505050565b600080600060608486031215611a9057600080fd5b8335611a9b8161197b565b92506020840135611aab8161197b565b929592945050506040919091013590565b6020808252600c908201526b155b985d5d1a1bdc9a5e995960a21b604082015260600190565b600060208284031215611af457600080fd5b5051919050565b6001600160a01b03929092168252602082015260400190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156107fb576107fb611b2a565b600060018201611b6557611b65611b2a565b5060010190565b80820281158282048414176107fb576107fb611b2a565b634e487b7160e01b600052601260045260246000fd5b600082611ba857611ba8611b83565b500490565b600181815b80851115611be8578160001904821115611bce57611bce611b2a565b80851615611bdb57918102915b93841c9390800290611bb2565b509250929050565b600082611bff575060016107fb565b81611c0c575060006107fb565b8160018114611c225760028114611c2c57611c48565b60019150506107fb565b60ff841115611c3d57611c3d611b2a565b50506001821b6107fb565b5060208310610133831016604e8410600b8410161715611c6b575081810a6107fb565b611c758383611bad565b8060001904821115611c8957611c89611b2a565b029392505050565b600061189f60ff841683611bf0565b600060208284031215611cb257600080fd5b815163ffffffff8116811461189f57600080fd5b634e487b7160e01b600052604160045260246000fd5b805169ffffffffffffffffffff81168114611cf657600080fd5b919050565b600080600080600060a08688031215611d1357600080fd5b611d1c86611cdc565b9450602086015193506040860151925060608601519150611d3f60808701611cdc565b90509295509295909350565b818103818111156107fb576107fb611b2a565b600082611d6d57611d6d611b83565b500690565b600060208284031215611d8457600080fd5b8151801515811461189f57600080fd5b60005b83811015611daf578181015183820152602001611d97565b50506000910152565b60008251611dca818460208701611d94565b9190910192915050565b6020815260008251806020840152611df3816040850160208701611d94565b601f01601f1916919091016040019291505056fea26469706673582212206101120e3e1a8e9ed087dffe70b08277dfd2b47d53b88e9e2a9c6949c84efe6064736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E3D DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6162CB91 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0x8456CB59 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xA74AA566 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0xAB1094C0 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xC76380B7 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xCE25CB4D EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xF7406FC3 EQ PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6162CB91 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x65A1F3C3 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x6C1F5633 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x71A97305 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x7262F557 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x82131470 EQ PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x41B5774A GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x41B5774A EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x45C6A874 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x56168843 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x5D204718 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x5DE11890 EQ PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x46F7DA2 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x17FCB39B EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x18AC3B15 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x20529BB1 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x3931F45D EQ PUSH2 0x1A3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x2B8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x164 PUSH2 0x312 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x1990 JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH2 0x195 PUSH2 0x5E6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x171 JUMP JUMPDEST PUSH2 0x195 PUSH2 0x1B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x19C5 JUMP JUMPDEST PUSH2 0x6E2 JUMP JUMPDEST PUSH2 0x195 PUSH2 0x801 JUMP JUMPDEST PUSH2 0x164 PUSH2 0x87C JUMP JUMPDEST PUSH2 0x195 PUSH2 0x89A JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x8AD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x171 JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x19F1 JUMP JUMPDEST PUSH2 0x8C0 JUMP JUMPDEST PUSH2 0x195 PUSH2 0x8F3 JUMP JUMPDEST PUSH2 0x164 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x171 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x9FC JUMP JUMPDEST PUSH2 0x236 PUSH2 0xA83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x1A0E JUMP JUMPDEST PUSH2 0x195 PUSH2 0x251 CALLDATASIZE PUSH1 0x4 PUSH2 0x19C5 JUMP JUMPDEST PUSH2 0xC77 JUMP JUMPDEST PUSH2 0x195 PUSH2 0xD1A JUMP JUMPDEST PUSH2 0x15A PUSH2 0xD2D JUMP JUMPDEST PUSH2 0x164 PUSH2 0xD81 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0x1A7B JUMP JUMPDEST PUSH2 0xD9D JUMP JUMPDEST PUSH2 0x15A PUSH2 0x28F CALLDATASIZE PUSH1 0x4 PUSH2 0x19F1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x195 PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x19F1 JUMP JUMPDEST PUSH2 0xF4D JUMP JUMPDEST PUSH2 0x195 PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x19C5 JUMP JUMPDEST PUSH2 0xFCF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C2 PUSH2 0x101C JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F3 SWAP1 PUSH2 0x1ABC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x306 PUSH2 0x101C JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31C PUSH2 0x101C JUMP JUMPDEST PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x338 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x370 SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x38D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0x1AE2 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x40F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204458424C2062616C616E636520746F20726564 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x65656D PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41B DUP7 DUP7 PUSH2 0xC77 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44B SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x468 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x1AE2 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x513 JUMPI DUP5 DUP2 LT PUSH2 0x4A5 JUMPI DUP1 SWAP2 POP PUSH2 0x513 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742061737365742062616C616E636520746F207072 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6475636520657870656374656420776974686472617720616D6F756E740000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F3 JUMP JUMPDEST PUSH2 0x527 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND CALLER DUP5 PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x2770A7EB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x9DC29FAC SWAP1 PUSH2 0x55B SWAP1 CALLER SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x1AFB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x589 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP2 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0x5FE85DC899E158274A44ABAB0E6DF5434416F0CE11DF30D42E02F229B8FC8A41 SWAP4 POP SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP2 POP LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5F1 PUSH2 0x101C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x8 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x64D JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x62F JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x6DC JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x674 JUMPI PUSH2 0x674 PUSH2 0x1B14 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x26 DUP8 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 SWAP3 POP SWAP1 PUSH2 0x6A7 DUP3 PUSH2 0x109B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6B8 DUP8 DUP6 DUP5 PUSH1 0x0 PUSH2 0x120A JUMP JUMPDEST POP SWAP1 POP PUSH2 0x6C5 DUP2 DUP10 PUSH2 0x1B40 JUMP JUMPDEST SWAP8 POP POP POP POP POP DUP1 PUSH2 0x6D5 SWAP1 PUSH2 0x1B53 JUMP JUMPDEST SWAP1 POP PUSH2 0x657 JUMP JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6ED PUSH2 0x101C JUMP JUMPDEST PUSH1 0x3 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP6 AND SUB PUSH2 0x711 JUMPI DUP3 SWAP2 POP POP PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x26 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x738 SWAP1 PUSH2 0x109B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x26 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP3 POP SWAP1 PUSH2 0x75F SWAP1 PUSH2 0x109B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0x77A PUSH9 0x327CB2734119D3B7A9 PUSH1 0x1E SHL DUP6 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0x784 SWAP2 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH9 0x327CB2734119D3B7A9 PUSH1 0x1E SHL PUSH2 0x79F DUP9 DUP5 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0x7A9 SWAP2 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x25 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x7DF SWAP1 PUSH1 0xFF AND PUSH1 0xA PUSH2 0x1C91 JUMP JUMPDEST PUSH2 0x7E9 SWAP1 DUP4 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0x7F3 SWAP2 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x80C PUSH2 0x101C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH5 0xE8D4A51000 DUP3 PUSH1 0x5 ADD SLOAD PUSH2 0x825 SWAP2 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0xFFFF AND DUP4 PUSH1 0x9 ADD PUSH1 0x1 ADD SLOAD PUSH2 0x840 SWAP2 SWAP1 PUSH2 0x1B6C JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 DUP5 PUSH1 0x4 ADD SLOAD PUSH2 0x85B SWAP2 SWAP1 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0x865 SWAP2 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST DUP4 PUSH1 0x4 ADD SLOAD PUSH2 0x874 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x886 PUSH2 0x101C JUMP JUMPDEST SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A4 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x4 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B7 PUSH2 0x101C JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8CB PUSH2 0x101C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x26 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 AND ISZERO ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8FE PUSH2 0x101C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x957 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x97B SWAP2 SWAP1 PUSH2 0x1AE2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x987 PUSH2 0x5E6 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 PUSH2 0x994 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x9A3 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH2 0x9B6 DUP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0x874 SWAP2 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9CA PUSH2 0x101C JUMP JUMPDEST PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9E6 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA06 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x566826D1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA5A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA7E SWAP2 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xA8F PUSH2 0x101C JUMP JUMPDEST PUSH1 0x8 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAAF JUMPI PUSH2 0xAAF PUSH2 0x1CC6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB14 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xB01 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xACD JUMPI SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 DUP1 DUP3 PUSH1 0x8 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xB72 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB54 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xC70 JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB99 JUMPI PUSH2 0xB99 PUSH2 0x1B14 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x26 DUP9 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 SWAP3 POP SWAP1 PUSH2 0xBCC DUP3 PUSH2 0x109B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0xBDE DUP10 DUP7 DUP6 PUSH1 0x0 PUSH2 0x120A JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x327CB2734119D3B7A9 PUSH1 0x1E SHL PUSH3 0xF4240 DUP7 PUSH2 0xC24 SWAP2 SWAP1 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0xC2E SWAP2 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST DUP2 MSTORE POP DUP11 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0xC43 JUMPI PUSH2 0xC43 PUSH2 0x1B14 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP8 PUSH2 0xC58 SWAP1 PUSH2 0x1B53 JUMP JUMPDEST SWAP8 POP POP POP POP POP POP DUP1 PUSH2 0xC69 SWAP1 PUSH2 0x1B53 JUMP JUMPDEST SWAP1 POP PUSH2 0xB7C JUMP JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC82 PUSH2 0x101C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC8E PUSH2 0x8F3 JUMP JUMPDEST SWAP1 POP PUSH3 0xF4240 PUSH2 0xCAA PUSH9 0x327CB2734119D3B7A9 PUSH1 0x1E SHL DUP4 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0xCB4 SWAP2 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCC1 DUP7 PUSH2 0xF4D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x25 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP3 PUSH2 0xCF1 DUP4 PUSH1 0xA PUSH2 0x1C91 JUMP JUMPDEST PUSH2 0xCFB SWAP1 DUP7 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0xD05 SWAP2 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x7E9 DUP3 DUP10 PUSH2 0x1B6C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD24 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x5 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD37 PUSH2 0x101C JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F3 SWAP1 PUSH2 0x1ABC JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD72 PUSH2 0x101C JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD8B PUSH2 0x101C JUMP JUMPDEST PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA7 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F3 SWAP1 PUSH2 0x1ABC JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE0 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF7406FC3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 ADDRESS SWAP1 PUSH4 0xF7406FC3 SWAP1 PUSH2 0xE0B SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1AFB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE28 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE4C SWAP2 SWAP1 PUSH2 0x1AE2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x41B5774A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE8E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEB2 SWAP2 SWAP1 PUSH2 0x1AE2 JUMP JUMPDEST SWAP1 POP PUSH2 0xEBD DUP3 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xED2 DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0xEDC SWAP2 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST PUSH1 0x1 DUP6 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH2 0xF11 SWAP1 DUP12 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x1AFB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xF58 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x26 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP SWAP2 AND PUSH2 0xFBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x2AB739BAB83837B93A32B2103332B2903A37B5B2B7 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F3 JUMP JUMPDEST PUSH2 0xFC7 DUP2 PUSH2 0x109B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFDA PUSH2 0x101C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x26 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP3 POP PUSH2 0x1000 DUP3 PUSH2 0x109B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1010 DUP5 DUP9 DUP5 DUP10 PUSH2 0x120A JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0xBFA76EC2967ED7F8D3D40CD552F1451AB03573B596BFCE931A6A016F7733078C SWAP1 JUMP JUMPDEST PUSH2 0x1096 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x105F SWAP3 SWAP2 SWAP1 PUSH2 0x1AFB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x1416 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1119 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST POP SWAP4 POP POP SWAP3 POP POP PUSH1 0x0 DUP3 SGT PUSH2 0x116A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x4E6F207072696365206461746120617661696C61626C65 PUSH1 0x48 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x258 PUSH2 0x117C PUSH3 0x15180 TIMESTAMP PUSH2 0x1D4B JUMP JUMPDEST PUSH2 0x1186 SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT PUSH2 0x11CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x5374616C652070726963652064617461 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F3 JUMP JUMPDEST DUP5 SLOAD PUSH2 0x11E1 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0xA PUSH2 0x1C91 JUMP JUMPDEST PUSH2 0x11F7 PUSH9 0x327CB2734119D3B7A9 PUSH1 0x1E SHL DUP6 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0x1201 SWAP2 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 DUP3 SUB PUSH2 0x1284 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1240 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x125D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1281 SWAP2 SWAP1 PUSH2 0x1AE2 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH3 0xF4240 PUSH2 0x1292 DUP6 DUP4 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0x129C SWAP2 SWAP1 PUSH2 0x1B6C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x25 DUP9 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 POP PUSH9 0x327CB2734119D3B7A9 PUSH1 0x1E SHL SWAP1 PUSH2 0x12D6 SWAP1 PUSH1 0xFF AND PUSH1 0xA PUSH2 0x1C91 JUMP JUMPDEST PUSH2 0x12E0 SWAP2 SWAP1 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0x12EA SWAP1 DUP4 PUSH2 0x1B99 JUMP JUMPDEST SWAP2 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12FF PUSH2 0x101C JUMP JUMPDEST PUSH1 0x6 DUP2 ADD DUP1 SLOAD TIMESTAMP SWAP1 SWAP2 SSTORE SWAP1 SWAP2 POP DUP3 DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1328 JUMPI POP PUSH2 0x1324 PUSH3 0x15180 TIMESTAMP PUSH2 0x1D4B JUMP JUMPDEST DUP3 GT ISZERO JUMPDEST ISZERO PUSH2 0x1340 JUMPI PUSH2 0x133B PUSH1 0xD DUP5 ADD PUSH1 0x0 PUSH2 0x1944 JUMP JUMPDEST PUSH2 0x13F1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE10 PUSH2 0x1352 PUSH3 0x15180 TIMESTAMP PUSH2 0x1D5E JUMP JUMPDEST PUSH2 0x135C SWAP2 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x18 PUSH1 0x1 DUP4 ADD MOD SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0xD ADD DUP3 PUSH1 0x18 DUP2 LT PUSH2 0x1380 JUMPI PUSH2 0x1380 PUSH2 0x1B14 JUMP JUMPDEST ADD SLOAD SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0xD ADD DUP4 PUSH1 0x18 DUP2 LT PUSH2 0x139B JUMPI PUSH2 0x139B PUSH2 0x1B14 JUMP JUMPDEST ADD SSTORE DUP7 PUSH1 0xD DUP8 ADD DUP5 PUSH1 0x18 DUP2 LT PUSH2 0x13B3 JUMPI PUSH2 0x13B3 PUSH2 0x1B14 JUMP JUMPDEST ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13C3 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x5 DUP7 ADD SLOAD PUSH2 0x13D8 SWAP1 DUP9 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST SWAP4 POP DUP1 ISZERO PUSH2 0x13ED JUMPI PUSH2 0x13EA DUP2 DUP6 PUSH2 0x1D4B JUMP JUMPDEST SWAP4 POP JUMPDEST POP POP POP JUMPDEST PUSH1 0x5 DUP4 ADD DUP2 SWAP1 SSTORE PUSH2 0x1410 DUP4 PUSH2 0x140B PUSH5 0xE8D4A51000 DUP5 PUSH2 0x1B99 JUMP JUMPDEST PUSH2 0x14E8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x146B DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1552 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1096 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1489 SWAP2 SWAP1 PUSH2 0x1D72 JUMP JUMPDEST PUSH2 0x1096 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x9 DUP5 ADD SLOAD PUSH2 0xFFFF DUP1 DUP3 AND DUP4 MSTORE PUSH3 0x10000 SWAP1 SWAP2 DIV DUP2 AND PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0xA DUP7 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xB DUP6 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE SWAP1 SWAP2 SWAP1 DUP4 AND LT PUSH2 0x1539 JUMPI PUSH2 0x1096 DUP4 DUP4 PUSH2 0x1561 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xFFFF DUP1 DUP5 AND SWAP2 AND LT PUSH2 0x1096 JUMPI PUSH2 0x1096 DUP4 DUP4 PUSH2 0x1687 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xFC7 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x179B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x9 DUP5 ADD SLOAD PUSH2 0xFFFF DUP1 DUP3 AND DUP4 MSTORE PUSH3 0x10000 SWAP1 SWAP2 DIV AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA DUP5 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xB DUP4 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE JUMPDEST PUSH2 0x15A6 DUP2 DUP4 PUSH2 0x1876 JUMP JUMPDEST PUSH2 0x1632 JUMPI PUSH1 0x0 DUP4 PUSH1 0xC ADD DUP3 PUSH1 0x60 ADD MLOAD PUSH1 0x1 PUSH2 0x15C1 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x15D1 JUMPI PUSH2 0x15D1 PUSH2 0x1B14 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP DUP1 PUSH1 0x1 ADD SLOAD PUSH1 0x0 SUB PUSH2 0x15F3 JUMPI POP PUSH2 0x1632 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP3 SLOAD PUSH2 0xFFFF DUP1 DUP3 AND DUP4 MSTORE PUSH3 0x10000 SWAP1 SWAP2 DIV AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP1 POP PUSH2 0x159C JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0xA DUP5 ADD SLOAD EQ PUSH2 0x1096 JUMPI DUP1 MLOAD PUSH1 0x9 DUP5 ADD DUP1 SLOAD PUSH1 0x20 DUP5 ADD MLOAD PUSH2 0xFFFF SWAP1 DUP2 AND PUSH3 0x10000 MUL PUSH4 0xFFFFFFFF NOT SWAP1 SWAP3 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0xA DUP5 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0xB DUP5 ADD SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x9 DUP5 ADD SLOAD PUSH2 0xFFFF DUP1 DUP3 AND DUP4 MSTORE PUSH3 0x10000 SWAP1 SWAP2 DIV AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA DUP5 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xB DUP4 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE JUMPDEST PUSH2 0x16CC DUP2 DUP4 PUSH2 0x1876 JUMP JUMPDEST PUSH2 0x1754 JUMPI PUSH1 0x60 DUP2 ADD MLOAD ISZERO PUSH2 0x1754 JUMPI PUSH1 0x0 DUP4 PUSH1 0xC ADD PUSH1 0x1 DUP4 PUSH1 0x60 ADD MLOAD PUSH2 0x16F1 SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1701 JUMPI PUSH2 0x1701 PUSH2 0x1B14 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x3 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH2 0xFFFF DUP1 DUP3 AND DUP6 MSTORE PUSH3 0x10000 SWAP1 SWAP2 DIV AND SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP2 POP PUSH2 0x16C2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x9 DUP5 ADD DUP1 SLOAD PUSH1 0x20 DUP5 ADD MLOAD PUSH2 0xFFFF SWAP1 DUP2 AND PUSH3 0x10000 MUL PUSH4 0xFFFFFFFF NOT SWAP1 SWAP3 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0xA DUP5 ADD SSTORE PUSH1 0x60 ADD MLOAD PUSH1 0xB SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x17FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1818 SWAP2 SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1855 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x185A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x186B DUP8 DUP4 DUP4 DUP8 PUSH2 0x18A6 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xFFFF AND DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0xFFFF AND GT ISZERO DUP1 ISZERO PUSH2 0x189F JUMPI POP DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0xFFFF AND DUP3 PUSH2 0xFFFF AND LT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1915 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x190E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x190E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F3 JUMP JUMPDEST POP DUP2 PUSH2 0xFC7 JUMP JUMPDEST PUSH2 0xFC7 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x192A JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST POP PUSH2 0x28F SWAP1 PUSH1 0x18 DUP2 ADD SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1963 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x194F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x19A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x19B0 DUP2 PUSH2 0x197B JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x19E3 DUP2 PUSH2 0x197B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x189F DUP2 PUSH2 0x197B JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1A6E JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 DUP2 ADD MLOAD DUP8 DUP7 ADD MSTORE DUP6 DUP2 ADD MLOAD DUP7 DUP7 ADD MSTORE PUSH1 0x60 SWAP1 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1A2B JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1A9B DUP2 PUSH2 0x197B JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1AAB DUP2 PUSH2 0x197B JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x155B985D5D1A1BDC9A5E9959 PUSH1 0xA2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x7FB JUMPI PUSH2 0x7FB PUSH2 0x1B2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1B65 JUMPI PUSH2 0x1B65 PUSH2 0x1B2A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x7FB JUMPI PUSH2 0x7FB PUSH2 0x1B2A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1BA8 JUMPI PUSH2 0x1BA8 PUSH2 0x1B83 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1BE8 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1BCE JUMPI PUSH2 0x1BCE PUSH2 0x1B2A JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1BDB JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1BB2 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1BFF JUMPI POP PUSH1 0x1 PUSH2 0x7FB JUMP JUMPDEST DUP2 PUSH2 0x1C0C JUMPI POP PUSH1 0x0 PUSH2 0x7FB JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1C22 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1C2C JUMPI PUSH2 0x1C48 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x7FB JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1C3D JUMPI PUSH2 0x1C3D PUSH2 0x1B2A JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x7FB JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1C6B JUMPI POP DUP2 DUP2 EXP PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x1C75 DUP4 DUP4 PUSH2 0x1BAD JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1C89 JUMPI PUSH2 0x1C89 PUSH2 0x1B2A JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x189F PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x1BF0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x189F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1CF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1D13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D1C DUP7 PUSH2 0x1CDC JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x1D3F PUSH1 0x80 DUP8 ADD PUSH2 0x1CDC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x7FB JUMPI PUSH2 0x7FB PUSH2 0x1B2A JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1D6D JUMPI PUSH2 0x1D6D PUSH2 0x1B83 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x189F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DAF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1D97 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1DCA DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1D94 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1DF3 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1D94 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x112 0xE RETURNDATACOPY BYTE DUP15 SWAP15 0xD0 DUP8 0xDF INVALID PUSH17 0xB08277DFD2B47D53B88E9E2A9C6949C84E INVALID PUSH1 0x64 PUSH20 0x6F6C634300081100330000000000000000000000 ","sourceMap":"934:3827:10:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_adjustMintRateDown_3155":{"entryPoint":5767,"id":3155,"parameterSlots":2,"returnSlots":0},"@_adjustMintRateUp_3099":{"entryPoint":5473,"id":3099,"parameterSlots":2,"returnSlots":0},"@_adjustMintRate_3036":{"entryPoint":5352,"id":3036,"parameterSlots":2,"returnSlots":0},"@_adjustVolume_2996":{"entryPoint":4853,"id":2996,"parameterSlots":1,"returnSlots":0},"@_callOptionalReturn_1005":{"entryPoint":5142,"id":1005,"parameterSlots":2,"returnSlots":0},"@_getPrice_2699":{"entryPoint":4251,"id":2699,"parameterSlots":1,"returnSlots":1},"@_rateInRange_3176":{"entryPoint":6262,"id":3176,"parameterSlots":2,"returnSlots":1},"@_revert_1335":{"entryPoint":null,"id":1335,"parameterSlots":2,"returnSlots":0},"@_toUSD_2763":{"entryPoint":4618,"id":2763,"parameterSlots":4,"returnSlots":2},"@adminMultiSig_3229":{"entryPoint":2172,"id":3229,"parameterSlots":0,"returnSlots":1},"@assets_2594":{"entryPoint":2691,"id":2594,"parameterSlots":0,"returnSlots":1},"@aumUSD_2432":{"entryPoint":1510,"id":2432,"parameterSlots":0,"returnSlots":1},"@baseMintThreshold_3287":{"entryPoint":2202,"id":3287,"parameterSlots":0,"returnSlots":1},"@computeVolumeUSD_2355":{"entryPoint":4047,"id":2355,"parameterSlots":2,"returnSlots":1},"@convertGasToFeeToken_2193":{"entryPoint":1762,"id":2193,"parameterSlots":2,"returnSlots":1},"@currentMintRateUSD_2642":{"entryPoint":2049,"id":2642,"parameterSlots":0,"returnSlots":1},"@currentNavUSD_2479":{"entryPoint":2291,"id":2479,"parameterSlots":0,"returnSlots":1},"@dailyVolumeUSD_3207":{"entryPoint":3354,"id":3207,"parameterSlots":0,"returnSlots":1},"@dexible_3254":{"entryPoint":3457,"id":3254,"parameterSlots":0,"returnSlots":1},"@discountBps_3196":{"entryPoint":2556,"id":3196,"parameterSlots":0,"returnSlots":1},"@dxbl_3243":{"entryPoint":2496,"id":3243,"parameterSlots":0,"returnSlots":1},"@estimateRedemption_2260":{"entryPoint":3191,"id":2260,"parameterSlots":2,"returnSlots":1},"@feeTokenPriceUSD_2305":{"entryPoint":3917,"id":2305,"parameterSlots":1,"returnSlots":1},"@functionCallWithValue_1160":{"entryPoint":6043,"id":1160,"parameterSlots":4,"returnSlots":1},"@functionCall_1096":{"entryPoint":5458,"id":1096,"parameterSlots":3,"returnSlots":1},"@isContract_1024":{"entryPoint":null,"id":1024,"parameterSlots":1,"returnSlots":1},"@isFeeTokenAllowed_1542":{"entryPoint":2240,"id":1542,"parameterSlots":1,"returnSlots":1},"@load_2106":{"entryPoint":4124,"id":2106,"parameterSlots":0,"returnSlots":1},"@migrateV1_3301":{"entryPoint":null,"id":3301,"parameterSlots":1,"returnSlots":0},"@pause_1665":{"entryPoint":3373,"id":1665,"parameterSlots":0,"returnSlots":0},"@paused_3218":{"entryPoint":2221,"id":3218,"parameterSlots":0,"returnSlots":1},"@redeemDXBL_1643":{"entryPoint":814,"id":1643,"parameterSlots":3,"returnSlots":0},"@resume_1686":{"entryPoint":696,"id":1686,"parameterSlots":0,"returnSlots":0},"@rewardTrader_2864":{"entryPoint":3485,"id":2864,"parameterSlots":3,"returnSlots":0},"@safeTransfer_757":{"entryPoint":4160,"id":757,"parameterSlots":3,"returnSlots":0},"@timelockSeconds_3276":{"entryPoint":2524,"id":3276,"parameterSlots":0,"returnSlots":1},"@verifyCallResultFromTarget_1291":{"entryPoint":6310,"id":1291,"parameterSlots":4,"returnSlots":1},"@wrappedNativeToken_3265":{"entryPoint":786,"id":3265,"parameterSlots":0,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6641,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":6779,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6597,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":6544,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":7538,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_V1MigrationTarget_$1982":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":6882,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint32_fromMemory":{"entryPoint":7328,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory":{"entryPoint":7419,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_uint80_fromMemory":{"entryPoint":7388,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7608,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":6503,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":6907,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_AssetInfo_$1830_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_AssetInfo_$1830_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":6670,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7636,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6844,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e96b07ad2fe138b3a0142201e6de920a5bbc80c056562ed599dfe58fbb366bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2ca421925c4941a3397518dad13c20d3418010081598deda6cc2f02a05282c33__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4b0df79b6cb2496d5d4d34caf2e75280779b90d3c442f3e9e91afd6e516af648__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_97744ca51cd6470aee5efe27d387a8940a50b552052552cdf56a25576fc02561__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_feab262476110b6da19dad5f74ffa5fc85a39886ca1e6c4c3619a320fb4c8b10__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6976,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":7065,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":7085,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":7313,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":7152,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":7020,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7499,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":7572,"id":null,"parameterSlots":3,"returnSlots":0},"increment_t_uint256":{"entryPoint":6995,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":7518,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":6954,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":7043,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":6932,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7366,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":6523,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:12808:23","statements":[{"nodeType":"YulBlock","src":"6:3:23","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:102:23","statements":[{"nodeType":"YulAssignment","src":"125:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:23"},"nodeType":"YulFunctionCall","src":"133:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"182:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"198:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"203:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"194:3:23"},"nodeType":"YulFunctionCall","src":"194:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"207:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"190:3:23"},"nodeType":"YulFunctionCall","src":"190:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"178:3:23"},"nodeType":"YulFunctionCall","src":"178:32:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:23"},"nodeType":"YulFunctionCall","src":"160:51:23"},"nodeType":"YulExpressionStatement","src":"160:51:23"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:23","type":""}],"src":"14:203:23"},{"body":{"nodeType":"YulBlock","src":"267:86:23","statements":[{"body":{"nodeType":"YulBlock","src":"331:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"340:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"343:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"333:6:23"},"nodeType":"YulFunctionCall","src":"333:12:23"},"nodeType":"YulExpressionStatement","src":"333:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"290:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"301:5:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"316:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"321:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"312:3:23"},"nodeType":"YulFunctionCall","src":"312:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"325:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"308:3:23"},"nodeType":"YulFunctionCall","src":"308:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"297:3:23"},"nodeType":"YulFunctionCall","src":"297:31:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"287:2:23"},"nodeType":"YulFunctionCall","src":"287:42:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"280:6:23"},"nodeType":"YulFunctionCall","src":"280:50:23"},"nodeType":"YulIf","src":"277:70:23"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"256:5:23","type":""}],"src":"222:131:23"},{"body":{"nodeType":"YulBlock","src":"462:279:23","statements":[{"body":{"nodeType":"YulBlock","src":"508:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"517:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"520:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"510:6:23"},"nodeType":"YulFunctionCall","src":"510:12:23"},"nodeType":"YulExpressionStatement","src":"510:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"483:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"492:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"479:3:23"},"nodeType":"YulFunctionCall","src":"479:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"504:2:23","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"475:3:23"},"nodeType":"YulFunctionCall","src":"475:32:23"},"nodeType":"YulIf","src":"472:52:23"},{"nodeType":"YulVariableDeclaration","src":"533:36:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"559:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"546:12:23"},"nodeType":"YulFunctionCall","src":"546:23:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"537:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"603:5:23"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"578:24:23"},"nodeType":"YulFunctionCall","src":"578:31:23"},"nodeType":"YulExpressionStatement","src":"578:31:23"},{"nodeType":"YulAssignment","src":"618:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"628:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"618:6:23"}]},{"nodeType":"YulAssignment","src":"642:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"669:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"680:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"665:3:23"},"nodeType":"YulFunctionCall","src":"665:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"652:12:23"},"nodeType":"YulFunctionCall","src":"652:32:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"642:6:23"}]},{"nodeType":"YulAssignment","src":"693:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"720:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"731:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"716:3:23"},"nodeType":"YulFunctionCall","src":"716:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"703:12:23"},"nodeType":"YulFunctionCall","src":"703:32:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"693:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"412:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"423:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"435:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"443:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"451:6:23","type":""}],"src":"358:383:23"},{"body":{"nodeType":"YulBlock","src":"847:76:23","statements":[{"nodeType":"YulAssignment","src":"857:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"869:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"880:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"865:3:23"},"nodeType":"YulFunctionCall","src":"865:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"857:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"899:9:23"},{"name":"value0","nodeType":"YulIdentifier","src":"910:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"892:6:23"},"nodeType":"YulFunctionCall","src":"892:25:23"},"nodeType":"YulExpressionStatement","src":"892:25:23"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"816:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"827:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"838:4:23","type":""}],"src":"746:177:23"},{"body":{"nodeType":"YulBlock","src":"1015:228:23","statements":[{"body":{"nodeType":"YulBlock","src":"1061:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1070:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1073:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1063:6:23"},"nodeType":"YulFunctionCall","src":"1063:12:23"},"nodeType":"YulExpressionStatement","src":"1063:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1036:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"1045:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1032:3:23"},"nodeType":"YulFunctionCall","src":"1032:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"1057:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1028:3:23"},"nodeType":"YulFunctionCall","src":"1028:32:23"},"nodeType":"YulIf","src":"1025:52:23"},{"nodeType":"YulVariableDeclaration","src":"1086:36:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1112:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1099:12:23"},"nodeType":"YulFunctionCall","src":"1099:23:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1090:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1156:5:23"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1131:24:23"},"nodeType":"YulFunctionCall","src":"1131:31:23"},"nodeType":"YulExpressionStatement","src":"1131:31:23"},{"nodeType":"YulAssignment","src":"1171:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"1181:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1171:6:23"}]},{"nodeType":"YulAssignment","src":"1195:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1222:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1233:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1218:3:23"},"nodeType":"YulFunctionCall","src":"1218:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1205:12:23"},"nodeType":"YulFunctionCall","src":"1205:32:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1195:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"973:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"984:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"996:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1004:6:23","type":""}],"src":"928:315:23"},{"body":{"nodeType":"YulBlock","src":"1343:92:23","statements":[{"nodeType":"YulAssignment","src":"1353:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1365:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1376:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1361:3:23"},"nodeType":"YulFunctionCall","src":"1361:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1353:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1395:9:23"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1420:6:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1413:6:23"},"nodeType":"YulFunctionCall","src":"1413:14:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1406:6:23"},"nodeType":"YulFunctionCall","src":"1406:22:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1388:6:23"},"nodeType":"YulFunctionCall","src":"1388:41:23"},"nodeType":"YulExpressionStatement","src":"1388:41:23"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1312:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1323:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1334:4:23","type":""}],"src":"1248:187:23"},{"body":{"nodeType":"YulBlock","src":"1510:177:23","statements":[{"body":{"nodeType":"YulBlock","src":"1556:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1565:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1568:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1558:6:23"},"nodeType":"YulFunctionCall","src":"1558:12:23"},"nodeType":"YulExpressionStatement","src":"1558:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1531:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"1540:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1527:3:23"},"nodeType":"YulFunctionCall","src":"1527:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"1552:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1523:3:23"},"nodeType":"YulFunctionCall","src":"1523:32:23"},"nodeType":"YulIf","src":"1520:52:23"},{"nodeType":"YulVariableDeclaration","src":"1581:36:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1607:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1594:12:23"},"nodeType":"YulFunctionCall","src":"1594:23:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1585:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1651:5:23"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1626:24:23"},"nodeType":"YulFunctionCall","src":"1626:31:23"},"nodeType":"YulExpressionStatement","src":"1626:31:23"},{"nodeType":"YulAssignment","src":"1666:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"1676:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1666:6:23"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1476:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1487:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1499:6:23","type":""}],"src":"1440:247:23"},{"body":{"nodeType":"YulBlock","src":"1791:93:23","statements":[{"nodeType":"YulAssignment","src":"1801:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1813:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1824:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1809:3:23"},"nodeType":"YulFunctionCall","src":"1809:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1801:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1843:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1858:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"1866:10:23","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1854:3:23"},"nodeType":"YulFunctionCall","src":"1854:23:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1836:6:23"},"nodeType":"YulFunctionCall","src":"1836:42:23"},"nodeType":"YulExpressionStatement","src":"1836:42:23"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1760:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1771:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1782:4:23","type":""}],"src":"1692:192:23"},{"body":{"nodeType":"YulBlock","src":"2094:748:23","statements":[{"nodeType":"YulVariableDeclaration","src":"2104:12:23","value":{"kind":"number","nodeType":"YulLiteral","src":"2114:2:23","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2108:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2125:32:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2143:9:23"},{"name":"_1","nodeType":"YulIdentifier","src":"2154:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2139:3:23"},"nodeType":"YulFunctionCall","src":"2139:18:23"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"2129:6:23","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2173:9:23"},{"name":"_1","nodeType":"YulIdentifier","src":"2184:2:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2166:6:23"},"nodeType":"YulFunctionCall","src":"2166:21:23"},"nodeType":"YulExpressionStatement","src":"2166:21:23"},{"nodeType":"YulVariableDeclaration","src":"2196:17:23","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"2207:6:23"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"2200:3:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2222:27:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2242:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2236:5:23"},"nodeType":"YulFunctionCall","src":"2236:13:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2226:6:23","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"2265:6:23"},{"name":"length","nodeType":"YulIdentifier","src":"2273:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2258:6:23"},"nodeType":"YulFunctionCall","src":"2258:22:23"},"nodeType":"YulExpressionStatement","src":"2258:22:23"},{"nodeType":"YulVariableDeclaration","src":"2289:12:23","value":{"kind":"number","nodeType":"YulLiteral","src":"2299:2:23","type":"","value":"64"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2293:2:23","type":""}]},{"nodeType":"YulAssignment","src":"2310:25:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2321:9:23"},{"name":"_2","nodeType":"YulIdentifier","src":"2332:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2317:3:23"},"nodeType":"YulFunctionCall","src":"2317:18:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2310:3:23"}]},{"nodeType":"YulVariableDeclaration","src":"2344:29:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2362:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"2370:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2358:3:23"},"nodeType":"YulFunctionCall","src":"2358:15:23"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"2348:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2382:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"2391:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2386:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"2450:366:23","statements":[{"nodeType":"YulVariableDeclaration","src":"2464:23:23","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2480:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2474:5:23"},"nodeType":"YulFunctionCall","src":"2474:13:23"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"2468:2:23","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2507:3:23"},{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"2522:2:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2516:5:23"},"nodeType":"YulFunctionCall","src":"2516:9:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2535:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2540:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2531:3:23"},"nodeType":"YulFunctionCall","src":"2531:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"2544:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2527:3:23"},"nodeType":"YulFunctionCall","src":"2527:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2512:3:23"},"nodeType":"YulFunctionCall","src":"2512:35:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2500:6:23"},"nodeType":"YulFunctionCall","src":"2500:48:23"},"nodeType":"YulExpressionStatement","src":"2500:48:23"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2572:3:23"},{"name":"_1","nodeType":"YulIdentifier","src":"2577:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2568:3:23"},"nodeType":"YulFunctionCall","src":"2568:12:23"},{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"2592:2:23"},{"name":"_1","nodeType":"YulIdentifier","src":"2596:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2588:3:23"},"nodeType":"YulFunctionCall","src":"2588:11:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2582:5:23"},"nodeType":"YulFunctionCall","src":"2582:18:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2561:6:23"},"nodeType":"YulFunctionCall","src":"2561:40:23"},"nodeType":"YulExpressionStatement","src":"2561:40:23"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2625:3:23"},{"name":"_2","nodeType":"YulIdentifier","src":"2630:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2621:3:23"},"nodeType":"YulFunctionCall","src":"2621:12:23"},{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"2645:2:23"},{"name":"_2","nodeType":"YulIdentifier","src":"2649:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2641:3:23"},"nodeType":"YulFunctionCall","src":"2641:11:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2635:5:23"},"nodeType":"YulFunctionCall","src":"2635:18:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2614:6:23"},"nodeType":"YulFunctionCall","src":"2614:40:23"},"nodeType":"YulExpressionStatement","src":"2614:40:23"},{"nodeType":"YulVariableDeclaration","src":"2667:14:23","value":{"kind":"number","nodeType":"YulLiteral","src":"2677:4:23","type":"","value":"0x60"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"2671:2:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2705:3:23"},{"name":"_4","nodeType":"YulIdentifier","src":"2710:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2701:3:23"},"nodeType":"YulFunctionCall","src":"2701:12:23"},{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"2725:2:23"},{"name":"_4","nodeType":"YulIdentifier","src":"2729:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2721:3:23"},"nodeType":"YulFunctionCall","src":"2721:11:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2715:5:23"},"nodeType":"YulFunctionCall","src":"2715:18:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2694:6:23"},"nodeType":"YulFunctionCall","src":"2694:40:23"},"nodeType":"YulExpressionStatement","src":"2694:40:23"},{"nodeType":"YulAssignment","src":"2747:21:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2758:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"2763:4:23","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2754:3:23"},"nodeType":"YulFunctionCall","src":"2754:14:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2747:3:23"}]},{"nodeType":"YulAssignment","src":"2781:25:23","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2795:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"2803:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2791:3:23"},"nodeType":"YulFunctionCall","src":"2791:15:23"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2781:6:23"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2412:1:23"},{"name":"length","nodeType":"YulIdentifier","src":"2415:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2409:2:23"},"nodeType":"YulFunctionCall","src":"2409:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2423:18:23","statements":[{"nodeType":"YulAssignment","src":"2425:14:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2434:1:23"},{"kind":"number","nodeType":"YulLiteral","src":"2437:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2430:3:23"},"nodeType":"YulFunctionCall","src":"2430:9:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2425:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"2405:3:23","statements":[]},"src":"2401:415:23"},{"nodeType":"YulAssignment","src":"2825:11:23","value":{"name":"pos","nodeType":"YulIdentifier","src":"2833:3:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2825:4:23"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_AssetInfo_$1830_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_AssetInfo_$1830_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2063:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2074:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2085:4:23","type":""}],"src":"1889:953:23"},{"body":{"nodeType":"YulBlock","src":"2951:352:23","statements":[{"body":{"nodeType":"YulBlock","src":"2997:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3006:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3009:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2999:6:23"},"nodeType":"YulFunctionCall","src":"2999:12:23"},"nodeType":"YulExpressionStatement","src":"2999:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2972:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"2981:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2968:3:23"},"nodeType":"YulFunctionCall","src":"2968:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"2993:2:23","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2964:3:23"},"nodeType":"YulFunctionCall","src":"2964:32:23"},"nodeType":"YulIf","src":"2961:52:23"},{"nodeType":"YulVariableDeclaration","src":"3022:36:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3048:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3035:12:23"},"nodeType":"YulFunctionCall","src":"3035:23:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3026:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3092:5:23"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3067:24:23"},"nodeType":"YulFunctionCall","src":"3067:31:23"},"nodeType":"YulExpressionStatement","src":"3067:31:23"},{"nodeType":"YulAssignment","src":"3107:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"3117:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3107:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"3131:47:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3163:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3174:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3159:3:23"},"nodeType":"YulFunctionCall","src":"3159:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3146:12:23"},"nodeType":"YulFunctionCall","src":"3146:32:23"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"3135:7:23","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"3212:7:23"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3187:24:23"},"nodeType":"YulFunctionCall","src":"3187:33:23"},"nodeType":"YulExpressionStatement","src":"3187:33:23"},{"nodeType":"YulAssignment","src":"3229:17:23","value":{"name":"value_1","nodeType":"YulIdentifier","src":"3239:7:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3229:6:23"}]},{"nodeType":"YulAssignment","src":"3255:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3282:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3293:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3278:3:23"},"nodeType":"YulFunctionCall","src":"3278:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3265:12:23"},"nodeType":"YulFunctionCall","src":"3265:32:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3255:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2901:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2912:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2924:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2932:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2940:6:23","type":""}],"src":"2847:456:23"},{"body":{"nodeType":"YulBlock","src":"3404:177:23","statements":[{"body":{"nodeType":"YulBlock","src":"3450:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3459:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3462:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3452:6:23"},"nodeType":"YulFunctionCall","src":"3452:12:23"},"nodeType":"YulExpressionStatement","src":"3452:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3425:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"3434:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3421:3:23"},"nodeType":"YulFunctionCall","src":"3421:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"3446:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3417:3:23"},"nodeType":"YulFunctionCall","src":"3417:32:23"},"nodeType":"YulIf","src":"3414:52:23"},{"nodeType":"YulVariableDeclaration","src":"3475:36:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3501:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3488:12:23"},"nodeType":"YulFunctionCall","src":"3488:23:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3479:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3545:5:23"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3520:24:23"},"nodeType":"YulFunctionCall","src":"3520:31:23"},"nodeType":"YulExpressionStatement","src":"3520:31:23"},{"nodeType":"YulAssignment","src":"3560:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"3570:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3560:6:23"}]}]},"name":"abi_decode_tuple_t_contract$_V1MigrationTarget_$1982","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3370:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3381:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3393:6:23","type":""}],"src":"3308:273:23"},{"body":{"nodeType":"YulBlock","src":"3760:162:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3777:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3788:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3770:6:23"},"nodeType":"YulFunctionCall","src":"3770:21:23"},"nodeType":"YulExpressionStatement","src":"3770:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3811:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3822:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3807:3:23"},"nodeType":"YulFunctionCall","src":"3807:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"3827:2:23","type":"","value":"12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3800:6:23"},"nodeType":"YulFunctionCall","src":"3800:30:23"},"nodeType":"YulExpressionStatement","src":"3800:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3850:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3861:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3846:3:23"},"nodeType":"YulFunctionCall","src":"3846:18:23"},{"hexValue":"556e617574686f72697a6564","kind":"string","nodeType":"YulLiteral","src":"3866:14:23","type":"","value":"Unauthorized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3839:6:23"},"nodeType":"YulFunctionCall","src":"3839:42:23"},"nodeType":"YulExpressionStatement","src":"3839:42:23"},{"nodeType":"YulAssignment","src":"3890:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3902:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3913:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3898:3:23"},"nodeType":"YulFunctionCall","src":"3898:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3890:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3737:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3751:4:23","type":""}],"src":"3586:336:23"},{"body":{"nodeType":"YulBlock","src":"4008:103:23","statements":[{"body":{"nodeType":"YulBlock","src":"4054:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4063:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4066:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4056:6:23"},"nodeType":"YulFunctionCall","src":"4056:12:23"},"nodeType":"YulExpressionStatement","src":"4056:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4029:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"4038:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4025:3:23"},"nodeType":"YulFunctionCall","src":"4025:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"4050:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4021:3:23"},"nodeType":"YulFunctionCall","src":"4021:32:23"},"nodeType":"YulIf","src":"4018:52:23"},{"nodeType":"YulAssignment","src":"4079:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4095:9:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4089:5:23"},"nodeType":"YulFunctionCall","src":"4089:16:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4079:6:23"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3974:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3985:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3997:6:23","type":""}],"src":"3927:184:23"},{"body":{"nodeType":"YulBlock","src":"4290:225:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4307:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4318:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4300:6:23"},"nodeType":"YulFunctionCall","src":"4300:21:23"},"nodeType":"YulExpressionStatement","src":"4300:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4341:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4352:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4337:3:23"},"nodeType":"YulFunctionCall","src":"4337:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"4357:2:23","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4330:6:23"},"nodeType":"YulFunctionCall","src":"4330:30:23"},"nodeType":"YulExpressionStatement","src":"4330:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4380:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4391:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4376:3:23"},"nodeType":"YulFunctionCall","src":"4376:18:23"},{"hexValue":"496e73756666696369656e74204458424c2062616c616e636520746f20726564","kind":"string","nodeType":"YulLiteral","src":"4396:34:23","type":"","value":"Insufficient DXBL balance to red"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4369:6:23"},"nodeType":"YulFunctionCall","src":"4369:62:23"},"nodeType":"YulExpressionStatement","src":"4369:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4451:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4462:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4447:3:23"},"nodeType":"YulFunctionCall","src":"4447:18:23"},{"hexValue":"65656d","kind":"string","nodeType":"YulLiteral","src":"4467:5:23","type":"","value":"eem"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4440:6:23"},"nodeType":"YulFunctionCall","src":"4440:33:23"},"nodeType":"YulExpressionStatement","src":"4440:33:23"},{"nodeType":"YulAssignment","src":"4482:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4494:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4505:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4490:3:23"},"nodeType":"YulFunctionCall","src":"4490:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4482:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e96b07ad2fe138b3a0142201e6de920a5bbc80c056562ed599dfe58fbb366bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4267:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4281:4:23","type":""}],"src":"4116:399:23"},{"body":{"nodeType":"YulBlock","src":"4694:252:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4711:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4722:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4704:6:23"},"nodeType":"YulFunctionCall","src":"4704:21:23"},"nodeType":"YulExpressionStatement","src":"4704:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4745:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4756:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4741:3:23"},"nodeType":"YulFunctionCall","src":"4741:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"4761:2:23","type":"","value":"62"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4734:6:23"},"nodeType":"YulFunctionCall","src":"4734:30:23"},"nodeType":"YulExpressionStatement","src":"4734:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4784:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4795:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4780:3:23"},"nodeType":"YulFunctionCall","src":"4780:18:23"},{"hexValue":"496e73756666696369656e742061737365742062616c616e636520746f207072","kind":"string","nodeType":"YulLiteral","src":"4800:34:23","type":"","value":"Insufficient asset balance to pr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4773:6:23"},"nodeType":"YulFunctionCall","src":"4773:62:23"},"nodeType":"YulExpressionStatement","src":"4773:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4855:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4866:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4851:3:23"},"nodeType":"YulFunctionCall","src":"4851:18:23"},{"hexValue":"6f6475636520657870656374656420776974686472617720616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"4871:32:23","type":"","value":"oduce expected withdraw amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4844:6:23"},"nodeType":"YulFunctionCall","src":"4844:60:23"},"nodeType":"YulExpressionStatement","src":"4844:60:23"},{"nodeType":"YulAssignment","src":"4913:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4925:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4936:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4921:3:23"},"nodeType":"YulFunctionCall","src":"4921:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4913:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_97744ca51cd6470aee5efe27d387a8940a50b552052552cdf56a25576fc02561__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4671:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4685:4:23","type":""}],"src":"4520:426:23"},{"body":{"nodeType":"YulBlock","src":"5080:145:23","statements":[{"nodeType":"YulAssignment","src":"5090:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5102:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5113:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5098:3:23"},"nodeType":"YulFunctionCall","src":"5098:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5090:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5132:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5147:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5163:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5168:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5159:3:23"},"nodeType":"YulFunctionCall","src":"5159:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"5172:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5155:3:23"},"nodeType":"YulFunctionCall","src":"5155:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5143:3:23"},"nodeType":"YulFunctionCall","src":"5143:32:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5125:6:23"},"nodeType":"YulFunctionCall","src":"5125:51:23"},"nodeType":"YulExpressionStatement","src":"5125:51:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5196:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5207:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5192:3:23"},"nodeType":"YulFunctionCall","src":"5192:18:23"},{"name":"value1","nodeType":"YulIdentifier","src":"5212:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5185:6:23"},"nodeType":"YulFunctionCall","src":"5185:34:23"},"nodeType":"YulExpressionStatement","src":"5185:34:23"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5041:9:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5052:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5060:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5071:4:23","type":""}],"src":"4951:274:23"},{"body":{"nodeType":"YulBlock","src":"5415:262:23","statements":[{"nodeType":"YulAssignment","src":"5425:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5437:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5448:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5433:3:23"},"nodeType":"YulFunctionCall","src":"5433:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5425:4:23"}]},{"nodeType":"YulVariableDeclaration","src":"5461:29:23","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5479:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5484:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5475:3:23"},"nodeType":"YulFunctionCall","src":"5475:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"5488:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5471:3:23"},"nodeType":"YulFunctionCall","src":"5471:19:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5465:2:23","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5506:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5521:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"5529:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5517:3:23"},"nodeType":"YulFunctionCall","src":"5517:15:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5499:6:23"},"nodeType":"YulFunctionCall","src":"5499:34:23"},"nodeType":"YulExpressionStatement","src":"5499:34:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5553:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5564:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5549:3:23"},"nodeType":"YulFunctionCall","src":"5549:18:23"},{"name":"value1","nodeType":"YulIdentifier","src":"5569:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5542:6:23"},"nodeType":"YulFunctionCall","src":"5542:34:23"},"nodeType":"YulExpressionStatement","src":"5542:34:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5596:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5607:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5592:3:23"},"nodeType":"YulFunctionCall","src":"5592:18:23"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5616:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"5624:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5612:3:23"},"nodeType":"YulFunctionCall","src":"5612:15:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5585:6:23"},"nodeType":"YulFunctionCall","src":"5585:43:23"},"nodeType":"YulExpressionStatement","src":"5585:43:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5648:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5659:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5644:3:23"},"nodeType":"YulFunctionCall","src":"5644:18:23"},{"name":"value3","nodeType":"YulIdentifier","src":"5664:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5637:6:23"},"nodeType":"YulFunctionCall","src":"5637:34:23"},"nodeType":"YulExpressionStatement","src":"5637:34:23"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5360:9:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5371:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5379:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5387:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5395:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5406:4:23","type":""}],"src":"5230:447:23"},{"body":{"nodeType":"YulBlock","src":"5714:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5731:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5738:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5743:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5734:3:23"},"nodeType":"YulFunctionCall","src":"5734:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5724:6:23"},"nodeType":"YulFunctionCall","src":"5724:31:23"},"nodeType":"YulExpressionStatement","src":"5724:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5771:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5774:4:23","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5764:6:23"},"nodeType":"YulFunctionCall","src":"5764:15:23"},"nodeType":"YulExpressionStatement","src":"5764:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5795:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5798:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5788:6:23"},"nodeType":"YulFunctionCall","src":"5788:15:23"},"nodeType":"YulExpressionStatement","src":"5788:15:23"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"5682:127:23"},{"body":{"nodeType":"YulBlock","src":"5846:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5863:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5870:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5875:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5866:3:23"},"nodeType":"YulFunctionCall","src":"5866:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5856:6:23"},"nodeType":"YulFunctionCall","src":"5856:31:23"},"nodeType":"YulExpressionStatement","src":"5856:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5903:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5906:4:23","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5896:6:23"},"nodeType":"YulFunctionCall","src":"5896:15:23"},"nodeType":"YulExpressionStatement","src":"5896:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5927:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5930:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5920:6:23"},"nodeType":"YulFunctionCall","src":"5920:15:23"},"nodeType":"YulExpressionStatement","src":"5920:15:23"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"5814:127:23"},{"body":{"nodeType":"YulBlock","src":"5994:77:23","statements":[{"nodeType":"YulAssignment","src":"6004:16:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6015:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"6018:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6011:3:23"},"nodeType":"YulFunctionCall","src":"6011:9:23"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6004:3:23"}]},{"body":{"nodeType":"YulBlock","src":"6043:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6045:16:23"},"nodeType":"YulFunctionCall","src":"6045:18:23"},"nodeType":"YulExpressionStatement","src":"6045:18:23"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6035:1:23"},{"name":"sum","nodeType":"YulIdentifier","src":"6038:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6032:2:23"},"nodeType":"YulFunctionCall","src":"6032:10:23"},"nodeType":"YulIf","src":"6029:36:23"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5977:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"5980:1:23","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"5986:3:23","type":""}],"src":"5946:125:23"},{"body":{"nodeType":"YulBlock","src":"6123:88:23","statements":[{"body":{"nodeType":"YulBlock","src":"6154:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6156:16:23"},"nodeType":"YulFunctionCall","src":"6156:18:23"},"nodeType":"YulExpressionStatement","src":"6156:18:23"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6139:5:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6150:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6146:3:23"},"nodeType":"YulFunctionCall","src":"6146:6:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6136:2:23"},"nodeType":"YulFunctionCall","src":"6136:17:23"},"nodeType":"YulIf","src":"6133:43:23"},{"nodeType":"YulAssignment","src":"6185:20:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6196:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"6203:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6192:3:23"},"nodeType":"YulFunctionCall","src":"6192:13:23"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6185:3:23"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6105:5:23","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6115:3:23","type":""}],"src":"6076:135:23"},{"body":{"nodeType":"YulBlock","src":"6268:116:23","statements":[{"nodeType":"YulAssignment","src":"6278:20:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6293:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"6296:1:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6289:3:23"},"nodeType":"YulFunctionCall","src":"6289:9:23"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"6278:7:23"}]},{"body":{"nodeType":"YulBlock","src":"6356:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6358:16:23"},"nodeType":"YulFunctionCall","src":"6358:18:23"},"nodeType":"YulExpressionStatement","src":"6358:18:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6327:1:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6320:6:23"},"nodeType":"YulFunctionCall","src":"6320:9:23"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6334:1:23"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"6341:7:23"},{"name":"x","nodeType":"YulIdentifier","src":"6350:1:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6337:3:23"},"nodeType":"YulFunctionCall","src":"6337:15:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6331:2:23"},"nodeType":"YulFunctionCall","src":"6331:22:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6317:2:23"},"nodeType":"YulFunctionCall","src":"6317:37:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6310:6:23"},"nodeType":"YulFunctionCall","src":"6310:45:23"},"nodeType":"YulIf","src":"6307:71:23"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6247:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"6250:1:23","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"6256:7:23","type":""}],"src":"6216:168:23"},{"body":{"nodeType":"YulBlock","src":"6421:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6438:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6445:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6450:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6441:3:23"},"nodeType":"YulFunctionCall","src":"6441:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6431:6:23"},"nodeType":"YulFunctionCall","src":"6431:31:23"},"nodeType":"YulExpressionStatement","src":"6431:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6478:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6481:4:23","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6471:6:23"},"nodeType":"YulFunctionCall","src":"6471:15:23"},"nodeType":"YulExpressionStatement","src":"6471:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6502:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6505:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6495:6:23"},"nodeType":"YulFunctionCall","src":"6495:15:23"},"nodeType":"YulExpressionStatement","src":"6495:15:23"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"6389:127:23"},{"body":{"nodeType":"YulBlock","src":"6567:74:23","statements":[{"body":{"nodeType":"YulBlock","src":"6590:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"6592:16:23"},"nodeType":"YulFunctionCall","src":"6592:18:23"},"nodeType":"YulExpressionStatement","src":"6592:18:23"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6587:1:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6580:6:23"},"nodeType":"YulFunctionCall","src":"6580:9:23"},"nodeType":"YulIf","src":"6577:35:23"},{"nodeType":"YulAssignment","src":"6621:14:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6630:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"6633:1:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6626:3:23"},"nodeType":"YulFunctionCall","src":"6626:9:23"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6621:1:23"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6552:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"6555:1:23","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"6561:1:23","type":""}],"src":"6521:120:23"},{"body":{"nodeType":"YulBlock","src":"6710:358:23","statements":[{"nodeType":"YulVariableDeclaration","src":"6720:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"6735:1:23","type":"","value":"1"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"6724:7:23","type":""}]},{"nodeType":"YulAssignment","src":"6745:16:23","value":{"name":"power_1","nodeType":"YulIdentifier","src":"6754:7:23"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"6745:5:23"}]},{"nodeType":"YulAssignment","src":"6770:13:23","value":{"name":"_base","nodeType":"YulIdentifier","src":"6778:5:23"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"6770:4:23"}]},{"body":{"nodeType":"YulBlock","src":"6834:228:23","statements":[{"body":{"nodeType":"YulBlock","src":"6879:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6881:16:23"},"nodeType":"YulFunctionCall","src":"6881:18:23"},"nodeType":"YulExpressionStatement","src":"6881:18:23"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"6854:4:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6868:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6864:3:23"},"nodeType":"YulFunctionCall","src":"6864:6:23"},{"name":"base","nodeType":"YulIdentifier","src":"6872:4:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6860:3:23"},"nodeType":"YulFunctionCall","src":"6860:17:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6851:2:23"},"nodeType":"YulFunctionCall","src":"6851:27:23"},"nodeType":"YulIf","src":"6848:53:23"},{"body":{"nodeType":"YulBlock","src":"6940:29:23","statements":[{"nodeType":"YulAssignment","src":"6942:25:23","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"6955:5:23"},{"name":"base","nodeType":"YulIdentifier","src":"6962:4:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6951:3:23"},"nodeType":"YulFunctionCall","src":"6951:16:23"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"6942:5:23"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"6921:8:23"},{"name":"power_1","nodeType":"YulIdentifier","src":"6931:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6917:3:23"},"nodeType":"YulFunctionCall","src":"6917:22:23"},"nodeType":"YulIf","src":"6914:55:23"},{"nodeType":"YulAssignment","src":"6982:23:23","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"6994:4:23"},{"name":"base","nodeType":"YulIdentifier","src":"7000:4:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6990:3:23"},"nodeType":"YulFunctionCall","src":"6990:15:23"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"6982:4:23"}]},{"nodeType":"YulAssignment","src":"7018:34:23","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"7034:7:23"},{"name":"exponent","nodeType":"YulIdentifier","src":"7043:8:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7030:3:23"},"nodeType":"YulFunctionCall","src":"7030:22:23"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"7018:8:23"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"6803:8:23"},{"name":"power_1","nodeType":"YulIdentifier","src":"6813:7:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6800:2:23"},"nodeType":"YulFunctionCall","src":"6800:21:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6822:3:23","statements":[]},"pre":{"nodeType":"YulBlock","src":"6796:3:23","statements":[]},"src":"6792:270:23"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nodeType":"YulTypedName","src":"6674:5:23","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"6681:8:23","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"6694:5:23","type":""},{"name":"base","nodeType":"YulTypedName","src":"6701:4:23","type":""}],"src":"6646:422:23"},{"body":{"nodeType":"YulBlock","src":"7132:747:23","statements":[{"body":{"nodeType":"YulBlock","src":"7170:52:23","statements":[{"nodeType":"YulAssignment","src":"7184:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"7193:1:23","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"7184:5:23"}]},{"nodeType":"YulLeave","src":"7207:5:23"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"7152:8:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7145:6:23"},"nodeType":"YulFunctionCall","src":"7145:16:23"},"nodeType":"YulIf","src":"7142:80:23"},{"body":{"nodeType":"YulBlock","src":"7255:52:23","statements":[{"nodeType":"YulAssignment","src":"7269:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"7278:1:23","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"7269:5:23"}]},{"nodeType":"YulLeave","src":"7292:5:23"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"7241:4:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7234:6:23"},"nodeType":"YulFunctionCall","src":"7234:12:23"},"nodeType":"YulIf","src":"7231:76:23"},{"cases":[{"body":{"nodeType":"YulBlock","src":"7343:52:23","statements":[{"nodeType":"YulAssignment","src":"7357:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"7366:1:23","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"7357:5:23"}]},{"nodeType":"YulLeave","src":"7380:5:23"}]},"nodeType":"YulCase","src":"7336:59:23","value":{"kind":"number","nodeType":"YulLiteral","src":"7341:1:23","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"7411:123:23","statements":[{"body":{"nodeType":"YulBlock","src":"7446:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7448:16:23"},"nodeType":"YulFunctionCall","src":"7448:18:23"},"nodeType":"YulExpressionStatement","src":"7448:18:23"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"7431:8:23"},{"kind":"number","nodeType":"YulLiteral","src":"7441:3:23","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7428:2:23"},"nodeType":"YulFunctionCall","src":"7428:17:23"},"nodeType":"YulIf","src":"7425:43:23"},{"nodeType":"YulAssignment","src":"7481:25:23","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"7494:8:23"},{"kind":"number","nodeType":"YulLiteral","src":"7504:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7490:3:23"},"nodeType":"YulFunctionCall","src":"7490:16:23"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"7481:5:23"}]},{"nodeType":"YulLeave","src":"7519:5:23"}]},"nodeType":"YulCase","src":"7404:130:23","value":{"kind":"number","nodeType":"YulLiteral","src":"7409:1:23","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"7323:4:23"},"nodeType":"YulSwitch","src":"7316:218:23"},{"body":{"nodeType":"YulBlock","src":"7632:70:23","statements":[{"nodeType":"YulAssignment","src":"7646:28:23","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"7659:4:23"},{"name":"exponent","nodeType":"YulIdentifier","src":"7665:8:23"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"7655:3:23"},"nodeType":"YulFunctionCall","src":"7655:19:23"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"7646:5:23"}]},{"nodeType":"YulLeave","src":"7687:5:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"7556:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"7562:2:23","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7553:2:23"},"nodeType":"YulFunctionCall","src":"7553:12:23"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"7570:8:23"},{"kind":"number","nodeType":"YulLiteral","src":"7580:2:23","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7567:2:23"},"nodeType":"YulFunctionCall","src":"7567:16:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7549:3:23"},"nodeType":"YulFunctionCall","src":"7549:35:23"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"7593:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"7599:3:23","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7590:2:23"},"nodeType":"YulFunctionCall","src":"7590:13:23"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"7608:8:23"},{"kind":"number","nodeType":"YulLiteral","src":"7618:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7605:2:23"},"nodeType":"YulFunctionCall","src":"7605:16:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7586:3:23"},"nodeType":"YulFunctionCall","src":"7586:36:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7546:2:23"},"nodeType":"YulFunctionCall","src":"7546:77:23"},"nodeType":"YulIf","src":"7543:159:23"},{"nodeType":"YulVariableDeclaration","src":"7711:57:23","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"7753:4:23"},{"name":"exponent","nodeType":"YulIdentifier","src":"7759:8:23"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"7734:18:23"},"nodeType":"YulFunctionCall","src":"7734:34:23"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"7715:7:23","type":""},{"name":"base_1","nodeType":"YulTypedName","src":"7724:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"7813:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7815:16:23"},"nodeType":"YulFunctionCall","src":"7815:18:23"},"nodeType":"YulExpressionStatement","src":"7815:18:23"}]},"condition":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"7783:7:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7800:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7796:3:23"},"nodeType":"YulFunctionCall","src":"7796:6:23"},{"name":"base_1","nodeType":"YulIdentifier","src":"7804:6:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7792:3:23"},"nodeType":"YulFunctionCall","src":"7792:19:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7780:2:23"},"nodeType":"YulFunctionCall","src":"7780:32:23"},"nodeType":"YulIf","src":"7777:58:23"},{"nodeType":"YulAssignment","src":"7844:29:23","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"7857:7:23"},{"name":"base_1","nodeType":"YulIdentifier","src":"7866:6:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7853:3:23"},"nodeType":"YulFunctionCall","src":"7853:20:23"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"7844:5:23"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"7103:4:23","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"7109:8:23","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"7122:5:23","type":""}],"src":"7073:806:23"},{"body":{"nodeType":"YulBlock","src":"7952:72:23","statements":[{"nodeType":"YulAssignment","src":"7962:56:23","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"7992:4:23"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"8002:8:23"},{"kind":"number","nodeType":"YulLiteral","src":"8012:4:23","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7998:3:23"},"nodeType":"YulFunctionCall","src":"7998:19:23"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"7971:20:23"},"nodeType":"YulFunctionCall","src":"7971:47:23"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"7962:5:23"}]}]},"name":"checked_exp_t_uint256_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"7923:4:23","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"7929:8:23","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"7942:5:23","type":""}],"src":"7884:140:23"},{"body":{"nodeType":"YulBlock","src":"8109:200:23","statements":[{"body":{"nodeType":"YulBlock","src":"8155:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8164:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8167:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8157:6:23"},"nodeType":"YulFunctionCall","src":"8157:12:23"},"nodeType":"YulExpressionStatement","src":"8157:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8130:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"8139:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8126:3:23"},"nodeType":"YulFunctionCall","src":"8126:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"8151:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8122:3:23"},"nodeType":"YulFunctionCall","src":"8122:32:23"},"nodeType":"YulIf","src":"8119:52:23"},{"nodeType":"YulVariableDeclaration","src":"8180:29:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8199:9:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8193:5:23"},"nodeType":"YulFunctionCall","src":"8193:16:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8184:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"8263:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8272:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8275:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8265:6:23"},"nodeType":"YulFunctionCall","src":"8265:12:23"},"nodeType":"YulExpressionStatement","src":"8265:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8231:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8242:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"8249:10:23","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8238:3:23"},"nodeType":"YulFunctionCall","src":"8238:22:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8228:2:23"},"nodeType":"YulFunctionCall","src":"8228:33:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8221:6:23"},"nodeType":"YulFunctionCall","src":"8221:41:23"},"nodeType":"YulIf","src":"8218:61:23"},{"nodeType":"YulAssignment","src":"8288:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"8298:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8288:6:23"}]}]},"name":"abi_decode_tuple_t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8075:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8086:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8098:6:23","type":""}],"src":"8029:280:23"},{"body":{"nodeType":"YulBlock","src":"8346:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8363:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8370:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8375:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8366:3:23"},"nodeType":"YulFunctionCall","src":"8366:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8356:6:23"},"nodeType":"YulFunctionCall","src":"8356:31:23"},"nodeType":"YulExpressionStatement","src":"8356:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8403:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8406:4:23","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8396:6:23"},"nodeType":"YulFunctionCall","src":"8396:15:23"},"nodeType":"YulExpressionStatement","src":"8396:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8427:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8430:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8420:6:23"},"nodeType":"YulFunctionCall","src":"8420:15:23"},"nodeType":"YulExpressionStatement","src":"8420:15:23"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"8314:127:23"},{"body":{"nodeType":"YulBlock","src":"8620:171:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8637:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8648:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8630:6:23"},"nodeType":"YulFunctionCall","src":"8630:21:23"},"nodeType":"YulExpressionStatement","src":"8630:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8671:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8682:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8667:3:23"},"nodeType":"YulFunctionCall","src":"8667:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"8687:2:23","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8660:6:23"},"nodeType":"YulFunctionCall","src":"8660:30:23"},"nodeType":"YulExpressionStatement","src":"8660:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8710:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8721:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8706:3:23"},"nodeType":"YulFunctionCall","src":"8706:18:23"},{"hexValue":"556e737570706f727465642066656520746f6b656e","kind":"string","nodeType":"YulLiteral","src":"8726:23:23","type":"","value":"Unsupported fee token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8699:6:23"},"nodeType":"YulFunctionCall","src":"8699:51:23"},"nodeType":"YulExpressionStatement","src":"8699:51:23"},{"nodeType":"YulAssignment","src":"8759:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8771:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8782:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8767:3:23"},"nodeType":"YulFunctionCall","src":"8767:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8759:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_feab262476110b6da19dad5f74ffa5fc85a39886ca1e6c4c3619a320fb4c8b10__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8597:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8611:4:23","type":""}],"src":"8446:345:23"},{"body":{"nodeType":"YulBlock","src":"8855:120:23","statements":[{"nodeType":"YulAssignment","src":"8865:22:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8880:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8874:5:23"},"nodeType":"YulFunctionCall","src":"8874:13:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8865:5:23"}]},{"body":{"nodeType":"YulBlock","src":"8953:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8962:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8965:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8955:6:23"},"nodeType":"YulFunctionCall","src":"8955:12:23"},"nodeType":"YulExpressionStatement","src":"8955:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8909:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8920:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"8927:22:23","type":"","value":"0xffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8916:3:23"},"nodeType":"YulFunctionCall","src":"8916:34:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8906:2:23"},"nodeType":"YulFunctionCall","src":"8906:45:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8899:6:23"},"nodeType":"YulFunctionCall","src":"8899:53:23"},"nodeType":"YulIf","src":"8896:73:23"}]},"name":"abi_decode_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8834:6:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8845:5:23","type":""}],"src":"8796:179:23"},{"body":{"nodeType":"YulBlock","src":"9126:327:23","statements":[{"body":{"nodeType":"YulBlock","src":"9173:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9182:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9185:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9175:6:23"},"nodeType":"YulFunctionCall","src":"9175:12:23"},"nodeType":"YulExpressionStatement","src":"9175:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9147:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"9156:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9143:3:23"},"nodeType":"YulFunctionCall","src":"9143:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"9168:3:23","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9139:3:23"},"nodeType":"YulFunctionCall","src":"9139:33:23"},"nodeType":"YulIf","src":"9136:53:23"},{"nodeType":"YulAssignment","src":"9198:49:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9237:9:23"}],"functionName":{"name":"abi_decode_uint80_fromMemory","nodeType":"YulIdentifier","src":"9208:28:23"},"nodeType":"YulFunctionCall","src":"9208:39:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9198:6:23"}]},{"nodeType":"YulAssignment","src":"9256:35:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9276:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9287:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9272:3:23"},"nodeType":"YulFunctionCall","src":"9272:18:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9266:5:23"},"nodeType":"YulFunctionCall","src":"9266:25:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9256:6:23"}]},{"nodeType":"YulAssignment","src":"9300:35:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9320:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9331:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9316:3:23"},"nodeType":"YulFunctionCall","src":"9316:18:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9310:5:23"},"nodeType":"YulFunctionCall","src":"9310:25:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9300:6:23"}]},{"nodeType":"YulAssignment","src":"9344:35:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9364:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9375:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9360:3:23"},"nodeType":"YulFunctionCall","src":"9360:18:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9354:5:23"},"nodeType":"YulFunctionCall","src":"9354:25:23"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9344:6:23"}]},{"nodeType":"YulAssignment","src":"9388:59:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9431:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9442:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9427:3:23"},"nodeType":"YulFunctionCall","src":"9427:19:23"}],"functionName":{"name":"abi_decode_uint80_fromMemory","nodeType":"YulIdentifier","src":"9398:28:23"},"nodeType":"YulFunctionCall","src":"9398:49:23"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"9388:6:23"}]}]},"name":"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9060:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9071:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9083:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9091:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9099:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9107:6:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9115:6:23","type":""}],"src":"8980:473:23"},{"body":{"nodeType":"YulBlock","src":"9632:173:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9649:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9660:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9642:6:23"},"nodeType":"YulFunctionCall","src":"9642:21:23"},"nodeType":"YulExpressionStatement","src":"9642:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9683:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9694:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9679:3:23"},"nodeType":"YulFunctionCall","src":"9679:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"9699:2:23","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9672:6:23"},"nodeType":"YulFunctionCall","src":"9672:30:23"},"nodeType":"YulExpressionStatement","src":"9672:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9722:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9733:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9718:3:23"},"nodeType":"YulFunctionCall","src":"9718:18:23"},{"hexValue":"4e6f207072696365206461746120617661696c61626c65","kind":"string","nodeType":"YulLiteral","src":"9738:25:23","type":"","value":"No price data available"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9711:6:23"},"nodeType":"YulFunctionCall","src":"9711:53:23"},"nodeType":"YulExpressionStatement","src":"9711:53:23"},{"nodeType":"YulAssignment","src":"9773:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9785:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9796:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9781:3:23"},"nodeType":"YulFunctionCall","src":"9781:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9773:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_4b0df79b6cb2496d5d4d34caf2e75280779b90d3c442f3e9e91afd6e516af648__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9609:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9623:4:23","type":""}],"src":"9458:347:23"},{"body":{"nodeType":"YulBlock","src":"9859:79:23","statements":[{"nodeType":"YulAssignment","src":"9869:17:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9881:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"9884:1:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9877:3:23"},"nodeType":"YulFunctionCall","src":"9877:9:23"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"9869:4:23"}]},{"body":{"nodeType":"YulBlock","src":"9910:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9912:16:23"},"nodeType":"YulFunctionCall","src":"9912:18:23"},"nodeType":"YulExpressionStatement","src":"9912:18:23"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"9901:4:23"},{"name":"x","nodeType":"YulIdentifier","src":"9907:1:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9898:2:23"},"nodeType":"YulFunctionCall","src":"9898:11:23"},"nodeType":"YulIf","src":"9895:37:23"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9841:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"9844:1:23","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"9850:4:23","type":""}],"src":"9810:128:23"},{"body":{"nodeType":"YulBlock","src":"10117:166:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10134:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10145:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10127:6:23"},"nodeType":"YulFunctionCall","src":"10127:21:23"},"nodeType":"YulExpressionStatement","src":"10127:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10168:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10179:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10164:3:23"},"nodeType":"YulFunctionCall","src":"10164:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"10184:2:23","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10157:6:23"},"nodeType":"YulFunctionCall","src":"10157:30:23"},"nodeType":"YulExpressionStatement","src":"10157:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10207:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10218:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10203:3:23"},"nodeType":"YulFunctionCall","src":"10203:18:23"},{"hexValue":"5374616c652070726963652064617461","kind":"string","nodeType":"YulLiteral","src":"10223:18:23","type":"","value":"Stale price data"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10196:6:23"},"nodeType":"YulFunctionCall","src":"10196:46:23"},"nodeType":"YulExpressionStatement","src":"10196:46:23"},{"nodeType":"YulAssignment","src":"10251:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10263:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10274:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10259:3:23"},"nodeType":"YulFunctionCall","src":"10259:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10251:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_2ca421925c4941a3397518dad13c20d3418010081598deda6cc2f02a05282c33__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10094:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10108:4:23","type":""}],"src":"9943:340:23"},{"body":{"nodeType":"YulBlock","src":"10326:74:23","statements":[{"body":{"nodeType":"YulBlock","src":"10349:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"10351:16:23"},"nodeType":"YulFunctionCall","src":"10351:18:23"},"nodeType":"YulExpressionStatement","src":"10351:18:23"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"10346:1:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10339:6:23"},"nodeType":"YulFunctionCall","src":"10339:9:23"},"nodeType":"YulIf","src":"10336:35:23"},{"nodeType":"YulAssignment","src":"10380:14:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10389:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"10392:1:23"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"10385:3:23"},"nodeType":"YulFunctionCall","src":"10385:9:23"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"10380:1:23"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10311:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"10314:1:23","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"10320:1:23","type":""}],"src":"10288:112:23"},{"body":{"nodeType":"YulBlock","src":"10483:199:23","statements":[{"body":{"nodeType":"YulBlock","src":"10529:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10538:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10541:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10531:6:23"},"nodeType":"YulFunctionCall","src":"10531:12:23"},"nodeType":"YulExpressionStatement","src":"10531:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10504:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"10513:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10500:3:23"},"nodeType":"YulFunctionCall","src":"10500:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"10525:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10496:3:23"},"nodeType":"YulFunctionCall","src":"10496:32:23"},"nodeType":"YulIf","src":"10493:52:23"},{"nodeType":"YulVariableDeclaration","src":"10554:29:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10573:9:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10567:5:23"},"nodeType":"YulFunctionCall","src":"10567:16:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10558:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"10636:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10645:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10648:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10638:6:23"},"nodeType":"YulFunctionCall","src":"10638:12:23"},"nodeType":"YulExpressionStatement","src":"10638:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10605:5:23"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10626:5:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10619:6:23"},"nodeType":"YulFunctionCall","src":"10619:13:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10612:6:23"},"nodeType":"YulFunctionCall","src":"10612:21:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10602:2:23"},"nodeType":"YulFunctionCall","src":"10602:32:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10595:6:23"},"nodeType":"YulFunctionCall","src":"10595:40:23"},"nodeType":"YulIf","src":"10592:60:23"},{"nodeType":"YulAssignment","src":"10661:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"10671:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10661:6:23"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10449:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10460:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10472:6:23","type":""}],"src":"10405:277:23"},{"body":{"nodeType":"YulBlock","src":"10861:232:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10878:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10889:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10871:6:23"},"nodeType":"YulFunctionCall","src":"10871:21:23"},"nodeType":"YulExpressionStatement","src":"10871:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10912:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10923:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10908:3:23"},"nodeType":"YulFunctionCall","src":"10908:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"10928:2:23","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10901:6:23"},"nodeType":"YulFunctionCall","src":"10901:30:23"},"nodeType":"YulExpressionStatement","src":"10901:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10951:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10962:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10947:3:23"},"nodeType":"YulFunctionCall","src":"10947:18:23"},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e","kind":"string","nodeType":"YulLiteral","src":"10967:34:23","type":"","value":"SafeERC20: ERC20 operation did n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10940:6:23"},"nodeType":"YulFunctionCall","src":"10940:62:23"},"nodeType":"YulExpressionStatement","src":"10940:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11022:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11033:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11018:3:23"},"nodeType":"YulFunctionCall","src":"11018:18:23"},{"hexValue":"6f742073756363656564","kind":"string","nodeType":"YulLiteral","src":"11038:12:23","type":"","value":"ot succeed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11011:6:23"},"nodeType":"YulFunctionCall","src":"11011:40:23"},"nodeType":"YulExpressionStatement","src":"11011:40:23"},{"nodeType":"YulAssignment","src":"11060:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11072:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11083:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11068:3:23"},"nodeType":"YulFunctionCall","src":"11068:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11060:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10838:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10852:4:23","type":""}],"src":"10687:406:23"},{"body":{"nodeType":"YulBlock","src":"11272:228:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11289:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11300:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11282:6:23"},"nodeType":"YulFunctionCall","src":"11282:21:23"},"nodeType":"YulExpressionStatement","src":"11282:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11323:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11334:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11319:3:23"},"nodeType":"YulFunctionCall","src":"11319:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"11339:2:23","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11312:6:23"},"nodeType":"YulFunctionCall","src":"11312:30:23"},"nodeType":"YulExpressionStatement","src":"11312:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11362:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11373:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11358:3:23"},"nodeType":"YulFunctionCall","src":"11358:18:23"},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"11378:34:23","type":"","value":"Address: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11351:6:23"},"nodeType":"YulFunctionCall","src":"11351:62:23"},"nodeType":"YulExpressionStatement","src":"11351:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11433:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11444:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11429:3:23"},"nodeType":"YulFunctionCall","src":"11429:18:23"},{"hexValue":"722063616c6c","kind":"string","nodeType":"YulLiteral","src":"11449:8:23","type":"","value":"r call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11422:6:23"},"nodeType":"YulFunctionCall","src":"11422:36:23"},"nodeType":"YulExpressionStatement","src":"11422:36:23"},{"nodeType":"YulAssignment","src":"11467:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11479:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11490:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11475:3:23"},"nodeType":"YulFunctionCall","src":"11475:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11467:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11249:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11263:4:23","type":""}],"src":"11098:402:23"},{"body":{"nodeType":"YulBlock","src":"11571:184:23","statements":[{"nodeType":"YulVariableDeclaration","src":"11581:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"11590:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11585:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"11650:63:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11675:3:23"},{"name":"i","nodeType":"YulIdentifier","src":"11680:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11671:3:23"},"nodeType":"YulFunctionCall","src":"11671:11:23"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11694:3:23"},{"name":"i","nodeType":"YulIdentifier","src":"11699:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11690:3:23"},"nodeType":"YulFunctionCall","src":"11690:11:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11684:5:23"},"nodeType":"YulFunctionCall","src":"11684:18:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11664:6:23"},"nodeType":"YulFunctionCall","src":"11664:39:23"},"nodeType":"YulExpressionStatement","src":"11664:39:23"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11611:1:23"},{"name":"length","nodeType":"YulIdentifier","src":"11614:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11608:2:23"},"nodeType":"YulFunctionCall","src":"11608:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11622:19:23","statements":[{"nodeType":"YulAssignment","src":"11624:15:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11633:1:23"},{"kind":"number","nodeType":"YulLiteral","src":"11636:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11629:3:23"},"nodeType":"YulFunctionCall","src":"11629:10:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11624:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"11604:3:23","statements":[]},"src":"11600:113:23"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11733:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"11738:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11729:3:23"},"nodeType":"YulFunctionCall","src":"11729:16:23"},{"kind":"number","nodeType":"YulLiteral","src":"11747:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11722:6:23"},"nodeType":"YulFunctionCall","src":"11722:27:23"},"nodeType":"YulExpressionStatement","src":"11722:27:23"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"11549:3:23","type":""},{"name":"dst","nodeType":"YulTypedName","src":"11554:3:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"11559:6:23","type":""}],"src":"11505:250:23"},{"body":{"nodeType":"YulBlock","src":"11897:150:23","statements":[{"nodeType":"YulVariableDeclaration","src":"11907:27:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11927:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11921:5:23"},"nodeType":"YulFunctionCall","src":"11921:13:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11911:6:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11982:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"11990:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11978:3:23"},"nodeType":"YulFunctionCall","src":"11978:17:23"},{"name":"pos","nodeType":"YulIdentifier","src":"11997:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"12002:6:23"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"11943:34:23"},"nodeType":"YulFunctionCall","src":"11943:66:23"},"nodeType":"YulExpressionStatement","src":"11943:66:23"},{"nodeType":"YulAssignment","src":"12018:23:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12029:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"12034:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12025:3:23"},"nodeType":"YulFunctionCall","src":"12025:16:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12018:3:23"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11873:3:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11878:6:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11889:3:23","type":""}],"src":"11760:287:23"},{"body":{"nodeType":"YulBlock","src":"12226:179:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12243:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"12254:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12236:6:23"},"nodeType":"YulFunctionCall","src":"12236:21:23"},"nodeType":"YulExpressionStatement","src":"12236:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12277:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"12288:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12273:3:23"},"nodeType":"YulFunctionCall","src":"12273:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"12293:2:23","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12266:6:23"},"nodeType":"YulFunctionCall","src":"12266:30:23"},"nodeType":"YulExpressionStatement","src":"12266:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12316:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"12327:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12312:3:23"},"nodeType":"YulFunctionCall","src":"12312:18:23"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"12332:31:23","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12305:6:23"},"nodeType":"YulFunctionCall","src":"12305:59:23"},"nodeType":"YulExpressionStatement","src":"12305:59:23"},{"nodeType":"YulAssignment","src":"12373:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12385:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"12396:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12381:3:23"},"nodeType":"YulFunctionCall","src":"12381:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12373:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12203:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12217:4:23","type":""}],"src":"12052:353:23"},{"body":{"nodeType":"YulBlock","src":"12531:275:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12548:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"12559:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12541:6:23"},"nodeType":"YulFunctionCall","src":"12541:21:23"},"nodeType":"YulExpressionStatement","src":"12541:21:23"},{"nodeType":"YulVariableDeclaration","src":"12571:27:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12591:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12585:5:23"},"nodeType":"YulFunctionCall","src":"12585:13:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12575:6:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12618:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"12629:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12614:3:23"},"nodeType":"YulFunctionCall","src":"12614:18:23"},{"name":"length","nodeType":"YulIdentifier","src":"12634:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12607:6:23"},"nodeType":"YulFunctionCall","src":"12607:34:23"},"nodeType":"YulExpressionStatement","src":"12607:34:23"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12689:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"12697:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12685:3:23"},"nodeType":"YulFunctionCall","src":"12685:15:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12706:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"12717:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12702:3:23"},"nodeType":"YulFunctionCall","src":"12702:18:23"},{"name":"length","nodeType":"YulIdentifier","src":"12722:6:23"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"12650:34:23"},"nodeType":"YulFunctionCall","src":"12650:79:23"},"nodeType":"YulExpressionStatement","src":"12650:79:23"},{"nodeType":"YulAssignment","src":"12738:62:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12754:9:23"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12773:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"12781:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12769:3:23"},"nodeType":"YulFunctionCall","src":"12769:15:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12790:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12786:3:23"},"nodeType":"YulFunctionCall","src":"12786:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12765:3:23"},"nodeType":"YulFunctionCall","src":"12765:29:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12750:3:23"},"nodeType":"YulFunctionCall","src":"12750:45:23"},{"kind":"number","nodeType":"YulLiteral","src":"12797:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12746:3:23"},"nodeType":"YulFunctionCall","src":"12746:54:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12738:4:23"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12500:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12511:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12522:4:23","type":""}],"src":"12410:396:23"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_AssetInfo_$1830_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_AssetInfo_$1830_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            mstore(pos, and(mload(_3), sub(shl(160, 1), 1)))\n            mstore(add(pos, _1), mload(add(_3, _1)))\n            mstore(add(pos, _2), mload(add(_3, _2)))\n            let _4 := 0x60\n            mstore(add(pos, _4), mload(add(_3, _4)))\n            pos := add(pos, 0x80)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_contract$_V1MigrationTarget_$1982(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Unauthorized\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_1e96b07ad2fe138b3a0142201e6de920a5bbc80c056562ed599dfe58fbb366bd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Insufficient DXBL balance to red\")\n        mstore(add(headStart, 96), \"eem\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_97744ca51cd6470aee5efe27d387a8940a50b552052552cdf56a25576fc02561__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 62)\n        mstore(add(headStart, 64), \"Insufficient asset balance to pr\")\n        mstore(add(headStart, 96), \"oduce expected withdraw amount\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function abi_decode_tuple_t_uint32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_feab262476110b6da19dad5f74ffa5fc85a39886ca1e6c4c3619a320fb4c8b10__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Unsupported fee token\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_4b0df79b6cb2496d5d4d34caf2e75280779b90d3c442f3e9e91afd6e516af648__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"No price data available\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_2ca421925c4941a3397518dad13c20d3418010081598deda6cc2f02a05282c33__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Stale price data\")\n        tail := add(headStart, 96)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}","id":23,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061014d5760003560e01c80636162cb91116100c35780638456cb591161007c5780638456cb591461025e578063a74aa56614610266578063ab1094c01461026e578063c76380b714610281578063ce25cb4d14610292578063f7406fc3146102a557600080fd5b80636162cb911461020157806365a1f3c3146102095780636c1f56331461022657806371a973051461022e5780637262f55714610243578063821314701461025657600080fd5b806341b5774a1161011557806341b5774a146101b657806345c6a874146101be57806356168843146101c65780635c975abb146101ce5780635d204718146101e65780635de11890146101f957600080fd5b8063046f7da21461015257806317fcb39b1461015c57806318ac3b151461017a57806320529bb11461018d5780633931f45d146101a3575b600080fd5b61015a6102b8565b005b610164610312565b6040516101719190611967565b60405180910390f35b61015a610188366004611990565b61032e565b6101956105e6565b604051908152602001610171565b6101956101b13660046119c5565b6106e2565b610195610801565b61016461087c565b61019561089a565b6101d66108ad565b6040519015158152602001610171565b6101d66101f43660046119f1565b6108c0565b6101956108f3565b6101646109c0565b6102116109dc565b60405163ffffffff9091168152602001610171565b6102116109fc565b610236610a83565b6040516101719190611a0e565b6101956102513660046119c5565b610c77565b610195610d1a565b61015a610d2d565b610164610d81565b61015a61027c366004611a7b565b610d9d565b61015a61028f3660046119f1565b50565b6101956102a03660046119f1565b610f4d565b6101956102b33660046119c5565b610fcf565b60006102c261101c565b805490915061010090046001600160a01b031633146102fc5760405162461bcd60e51b81526004016102f390611abc565b60405180910390fd5b600061030661101c565b805460ff191690555050565b600061031c61101c565b600301546001600160a01b0316919050565b600061033861101c565b60018101546040516370a0823160e01b81529192506000916001600160a01b03909116906370a0823190610370903390600401611967565b602060405180830381865afa15801561038d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b19190611ae2565b90508381101561040f5760405162461bcd60e51b815260206004820152602360248201527f496e73756666696369656e74204458424c2062616c616e636520746f2072656460448201526265656d60e81b60648201526084016102f3565b600061041b8686610c77565b90506000866001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161044b9190611967565b602060405180830381865afa158015610468573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048c9190611ae2565b905080821115610513578481106104a557809150610513565b60405162461bcd60e51b815260206004820152603e60248201527f496e73756666696369656e742061737365742062616c616e636520746f20707260448201527f6f6475636520657870656374656420776974686472617720616d6f756e74000060648201526084016102f3565b6105276001600160a01b0388163384611040565b6001840154604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac9061055b9033908a90600401611afb565b600060405180830381600087803b15801561057557600080fd5b505af1158015610589573d6000803e3d6000fd5b505060408051338152602081018a90526001600160a01b038b16818301526060810186905290517f5fe85dc899e158274a44abab0e6df5434416f0ce11df30d42e02f229b8fc8a419350908190036080019150a150505050505050565b6000806105f161101c565b905060008160080180548060200260200160405190810160405280929190818152602001828054801561064d57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161062f575b5050505050905060005b81518110156106dc57600082828151811061067457610674611b14565b6020908102919091018101516001600160a01b03811660009081526026870190925260408220909250906106a78261109b565b905060006106b8878584600061120a565b5090506106c58189611b40565b975050505050806106d590611b53565b9050610657565b50505090565b6000806106ed61101c565b60038101549091506001600160a01b039081169085160361071157829150506107fb565b60038101546001600160a01b0316600090815260268201602052604081206107389061109b565b6001600160a01b038616600090815260268401602052604081209192509061075f9061109b565b905060008161077a68327cb2734119d3b7a9601e1b85611b6c565b6107849190611b99565b9050600068327cb2734119d3b7a9601e1b61079f8884611b6c565b6107a99190611b99565b6001600160a01b0389166000908152602587016020526040902054909150670de0b6b3a7640000906107df9060ff16600a611c91565b6107e99083611b6c565b6107f39190611b99565b955050505050505b92915050565b60008061080c61101c565b9050600064e8d4a5100082600501546108259190611b99565b905060008161ffff1683600901600101546108409190611b6c565b9050670de0b6b3a764000081846004015461085b9190611b6c565b6108659190611b99565b83600401546108749190611b40565b935050505090565b600061088661101c565b5461010090046001600160a01b0316919050565b60006108a461101c565b60040154905090565b60006108b761101c565b5460ff16919050565b6000806108cb61101c565b6001600160a01b03938416600090815260269091016020526040902054909216151592915050565b6000806108fe61101c565b905060008160010160009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610957573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097b9190611ae2565b905060006109876105e6565b9050811580610994575080155b156109a3576000935050505090565b816109b682670de0b6b3a7640000611b6c565b6108749190611b99565b60006109ca61101c565b600101546001600160a01b0316919050565b60006109e661101c565b60030154600160a01b900463ffffffff16919050565b6000610a0661101c565b60010160009054906101000a90046001600160a01b03166001600160a01b031663566826d16040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7e9190611ca0565b905090565b60606000610a8f61101c565b600881015490915067ffffffffffffffff811115610aaf57610aaf611cc6565b604051908082528060200260200182016040528015610b1457816020015b610b01604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b815260200190600190039081610acd5790505b50915060008082600801805480602002602001604051908101604052809291908181526020018280548015610b7257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610b54575b5050505050905060005b8151811015610c70576000828281518110610b9957610b99611b14565b6020908102919091018101516001600160a01b0381166000908152602688019092526040822090925090610bcc8261109b565b9050600080610bde898685600061120a565b915091506040518060800160405280866001600160a01b0316815260200182815260200183815260200168327cb2734119d3b7a9601e1b620f424086610c249190611b6c565b610c2e9190611b99565b8152508a8981518110610c4357610c43611b14565b602002602001018190525087610c5890611b53565b9750505050505080610c6990611b53565b9050610b7c565b5050505090565b600080610c8261101c565b90506000610c8e6108f3565b9050620f4240610caa68327cb2734119d3b7a9601e1b83611b6c565b610cb49190611b99565b90506000610cc186610f4d565b6001600160a01b038716600090815260258501602052604081205491925060ff9091169082610cf183600a611c91565b610cfb9086611b6c565b610d059190611b99565b9050670de0b6b3a76400006107e98289611b6c565b6000610d2461101c565b60050154905090565b6000610d3761101c565b805490915061010090046001600160a01b03163314610d685760405162461bcd60e51b81526004016102f390611abc565b6000610d7261101c565b805460ff191660011790555050565b6000610d8b61101c565b600201546001600160a01b0316919050565b6000610da761101c565b60028101549091506001600160a01b03163314610dd65760405162461bcd60e51b81526004016102f390611abc565b6000610de061101c565b60405163f7406fc360e01b8152909150600090309063f7406fc390610e0b9088908890600401611afb565b602060405180830381865afa158015610e28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4c9190611ae2565b90506000306001600160a01b03166341b5774a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb29190611ae2565b9050610ebd826112f5565b600081610ed284670de0b6b3a7640000611b6c565b610edc9190611b99565b60018501546040516340c10f1960e01b81529192506001600160a01b0316906340c10f1990610f11908b908590600401611afb565b600060405180830381600087803b158015610f2b57600080fd5b505af1158015610f3f573d6000803e3d6000fd5b505050505050505050505050565b600080610f5861101c565b6001600160a01b038085166000908152602683016020526040902080549293509116610fbe5760405162461bcd60e51b81526020600482015260156024820152742ab739bab83837b93a32b2103332b2903a37b5b2b760591b60448201526064016102f3565b610fc78161109b565b949350505050565b600080610fda61101c565b6001600160a01b038516600090815260268201602052604081209192506110008261109b565b905060006110108488848961120a565b50979650505050505050565b7fbfa76ec2967ed7f8d3d40cd552f1451ab03573b596bfce931a6a016f7733078c90565b6110968363a9059cbb60e01b848460405160240161105f929190611afb565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611416565b505050565b60008060008360000160009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156110f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111199190611cfb565b509350509250506000821361116a5760405162461bcd60e51b81526020600482015260176024820152764e6f207072696365206461746120617661696c61626c6560481b60448201526064016102f3565b600061025861117c6201518042611d4b565b6111869190611d4b565b90508082116111ca5760405162461bcd60e51b815260206004820152601060248201526f5374616c65207072696365206461746160801b60448201526064016102f3565b84546111e190600160a01b900460ff16600a611c91565b6111f768327cb2734119d3b7a9601e1b85611b6c565b6112019190611b99565b95945050505050565b600081808203611284576040516370a0823160e01b81526001600160a01b038616906370a0823190611240903090600401611967565b602060405180830381865afa15801561125d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112819190611ae2565b90505b620f42406112928583611b6c565b61129c9190611b6c565b6001600160a01b038616600090815260258801602052604090205490925068327cb2734119d3b7a9601e1b906112d69060ff16600a611c91565b6112e09190611b6c565b6112ea9083611b99565b915094509492505050565b60006112ff61101c565b6006810180544290915590915082811580159061132857506113246201518042611d4b565b8211155b156113405761133b600d84016000611944565b6113f1565b6000610e106113526201518042611d5e565b61135c9190611b99565b90506000601860018301069050600085600d01826018811061138057611380611b14565b01549050600086600d01836018811061139b5761139b611b14565b015586600d870184601881106113b3576113b3611b14565b0160008282546113c39190611b40565b909155505060058601546113d8908890611b40565b935080156113ed576113ea8185611d4b565b93505b5050505b600583018190556114108361140b64e8d4a5100084611b99565b6114e8565b50505050565b600061146b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166115529092919063ffffffff16565b80519091501561109657808060200190518101906114899190611d72565b6110965760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102f3565b60408051608081018252600984015461ffff808216835262010000909104811660208301819052600a86015493830193909352600b8501546060830152909190831610611539576110968383611561565b805161ffff808416911610611096576110968383611687565b6060610fc7848460008561179b565b60408051608081018252600984015461ffff808216835262010000909104166020820152600a84015491810191909152600b83015460608201525b6115a68183611876565b61163257600083600c01826060015160016115c19190611b40565b815481106115d1576115d1611b14565b9060005260206000209060030201905080600101546000036115f35750611632565b60408051608081018252825461ffff8082168352620100009091041660208201526001830154918101919091526002909101546060820152905061159c565b6040810151600a84015414611096578051600984018054602084015161ffff908116620100000263ffffffff199092169316929092179190911790556040810151600a8401556060810151600b840155505050565b60408051608081018252600984015461ffff808216835262010000909104166020820152600a84015491810191909152600b83015460608201525b6116cc8183611876565b6117545760608101511561175457600083600c01600183606001516116f19190611d4b565b8154811061170157611701611b14565b6000918252602091829020604080516080810182526003909302909101805461ffff8082168552620100009091041693830193909352600183015490820152600290910154606082015291506116c29050565b8051600984018054602084015161ffff908116620100000263ffffffff199092169316929092179190911790556040810151600a84015560600151600b9092019190915550565b6060824710156117fc5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016102f3565b600080866001600160a01b031685876040516118189190611db8565b60006040518083038185875af1925050503d8060008114611855576040519150601f19603f3d011682016040523d82523d6000602084013e61185a565b606091505b509150915061186b878383876118a6565b979650505050505050565b60008161ffff16836000015161ffff161115801561189f5750826020015161ffff168261ffff16105b9392505050565b6060831561191557825160000361190e576001600160a01b0385163b61190e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102f3565b5081610fc7565b610fc7838381511561192a5781518083602001fd5b8060405162461bcd60e51b81526004016102f39190611dd4565b5061028f9060188101905b80821115611963576000815560010161194f565b5090565b6001600160a01b0391909116815260200190565b6001600160a01b038116811461028f57600080fd5b6000806000606084860312156119a557600080fd5b83356119b08161197b565b95602085013595506040909401359392505050565b600080604083850312156119d857600080fd5b82356119e38161197b565b946020939093013593505050565b600060208284031215611a0357600080fd5b813561189f8161197b565b602080825282518282018190526000919060409081850190868401855b82811015611a6e57815180516001600160a01b03168552868101518786015285810151868601526060908101519085015260809093019290850190600101611a2b565b5091979650505050505050565b600080600060608486031215611a9057600080fd5b8335611a9b8161197b565b92506020840135611aab8161197b565b929592945050506040919091013590565b6020808252600c908201526b155b985d5d1a1bdc9a5e995960a21b604082015260600190565b600060208284031215611af457600080fd5b5051919050565b6001600160a01b03929092168252602082015260400190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156107fb576107fb611b2a565b600060018201611b6557611b65611b2a565b5060010190565b80820281158282048414176107fb576107fb611b2a565b634e487b7160e01b600052601260045260246000fd5b600082611ba857611ba8611b83565b500490565b600181815b80851115611be8578160001904821115611bce57611bce611b2a565b80851615611bdb57918102915b93841c9390800290611bb2565b509250929050565b600082611bff575060016107fb565b81611c0c575060006107fb565b8160018114611c225760028114611c2c57611c48565b60019150506107fb565b60ff841115611c3d57611c3d611b2a565b50506001821b6107fb565b5060208310610133831016604e8410600b8410161715611c6b575081810a6107fb565b611c758383611bad565b8060001904821115611c8957611c89611b2a565b029392505050565b600061189f60ff841683611bf0565b600060208284031215611cb257600080fd5b815163ffffffff8116811461189f57600080fd5b634e487b7160e01b600052604160045260246000fd5b805169ffffffffffffffffffff81168114611cf657600080fd5b919050565b600080600080600060a08688031215611d1357600080fd5b611d1c86611cdc565b9450602086015193506040860151925060608601519150611d3f60808701611cdc565b90509295509295909350565b818103818111156107fb576107fb611b2a565b600082611d6d57611d6d611b83565b500690565b600060208284031215611d8457600080fd5b8151801515811461189f57600080fd5b60005b83811015611daf578181015183820152602001611d97565b50506000910152565b60008251611dca818460208701611d94565b9190910192915050565b6020815260008251806020840152611df3816040850160208701611d94565b601f01601f1916919091016040019291505056fea26469706673582212206101120e3e1a8e9ed087dffe70b08277dfd2b47d53b88e9e2a9c6949c84efe6064736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6162CB91 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0x8456CB59 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xA74AA566 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0xAB1094C0 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xC76380B7 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xCE25CB4D EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xF7406FC3 EQ PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6162CB91 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x65A1F3C3 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x6C1F5633 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x71A97305 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x7262F557 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x82131470 EQ PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x41B5774A GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x41B5774A EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x45C6A874 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x56168843 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x5D204718 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x5DE11890 EQ PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x46F7DA2 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x17FCB39B EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x18AC3B15 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x20529BB1 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x3931F45D EQ PUSH2 0x1A3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x2B8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x164 PUSH2 0x312 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x1990 JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH2 0x195 PUSH2 0x5E6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x171 JUMP JUMPDEST PUSH2 0x195 PUSH2 0x1B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x19C5 JUMP JUMPDEST PUSH2 0x6E2 JUMP JUMPDEST PUSH2 0x195 PUSH2 0x801 JUMP JUMPDEST PUSH2 0x164 PUSH2 0x87C JUMP JUMPDEST PUSH2 0x195 PUSH2 0x89A JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x8AD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x171 JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x19F1 JUMP JUMPDEST PUSH2 0x8C0 JUMP JUMPDEST PUSH2 0x195 PUSH2 0x8F3 JUMP JUMPDEST PUSH2 0x164 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x171 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x9FC JUMP JUMPDEST PUSH2 0x236 PUSH2 0xA83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x1A0E JUMP JUMPDEST PUSH2 0x195 PUSH2 0x251 CALLDATASIZE PUSH1 0x4 PUSH2 0x19C5 JUMP JUMPDEST PUSH2 0xC77 JUMP JUMPDEST PUSH2 0x195 PUSH2 0xD1A JUMP JUMPDEST PUSH2 0x15A PUSH2 0xD2D JUMP JUMPDEST PUSH2 0x164 PUSH2 0xD81 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0x1A7B JUMP JUMPDEST PUSH2 0xD9D JUMP JUMPDEST PUSH2 0x15A PUSH2 0x28F CALLDATASIZE PUSH1 0x4 PUSH2 0x19F1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x195 PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x19F1 JUMP JUMPDEST PUSH2 0xF4D JUMP JUMPDEST PUSH2 0x195 PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x19C5 JUMP JUMPDEST PUSH2 0xFCF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C2 PUSH2 0x101C JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F3 SWAP1 PUSH2 0x1ABC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x306 PUSH2 0x101C JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31C PUSH2 0x101C JUMP JUMPDEST PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x338 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x370 SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x38D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0x1AE2 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x40F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204458424C2062616C616E636520746F20726564 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x65656D PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41B DUP7 DUP7 PUSH2 0xC77 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44B SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x468 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x1AE2 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x513 JUMPI DUP5 DUP2 LT PUSH2 0x4A5 JUMPI DUP1 SWAP2 POP PUSH2 0x513 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742061737365742062616C616E636520746F207072 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6475636520657870656374656420776974686472617720616D6F756E740000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F3 JUMP JUMPDEST PUSH2 0x527 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND CALLER DUP5 PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x2770A7EB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x9DC29FAC SWAP1 PUSH2 0x55B SWAP1 CALLER SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x1AFB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x589 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP2 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0x5FE85DC899E158274A44ABAB0E6DF5434416F0CE11DF30D42E02F229B8FC8A41 SWAP4 POP SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP2 POP LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5F1 PUSH2 0x101C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x8 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x64D JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x62F JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x6DC JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x674 JUMPI PUSH2 0x674 PUSH2 0x1B14 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x26 DUP8 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 SWAP3 POP SWAP1 PUSH2 0x6A7 DUP3 PUSH2 0x109B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6B8 DUP8 DUP6 DUP5 PUSH1 0x0 PUSH2 0x120A JUMP JUMPDEST POP SWAP1 POP PUSH2 0x6C5 DUP2 DUP10 PUSH2 0x1B40 JUMP JUMPDEST SWAP8 POP POP POP POP POP DUP1 PUSH2 0x6D5 SWAP1 PUSH2 0x1B53 JUMP JUMPDEST SWAP1 POP PUSH2 0x657 JUMP JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6ED PUSH2 0x101C JUMP JUMPDEST PUSH1 0x3 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP6 AND SUB PUSH2 0x711 JUMPI DUP3 SWAP2 POP POP PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x26 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x738 SWAP1 PUSH2 0x109B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x26 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP3 POP SWAP1 PUSH2 0x75F SWAP1 PUSH2 0x109B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0x77A PUSH9 0x327CB2734119D3B7A9 PUSH1 0x1E SHL DUP6 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0x784 SWAP2 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH9 0x327CB2734119D3B7A9 PUSH1 0x1E SHL PUSH2 0x79F DUP9 DUP5 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0x7A9 SWAP2 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x25 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x7DF SWAP1 PUSH1 0xFF AND PUSH1 0xA PUSH2 0x1C91 JUMP JUMPDEST PUSH2 0x7E9 SWAP1 DUP4 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0x7F3 SWAP2 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x80C PUSH2 0x101C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH5 0xE8D4A51000 DUP3 PUSH1 0x5 ADD SLOAD PUSH2 0x825 SWAP2 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0xFFFF AND DUP4 PUSH1 0x9 ADD PUSH1 0x1 ADD SLOAD PUSH2 0x840 SWAP2 SWAP1 PUSH2 0x1B6C JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 DUP5 PUSH1 0x4 ADD SLOAD PUSH2 0x85B SWAP2 SWAP1 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0x865 SWAP2 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST DUP4 PUSH1 0x4 ADD SLOAD PUSH2 0x874 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x886 PUSH2 0x101C JUMP JUMPDEST SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A4 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x4 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B7 PUSH2 0x101C JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8CB PUSH2 0x101C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x26 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 AND ISZERO ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8FE PUSH2 0x101C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x957 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x97B SWAP2 SWAP1 PUSH2 0x1AE2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x987 PUSH2 0x5E6 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 PUSH2 0x994 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x9A3 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH2 0x9B6 DUP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0x874 SWAP2 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9CA PUSH2 0x101C JUMP JUMPDEST PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9E6 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA06 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x566826D1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA5A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA7E SWAP2 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xA8F PUSH2 0x101C JUMP JUMPDEST PUSH1 0x8 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAAF JUMPI PUSH2 0xAAF PUSH2 0x1CC6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB14 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xB01 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xACD JUMPI SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 DUP1 DUP3 PUSH1 0x8 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xB72 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB54 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xC70 JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB99 JUMPI PUSH2 0xB99 PUSH2 0x1B14 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x26 DUP9 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 SWAP3 POP SWAP1 PUSH2 0xBCC DUP3 PUSH2 0x109B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0xBDE DUP10 DUP7 DUP6 PUSH1 0x0 PUSH2 0x120A JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x327CB2734119D3B7A9 PUSH1 0x1E SHL PUSH3 0xF4240 DUP7 PUSH2 0xC24 SWAP2 SWAP1 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0xC2E SWAP2 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST DUP2 MSTORE POP DUP11 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0xC43 JUMPI PUSH2 0xC43 PUSH2 0x1B14 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP8 PUSH2 0xC58 SWAP1 PUSH2 0x1B53 JUMP JUMPDEST SWAP8 POP POP POP POP POP POP DUP1 PUSH2 0xC69 SWAP1 PUSH2 0x1B53 JUMP JUMPDEST SWAP1 POP PUSH2 0xB7C JUMP JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC82 PUSH2 0x101C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC8E PUSH2 0x8F3 JUMP JUMPDEST SWAP1 POP PUSH3 0xF4240 PUSH2 0xCAA PUSH9 0x327CB2734119D3B7A9 PUSH1 0x1E SHL DUP4 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0xCB4 SWAP2 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCC1 DUP7 PUSH2 0xF4D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x25 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP3 PUSH2 0xCF1 DUP4 PUSH1 0xA PUSH2 0x1C91 JUMP JUMPDEST PUSH2 0xCFB SWAP1 DUP7 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0xD05 SWAP2 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x7E9 DUP3 DUP10 PUSH2 0x1B6C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD24 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x5 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD37 PUSH2 0x101C JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F3 SWAP1 PUSH2 0x1ABC JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD72 PUSH2 0x101C JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD8B PUSH2 0x101C JUMP JUMPDEST PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA7 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F3 SWAP1 PUSH2 0x1ABC JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE0 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF7406FC3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 ADDRESS SWAP1 PUSH4 0xF7406FC3 SWAP1 PUSH2 0xE0B SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1AFB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE28 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE4C SWAP2 SWAP1 PUSH2 0x1AE2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x41B5774A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE8E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEB2 SWAP2 SWAP1 PUSH2 0x1AE2 JUMP JUMPDEST SWAP1 POP PUSH2 0xEBD DUP3 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xED2 DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0xEDC SWAP2 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST PUSH1 0x1 DUP6 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH2 0xF11 SWAP1 DUP12 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x1AFB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xF58 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x26 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP SWAP2 AND PUSH2 0xFBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x2AB739BAB83837B93A32B2103332B2903A37B5B2B7 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F3 JUMP JUMPDEST PUSH2 0xFC7 DUP2 PUSH2 0x109B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFDA PUSH2 0x101C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x26 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP3 POP PUSH2 0x1000 DUP3 PUSH2 0x109B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1010 DUP5 DUP9 DUP5 DUP10 PUSH2 0x120A JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0xBFA76EC2967ED7F8D3D40CD552F1451AB03573B596BFCE931A6A016F7733078C SWAP1 JUMP JUMPDEST PUSH2 0x1096 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x105F SWAP3 SWAP2 SWAP1 PUSH2 0x1AFB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x1416 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1119 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST POP SWAP4 POP POP SWAP3 POP POP PUSH1 0x0 DUP3 SGT PUSH2 0x116A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x4E6F207072696365206461746120617661696C61626C65 PUSH1 0x48 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x258 PUSH2 0x117C PUSH3 0x15180 TIMESTAMP PUSH2 0x1D4B JUMP JUMPDEST PUSH2 0x1186 SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT PUSH2 0x11CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x5374616C652070726963652064617461 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F3 JUMP JUMPDEST DUP5 SLOAD PUSH2 0x11E1 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0xA PUSH2 0x1C91 JUMP JUMPDEST PUSH2 0x11F7 PUSH9 0x327CB2734119D3B7A9 PUSH1 0x1E SHL DUP6 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0x1201 SWAP2 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 DUP3 SUB PUSH2 0x1284 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1240 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x125D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1281 SWAP2 SWAP1 PUSH2 0x1AE2 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH3 0xF4240 PUSH2 0x1292 DUP6 DUP4 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0x129C SWAP2 SWAP1 PUSH2 0x1B6C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x25 DUP9 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 POP PUSH9 0x327CB2734119D3B7A9 PUSH1 0x1E SHL SWAP1 PUSH2 0x12D6 SWAP1 PUSH1 0xFF AND PUSH1 0xA PUSH2 0x1C91 JUMP JUMPDEST PUSH2 0x12E0 SWAP2 SWAP1 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0x12EA SWAP1 DUP4 PUSH2 0x1B99 JUMP JUMPDEST SWAP2 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12FF PUSH2 0x101C JUMP JUMPDEST PUSH1 0x6 DUP2 ADD DUP1 SLOAD TIMESTAMP SWAP1 SWAP2 SSTORE SWAP1 SWAP2 POP DUP3 DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1328 JUMPI POP PUSH2 0x1324 PUSH3 0x15180 TIMESTAMP PUSH2 0x1D4B JUMP JUMPDEST DUP3 GT ISZERO JUMPDEST ISZERO PUSH2 0x1340 JUMPI PUSH2 0x133B PUSH1 0xD DUP5 ADD PUSH1 0x0 PUSH2 0x1944 JUMP JUMPDEST PUSH2 0x13F1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE10 PUSH2 0x1352 PUSH3 0x15180 TIMESTAMP PUSH2 0x1D5E JUMP JUMPDEST PUSH2 0x135C SWAP2 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x18 PUSH1 0x1 DUP4 ADD MOD SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0xD ADD DUP3 PUSH1 0x18 DUP2 LT PUSH2 0x1380 JUMPI PUSH2 0x1380 PUSH2 0x1B14 JUMP JUMPDEST ADD SLOAD SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0xD ADD DUP4 PUSH1 0x18 DUP2 LT PUSH2 0x139B JUMPI PUSH2 0x139B PUSH2 0x1B14 JUMP JUMPDEST ADD SSTORE DUP7 PUSH1 0xD DUP8 ADD DUP5 PUSH1 0x18 DUP2 LT PUSH2 0x13B3 JUMPI PUSH2 0x13B3 PUSH2 0x1B14 JUMP JUMPDEST ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13C3 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x5 DUP7 ADD SLOAD PUSH2 0x13D8 SWAP1 DUP9 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST SWAP4 POP DUP1 ISZERO PUSH2 0x13ED JUMPI PUSH2 0x13EA DUP2 DUP6 PUSH2 0x1D4B JUMP JUMPDEST SWAP4 POP JUMPDEST POP POP POP JUMPDEST PUSH1 0x5 DUP4 ADD DUP2 SWAP1 SSTORE PUSH2 0x1410 DUP4 PUSH2 0x140B PUSH5 0xE8D4A51000 DUP5 PUSH2 0x1B99 JUMP JUMPDEST PUSH2 0x14E8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x146B DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1552 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1096 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1489 SWAP2 SWAP1 PUSH2 0x1D72 JUMP JUMPDEST PUSH2 0x1096 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x9 DUP5 ADD SLOAD PUSH2 0xFFFF DUP1 DUP3 AND DUP4 MSTORE PUSH3 0x10000 SWAP1 SWAP2 DIV DUP2 AND PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0xA DUP7 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xB DUP6 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE SWAP1 SWAP2 SWAP1 DUP4 AND LT PUSH2 0x1539 JUMPI PUSH2 0x1096 DUP4 DUP4 PUSH2 0x1561 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xFFFF DUP1 DUP5 AND SWAP2 AND LT PUSH2 0x1096 JUMPI PUSH2 0x1096 DUP4 DUP4 PUSH2 0x1687 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xFC7 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x179B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x9 DUP5 ADD SLOAD PUSH2 0xFFFF DUP1 DUP3 AND DUP4 MSTORE PUSH3 0x10000 SWAP1 SWAP2 DIV AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA DUP5 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xB DUP4 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE JUMPDEST PUSH2 0x15A6 DUP2 DUP4 PUSH2 0x1876 JUMP JUMPDEST PUSH2 0x1632 JUMPI PUSH1 0x0 DUP4 PUSH1 0xC ADD DUP3 PUSH1 0x60 ADD MLOAD PUSH1 0x1 PUSH2 0x15C1 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x15D1 JUMPI PUSH2 0x15D1 PUSH2 0x1B14 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP DUP1 PUSH1 0x1 ADD SLOAD PUSH1 0x0 SUB PUSH2 0x15F3 JUMPI POP PUSH2 0x1632 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP3 SLOAD PUSH2 0xFFFF DUP1 DUP3 AND DUP4 MSTORE PUSH3 0x10000 SWAP1 SWAP2 DIV AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP1 POP PUSH2 0x159C JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0xA DUP5 ADD SLOAD EQ PUSH2 0x1096 JUMPI DUP1 MLOAD PUSH1 0x9 DUP5 ADD DUP1 SLOAD PUSH1 0x20 DUP5 ADD MLOAD PUSH2 0xFFFF SWAP1 DUP2 AND PUSH3 0x10000 MUL PUSH4 0xFFFFFFFF NOT SWAP1 SWAP3 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0xA DUP5 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0xB DUP5 ADD SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x9 DUP5 ADD SLOAD PUSH2 0xFFFF DUP1 DUP3 AND DUP4 MSTORE PUSH3 0x10000 SWAP1 SWAP2 DIV AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA DUP5 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xB DUP4 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE JUMPDEST PUSH2 0x16CC DUP2 DUP4 PUSH2 0x1876 JUMP JUMPDEST PUSH2 0x1754 JUMPI PUSH1 0x60 DUP2 ADD MLOAD ISZERO PUSH2 0x1754 JUMPI PUSH1 0x0 DUP4 PUSH1 0xC ADD PUSH1 0x1 DUP4 PUSH1 0x60 ADD MLOAD PUSH2 0x16F1 SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1701 JUMPI PUSH2 0x1701 PUSH2 0x1B14 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x3 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH2 0xFFFF DUP1 DUP3 AND DUP6 MSTORE PUSH3 0x10000 SWAP1 SWAP2 DIV AND SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP2 POP PUSH2 0x16C2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x9 DUP5 ADD DUP1 SLOAD PUSH1 0x20 DUP5 ADD MLOAD PUSH2 0xFFFF SWAP1 DUP2 AND PUSH3 0x10000 MUL PUSH4 0xFFFFFFFF NOT SWAP1 SWAP3 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0xA DUP5 ADD SSTORE PUSH1 0x60 ADD MLOAD PUSH1 0xB SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x17FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1818 SWAP2 SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1855 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x185A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x186B DUP8 DUP4 DUP4 DUP8 PUSH2 0x18A6 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xFFFF AND DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0xFFFF AND GT ISZERO DUP1 ISZERO PUSH2 0x189F JUMPI POP DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0xFFFF AND DUP3 PUSH2 0xFFFF AND LT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1915 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x190E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x190E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F3 JUMP JUMPDEST POP DUP2 PUSH2 0xFC7 JUMP JUMPDEST PUSH2 0xFC7 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x192A JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST POP PUSH2 0x28F SWAP1 PUSH1 0x18 DUP2 ADD SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1963 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x194F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x19A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x19B0 DUP2 PUSH2 0x197B JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x19E3 DUP2 PUSH2 0x197B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x189F DUP2 PUSH2 0x197B JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1A6E JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 DUP2 ADD MLOAD DUP8 DUP7 ADD MSTORE DUP6 DUP2 ADD MLOAD DUP7 DUP7 ADD MSTORE PUSH1 0x60 SWAP1 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1A2B JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1A9B DUP2 PUSH2 0x197B JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1AAB DUP2 PUSH2 0x197B JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x155B985D5D1A1BDC9A5E9959 PUSH1 0xA2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x7FB JUMPI PUSH2 0x7FB PUSH2 0x1B2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1B65 JUMPI PUSH2 0x1B65 PUSH2 0x1B2A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x7FB JUMPI PUSH2 0x7FB PUSH2 0x1B2A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1BA8 JUMPI PUSH2 0x1BA8 PUSH2 0x1B83 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1BE8 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1BCE JUMPI PUSH2 0x1BCE PUSH2 0x1B2A JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1BDB JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1BB2 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1BFF JUMPI POP PUSH1 0x1 PUSH2 0x7FB JUMP JUMPDEST DUP2 PUSH2 0x1C0C JUMPI POP PUSH1 0x0 PUSH2 0x7FB JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1C22 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1C2C JUMPI PUSH2 0x1C48 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x7FB JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1C3D JUMPI PUSH2 0x1C3D PUSH2 0x1B2A JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x7FB JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1C6B JUMPI POP DUP2 DUP2 EXP PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x1C75 DUP4 DUP4 PUSH2 0x1BAD JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1C89 JUMPI PUSH2 0x1C89 PUSH2 0x1B2A JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x189F PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x1BF0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x189F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1CF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1D13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D1C DUP7 PUSH2 0x1CDC JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x1D3F PUSH1 0x80 DUP8 ADD PUSH2 0x1CDC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x7FB JUMPI PUSH2 0x7FB PUSH2 0x1B2A JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1D6D JUMPI PUSH2 0x1D6D PUSH2 0x1B83 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x189F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DAF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1D97 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1DCA DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1D94 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1DF3 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1D94 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x112 0xE RETURNDATACOPY BYTE DUP15 SWAP15 0xD0 DUP8 0xDF INVALID PUSH17 0xB08277DFD2B47D53B88E9E2A9C6949C84E INVALID PUSH1 0x64 PUSH20 0x6F6C634300081100330000000000000000000000 ","sourceMap":"934:3827:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3276:134;;;:::i;:::-;;856:124:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1470:1576:10;;;;;;:::i;:::-;;:::i;2610:730:19:-;;;:::i;:::-;;;892:25:23;;;880:2;865:18;2610:730:19;746:177:23;226:656:19;;;;;;:::i;:::-;;:::i;5357:772::-;;;:::i;517:114:21:-;;;:::i;1109:119::-;;;:::i;414:97::-;;;:::i;:::-;;;1413:14:23;;1406:22;1388:41;;1376:2;1361:18;414:97:21;1248:187:23;1251:213:10;;;;;;:::i;:::-;;:::i;3346:696:19:-;;;:::i;637:105:21:-;;;:::i;986:117::-;;;:::i;:::-;;;1866:10:23;1854:23;;;1836:42;;1824:2;1809:18;986:117:21;1692:192:23;168:123:21;;;:::i;4048:1303:19:-;;;:::i;:::-;;;;;;;:::i;888:970::-;;;;;;:::i;:::-;;:::i;297:111:21:-;;;:::i;3138:132:10:-;;;:::i;748:102:21:-;;;:::i;510:658:20:-;;;;;;:::i;:::-;;:::i;317:70:22:-;;;;;;:::i;:::-;;;1864:321:19;;;;;;:::i;:::-;;:::i;2191:413::-;;;;;;:::i;:::-;;:::i;3276:134:10:-;1107:33;1143:19;:17;:19::i;:::-;1194:16;;;;-1:-1:-1;1194:16:10;;;-1:-1:-1;;;;;1194:16:10;1180:10;:30;1172:55;;;;-1:-1:-1;;;1172:55:10;;;;;;;:::i;:::-;;;;;;;;;3321:33:::1;3357:19;:17;:19::i;:::-;3386:17:::0;;-1:-1:-1;;3386:17:10::1;::::0;;-1:-1:-1;;3276:134:10:o;856:124:21:-;909:7;935:19;:17;:19::i;:::-;:38;;;-1:-1:-1;;;;;935:38:21;;856:124;-1:-1:-1;856:124:21:o;1470:1576:10:-;1564:33;1600:19;:17;:19::i;:::-;1728:7;;;;:29;;-1:-1:-1;;;1728:29:10;;1564:55;;-1:-1:-1;1711:14:10;;-1:-1:-1;;;;;1728:7:10;;;;:17;;:29;;1746:10;;1728:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1711:46;;1788:10;1775:9;:23;;1767:71;;;;-1:-1:-1;;;1767:71:10;;4318:2:23;1767:71:10;;;4300:21:23;4357:2;4337:18;;;4330:30;4396:34;4376:18;;;4369:62;-1:-1:-1;;;4447:18:23;;;4440:33;4490:19;;1767:71:10;4116:399:23;1767:71:10;1950:10;1963:43;1982:11;1995:10;1963:18;:43::i;:::-;1950:56;;2307:13;2330:11;-1:-1:-1;;;;;2323:29:10;;2361:4;2323:44;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2307:60;;2440:8;2432:5;:16;2429:348;;;2593:12;2581:8;:24;2578:189;;2633:8;2625:16;;2578:189;;;2680:72;;-1:-1:-1;;;2680:72:10;;4722:2:23;2680:72:10;;;4704:21:23;4761:2;4741:18;;;4734:30;4800:34;4780:18;;;4773:62;4871:32;4851:18;;;4844:60;4921:19;;2680:72:10;4520:426:23;2578:189:10;2844:51;-1:-1:-1;;;;;2844:32:10;;2877:10;2889:5;2844:32;:51::i;:::-;2932:7;;;;:36;;-1:-1:-1;;;2932:36:10;;-1:-1:-1;;;;;2932:7:10;;;;:12;;:36;;2945:10;;2957;;2932:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2983:56:10;;;2996:10;5499:34:23;;5564:2;5549:18;;5542:34;;;-1:-1:-1;;;;;5612:15:23;;5592:18;;;5585:43;5659:2;5644:18;;5637:34;;;2983:56:10;;;;-1:-1:-1;2983:56:10;;;;5448:3:23;2983:56:10;;-1:-1:-1;2983:56:10;1554:1492;;;;1470:1576;;;:::o;2610:730:19:-;2648:8;2667:33;2703:19;:17;:19::i;:::-;2667:55;;2847:25;2875:2;:12;;2847:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2847:40:19;;;;;;;;;;;;;;;;;;;;;;;2901:6;2897:437;2912:9;:16;2910:1;:18;2897:437;;;2948:9;2967;2977:1;2967:12;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3030:32:19;;2994:33;3030:32;;;:19;;;:32;;;;;;2967:12;;-1:-1:-1;3030:32:19;3190:13;3030:32;3190:9;:13::i;:::-;3177:26;;3260:9;3274:24;3281:2;3285;3289:5;3296:1;3274:6;:24::i;:::-;-1:-1:-1;3259:39:19;-1:-1:-1;3312:11:19;3259:39;3312:11;;:::i;:::-;;;2934:400;;;;2929:3;;;;:::i;:::-;;;2897:437;;;;2657:683;;2610:730;:::o;226:656::-;309:4;324:33;360:19;:17;:19::i;:::-;405:21;;;;324:55;;-1:-1:-1;;;;;;405:21:19;;;393:33;;;;390:115;;487:7;480:14;;;;;390:115;554:21;;;;-1:-1:-1;;;;;554:21:19;514:7;534:42;;;:19;;;:42;;;;;524:53;;:9;:53::i;:::-;-1:-1:-1;;;;;608:29:19;;587:8;608:29;;;:19;;;:29;;;;;514:63;;-1:-1:-1;587:8:19;598:40;;:9;:40::i;:::-;587:51;-1:-1:-1;648:14:19;587:51;666:31;-1:-1:-1;;;666:2:19;:31;:::i;:::-;665:37;;;;:::i;:::-;648:54;-1:-1:-1;712:13:19;-1:-1:-1;;;729:19:19;741:7;648:54;729:19;:::i;:::-;728:52;;;;:::i;:::-;-1:-1:-1;;;;;814:26:19;;;;;;:16;;;:26;;;;;;712:68;;-1:-1:-1;845:4:19;;810:30;;814:26;;810:2;:30;:::i;:::-;798:43;;:8;:43;:::i;:::-;797:52;;;;:::i;:::-;790:59;;;;;;;226:656;;;;;:::o;5357:772::-;5408:9;5541:33;5577:19;:17;:19::i;:::-;5541:55;;5607:27;634:4:7;5644:2:19;:16;;;:41;;;;:::i;:::-;5607:79;;5862:17;5908:20;5882:46;;:2;:18;;:23;;;:46;;;;:::i;:::-;5862:66;;6117:4;6103:12;6080:2;:20;;;:35;;;;:::i;:::-;6079:42;;;;:::i;:::-;6055:2;:20;;;:67;;;;:::i;:::-;6048:74;;5418:711;;;5357:772;:::o;517:114:21:-;565:7;591:19;:17;:19::i;:::-;:33;;;;-1:-1:-1;;;;;591:33:21;;;-1:-1:-1;517:114:21:o;1109:119::-;1161:4;1184:19;:17;:19::i;:::-;:37;;;1177:44;;1109:119;:::o;414:97::-;455:4;478:19;:17;:19::i;:::-;:26;;;;414:97;-1:-1:-1;414:97:21:o;1251:213:10:-;1316:4;1331:33;1367:19;:17;:19::i;:::-;-1:-1:-1;;;;;1411:26:10;;;1455:1;1411:26;;;:19;;;;:26;;;;;:31;;;;1403:54;;;1251:213;-1:-1:-1;;1251:213:10:o;3346:696:19:-;3391:8;3492:33;3528:19;:17;:19::i;:::-;3492:55;;3604:11;3618:2;:7;;;;;;;;;;-1:-1:-1;;;;;3618:7:19;-1:-1:-1;;;;;3618:19:19;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3604:35;;3709:8;3720;:6;:8::i;:::-;3709:19;-1:-1:-1;3781:11:19;;;:23;;-1:-1:-1;3796:8:19;;3781:23;3778:61;;;3827:1;3820:8;;;;;3346:696;:::o;3778:61::-;3949:6;3937:8;:3;3941:4;3937:8;:::i;:::-;3936:19;;;;:::i;637:105:21:-;676:7;710:19;:17;:19::i;:::-;:24;;;-1:-1:-1;;;;;710:24:21;;637:105;-1:-1:-1;637:105:21:o;986:117::-;1036:6;1061:19;:17;:19::i;:::-;:35;;;-1:-1:-1;;;1061:35:21;;;;;;-1:-1:-1;986:117:21:o;168:123::-;213:6;238:19;:17;:19::i;:::-;:24;;;;;;;;;;-1:-1:-1;;;;;238:24:21;-1:-1:-1;;;;;238:44:21;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;231:53;;168:123;:::o;4048:1303:19:-;4087:44;4280:33;4316:19;:17;:19::i;:::-;4454:12;;;:19;4280:55;;-1:-1:-1;4419:55:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4419:55:19;;;;;;;;;;;;;;;;;4410:64;;4525:8;4631:25;4659:2;:12;;4631:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4631:40:19;;;;;;;;;;;;;;;;;;;;;;;4685:6;4681:664;4696:9;:16;4694:1;:18;4681:664;;;4732:9;4744;4754:1;4744:12;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;4806:32:19;;4770:33;4806:32;;;:19;;;:32;;;;;;4744:12;;-1:-1:-1;4806:32:19;4922:13;4806:32;4922:9;:13::i;:::-;4909:26;;5006:8;5016;5028:24;5035:2;5039;5043:5;5050:1;5028:6;:24::i;:::-;5005:47;;;;5081:234;;;;;;;;5143:2;-1:-1:-1;;;;;5081:234:19;;;;;5173:3;5081:234;;;;5204:3;5081:234;;;;-1:-1:-1;;;560:3:7;5236:5:19;:32;;;;:::i;:::-;5235:65;;;;:::i;:::-;5081:234;;;5067:6;5074:3;5067:11;;;;;;;;:::i;:::-;;;;;;:248;;;;5329:5;;;;:::i;:::-;;;4718:627;;;;;4713:3;;;;:::i;:::-;;;4681:664;;;;4132:1219;;;4048:1303;:::o;888:970::-;974:4;989:33;1024:19;:17;:19::i;:::-;989:54;;1053:8;1064:15;:13;:15::i;:::-;1053:26;-1:-1:-1;560:3:7;1144:34:19;-1:-1:-1;;;1053:26:19;1144:34;:::i;:::-;1143:65;;;;:::i;:::-;1137:71;;1355:10;1368:29;1385:11;1368:16;:29::i;:::-;-1:-1:-1;;;;;1423:29:19;;1408:12;1423:29;;;:16;;;:29;;;;;;1355:42;;-1:-1:-1;1423:29:19;;;;;1355:42;1622:10;1423:29;1622:2;:10;:::i;:::-;1617:16;;:3;:16;:::i;:::-;1616:24;;;;:::i;:::-;1597:43;-1:-1:-1;1847:4:19;1821:24;1597:43;1821:10;:24;:::i;297:111:21:-;345:4;368:19;:17;:19::i;:::-;:33;;;361:40;;297:111;:::o;3138:132:10:-;1107:33;1143:19;:17;:19::i;:::-;1194:16;;;;-1:-1:-1;1194:16:10;;;-1:-1:-1;;;;;1194:16:10;1180:10;:30;1172:55;;;;-1:-1:-1;;;1172:55:10;;;;;;;:::i;:::-;3182:33:::1;3218:19;:17;:19::i;:::-;3247:16:::0;;-1:-1:-1;;3247:16:10::1;3259:4;3247:16;::::0;;-1:-1:-1;;3138:132:10:o;748:102:21:-;790:7;816:19;:17;:19::i;:::-;:27;;;-1:-1:-1;;;;;816:27:21;;748:102;-1:-1:-1;748:102:21:o;510:658:20:-;326:33;362:19;:17;:19::i;:::-;413:10;;;;;;-1:-1:-1;;;;;;413:10:20;399;:24;391:49;;;;-1:-1:-1;;;391:49:20;;;;;;;:::i;:::-;619:33:::1;655:19;:17;:19::i;:::-;701:68;::::0;-1:-1:-1;;;701:68:20;;619:55;;-1:-1:-1;684:14:20::1;::::0;728:4:::1;::::0;701:50:::1;::::0;:68:::1;::::0;752:8;;762:6;;701:68:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;684:85;;814:9;853:4;-1:-1:-1::0;;;;;826:52:20::1;;:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;814:66;;940:24;954:9;940:13;:24::i;:::-;1025:11;1058:4:::0;1040:14:::1;:9:::0;1050:4:::1;1040:14;:::i;:::-;1039:23;;;;:::i;:::-;1133:7;::::0;::::1;::::0;:28:::1;::::0;-1:-1:-1;;;1133:28:20;;1025:37;;-1:-1:-1;;;;;;1133:7:20::1;::::0;:12:::1;::::0;:28:::1;::::0;1146:6;;1025:37;;1133:28:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;609:559;;;;316:142:::0;510:658;;;:::o;1864:321:19:-;1929:4;1944:33;1980:19;:17;:19::i;:::-;-1:-1:-1;;;;;2045:29:19;;;2009:33;2045:29;;;:19;;;:29;;;;;2100:7;;1944:55;;-1:-1:-1;2045:29:19;2100:7;2084:64;;;;-1:-1:-1;;;2084:64:19;;8648:2:23;2084:64:19;;;8630:21:23;8687:2;8667:18;;;8660:30;-1:-1:-1;;;8706:18:23;;;8699:51;8767:18;;2084:64:19;8446:345:23;2084:64:19;2165:13;2175:2;2165:9;:13::i;:::-;2158:20;1864:321;-1:-1:-1;;;;1864:321:19:o;2191:413::-;2268:14;2294:33;2330:19;:17;:19::i;:::-;-1:-1:-1;;;;;2395:29:19;;2359:33;2395:29;;;:19;;;:29;;;;;2294:55;;-1:-1:-1;2497:13:19;2395:29;2497:9;:13::i;:::-;2486:24;;2522:6;2533:41;2540:2;2551:8;2562:3;2567:6;2533;:41::i;:::-;-1:-1:-1;2521:53:19;2191:413;-1:-1:-1;;;;;;;2191:413:19:o;4486:118:18:-;4579:17;;4486:118::o;763:205:4:-;875:86;895:5;925:23;;;950:2;954:5;902:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;902:58:4;;;;;;;;;;;;;;-1:-1:-1;;;;;902:58:4;-1:-1:-1;;;;;;902:58:4;;;;;;;;;;875:19;:86::i;:::-;763:205;;;:::o;6136:614:19:-;6213:4;6274:13;6315:17;6346:2;:7;;;;;;;;;;-1:-1:-1;;;;;6346:7:19;-1:-1:-1;;;;;6346:23:19;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6256:115;;;;;;;6431:1;6422:6;:10;6414:46;;;;-1:-1:-1;;;6414:46:19;;9660:2:23;6414:46:19;;;9642:21:23;9699:2;9679:18;;;9672:30;-1:-1:-1;;;9718:18:23;;;9711:53;9781:18;;6414:46:19;9458:347:23;6414:46:19;6549:10;6599:3;6562:34;399:5:7;6562:15:19;:34;:::i;:::-;:40;;;;:::i;:::-;6549:53;;6632:5;6620:9;:17;6612:46;;;;-1:-1:-1;;;6612:46:19;;10145:2:23;6612:46:19;;;10127:21:23;10184:2;10164:18;;;10157:30;-1:-1:-1;;;10203:18:23;;;10196:46;10259:18;;6612:46:19;9943:340:23;6612:46:19;6731:11;;6727:15;;-1:-1:-1;;;6731:11:19;;;;6727:2;:15;:::i;:::-;6676:46;-1:-1:-1;;;6684:6:19;6676:46;:::i;:::-;6675:68;;;;:::i;:::-;6668:75;6136:614;-1:-1:-1;;;;;6136:614:19:o;6818:579::-;6927:8;6963:3;6979:8;;;6976:74;;7009:30;;-1:-1:-1;;;7009:30:19;;-1:-1:-1;;;;;7009:15:19;;;;;:30;;7033:4;;7009:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7003:36;;6976:74;560:3:7;7191:11:19;7197:5;7191:3;:11;:::i;:::-;7190:40;;;;:::i;:::-;-1:-1:-1;;;;;7319:32:19;;;;;;:16;;;:32;;;;;;7184:46;;-1:-1:-1;;;;746:4:7;7315:36:19;;7319:32;;7315:2;:36;:::i;:::-;:65;;;;:::i;:::-;7307:74;;;;:::i;:::-;;;6818:579;;;;;;;:::o;1175:1878:20:-;1233:33;1269:19;:17;:19::i;:::-;1347:21;;;;;1449:15;1425:39;;;1233:55;;-1:-1:-1;1491:9:20;1513:13;;;;;:66;;-1:-1:-1;1544:34:20;399:5:7;1544:15:20;:34;:::i;:::-;1530:9;:49;;1513:66;1510:1426;;;1595:22;1602:15;;;;1595:22;:::i;:::-;1510:1426;;;1767:7;367:4:7;1778:34:20;399:5:7;1778:15:20;:34;:::i;:::-;1777:56;;;;:::i;:::-;1767:66;-1:-1:-1;1847:9:20;1950:2;1947:1;1944:4;;1943:9;1936:16;;2059:19;2081:2;:15;;2097:4;2081:21;;;;;;;:::i;:::-;;;2059:43;;2433:1;2409:2;:15;;2425:4;2409:21;;;;;;;:::i;:::-;;:25;2521:9;2498:15;;;2514:2;2498:19;;;;;;;:::i;:::-;;;:32;;;;;;;:::i;:::-;;;;-1:-1:-1;;2611:16:20;;;;:28;;2630:9;;2611:28;:::i;:::-;2599:40;-1:-1:-1;2723:18:20;;2720:205;;2883:27;2896:14;2883:27;;:::i;:::-;;;2720:205;1634:1302;;;1510:1426;2945:16;;;:28;;;2983:63;2945:2;3010:34;634:4:7;2964:9:20;3010:34;:::i;:::-;2983:15;:63::i;:::-;1223:1830;;;1175:1878;:::o;3747:706:4:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:4;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:4;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:4;;10889:2:23;4351:85:4;;;10871:21:23;10928:2;10908:18;;;10901:30;10967:34;10947:18;;;10940:62;-1:-1:-1;;;11018:18:23;;;11011:40;11068:19;;4351:85:4;10687:406:23;3166:803:20;3283:57;;;;;;;;3322:18;;;3283:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3435:38;;;-1:-1:-1;3432:504:20;;3566:43;3584:2;3588:20;3566:17;:43::i;3432:504::-;3711:14;;:38;;;;;;;3708:228;;3880:45;3900:2;3904:20;3880:19;:45::i;3873:223:5:-;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;4058:702:20:-;4150:57;;;;;;;;4189:18;;;4150:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4217:382;4224:19;4237:2;4240;4224:12;:19::i;:::-;4217:382;;4352:39;4394:2;:17;;4412:2;:8;;;4423:1;4412:12;;;;:::i;:::-;4394:31;;;;;;;;:::i;:::-;;;;;;;;;;;4352:73;;4442:4;:9;;;4455:1;4442:14;4439:127;;4546:5;;;4439:127;4579:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4217:382:20;;;4688:7;;;;4661:23;;;;:34;4658:87;;4711:23;;:18;;;:23;;;;;;;;;;;;-1:-1:-1;;4711:23:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4140:620;4058:702;;:::o;4847:591::-;4941:57;;;;;;;;4980:18;;;4941:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5008:391;5015:19;5028:2;5031;5015:12;:19::i;:::-;5008:391;;5053:8;;;;:12;5050:339;;5182:39;5224:2;:17;;5253:1;5242:2;:8;;;:12;;;;:::i;:::-;5224:31;;;;;;;;:::i;:::-;;;;;;;;;;5273:9;;;;;;;;5224:31;;;;;;;5273:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5008:391:20;;-1:-1:-1;5008:391:20;5050:339;5408:23;;:18;;;:23;;;;;;;;;;;;-1:-1:-1;;5408:23:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4847:591:20:o;4960:446:5:-;5125:12;5182:5;5157:21;:30;;5149:81;;;;-1:-1:-1;;;5149:81:5;;11300:2:23;5149:81:5;;;11282:21:23;11339:2;11319:18;;;11312:30;11378:34;11358:18;;;11351:62;-1:-1:-1;;;11429:18:23;;;11422:36;11475:19;;5149:81:5;11098:402:23;5149:81:5;5241:12;5255:23;5282:6;-1:-1:-1;;;;;5282:11:5;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:5:o;5499:176:20:-;5596:4;5640:2;5619:23;;:5;:17;;;:23;;;;:49;;;;;5651:5;:17;;;5646:22;;:2;:22;;;5619:49;5612:56;5499:176;-1:-1:-1;;;5499:176:20:o;7466:628:5:-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1465:19:5;;;7908:60;;;;-1:-1:-1;;;7908:60:5;;12254:2:23;7908:60:5;;;12236:21:23;12293:2;12273:18;;;12266:30;12332:31;12312:18;;;12305:59;12381:18;;7908:60:5;12052:353:23;7908:60:5;-1:-1:-1;8003:10:5;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:5;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:203:23:-;-1:-1:-1;;;;;178:32:23;;;;160:51;;148:2;133:18;;14:203::o;222:131::-;-1:-1:-1;;;;;297:31:23;;287:42;;277:70;;343:1;340;333:12;358:383;435:6;443;451;504:2;492:9;483:7;479:23;475:32;472:52;;;520:1;517;510:12;472:52;559:9;546:23;578:31;603:5;578:31;:::i;:::-;628:5;680:2;665:18;;652:32;;-1:-1:-1;731:2:23;716:18;;;703:32;;358:383;-1:-1:-1;;;358:383:23:o;928:315::-;996:6;1004;1057:2;1045:9;1036:7;1032:23;1028:32;1025:52;;;1073:1;1070;1063:12;1025:52;1112:9;1099:23;1131:31;1156:5;1131:31;:::i;:::-;1181:5;1233:2;1218:18;;;;1205:32;;-1:-1:-1;;;928:315:23:o;1440:247::-;1499:6;1552:2;1540:9;1531:7;1527:23;1523:32;1520:52;;;1568:1;1565;1558:12;1520:52;1607:9;1594:23;1626:31;1651:5;1626:31;:::i;1889:953::-;2114:2;2166:21;;;2236:13;;2139:18;;;2258:22;;;2085:4;;2114:2;2299;;2317:18;;;;2358:15;;;2085:4;2401:415;2415:6;2412:1;2409:13;2401:415;;;2474:13;;2516:9;;-1:-1:-1;;;;;2512:35:23;2500:48;;2588:11;;;2582:18;2568:12;;;2561:40;2641:11;;;2635:18;2621:12;;;2614:40;2677:4;2721:11;;;2715:18;2701:12;;;2694:40;2763:4;2754:14;;;;2791:15;;;;2544:1;2430:9;2401:415;;;-1:-1:-1;2833:3:23;;1889:953;-1:-1:-1;;;;;;;1889:953:23:o;2847:456::-;2924:6;2932;2940;2993:2;2981:9;2972:7;2968:23;2964:32;2961:52;;;3009:1;3006;2999:12;2961:52;3048:9;3035:23;3067:31;3092:5;3067:31;:::i;:::-;3117:5;-1:-1:-1;3174:2:23;3159:18;;3146:32;3187:33;3146:32;3187:33;:::i;:::-;2847:456;;3239:7;;-1:-1:-1;;;3293:2:23;3278:18;;;;3265:32;;2847:456::o;3586:336::-;3788:2;3770:21;;;3827:2;3807:18;;;3800:30;-1:-1:-1;;;3861:2:23;3846:18;;3839:42;3913:2;3898:18;;3586:336::o;3927:184::-;3997:6;4050:2;4038:9;4029:7;4025:23;4021:32;4018:52;;;4066:1;4063;4056:12;4018:52;-1:-1:-1;4089:16:23;;3927:184;-1:-1:-1;3927:184:23:o;4951:274::-;-1:-1:-1;;;;;5143:32:23;;;;5125:51;;5207:2;5192:18;;5185:34;5113:2;5098:18;;4951:274::o;5682:127::-;5743:10;5738:3;5734:20;5731:1;5724:31;5774:4;5771:1;5764:15;5798:4;5795:1;5788:15;5814:127;5875:10;5870:3;5866:20;5863:1;5856:31;5906:4;5903:1;5896:15;5930:4;5927:1;5920:15;5946:125;6011:9;;;6032:10;;;6029:36;;;6045:18;;:::i;6076:135::-;6115:3;6136:17;;;6133:43;;6156:18;;:::i;:::-;-1:-1:-1;6203:1:23;6192:13;;6076:135::o;6216:168::-;6289:9;;;6320;;6337:15;;;6331:22;;6317:37;6307:71;;6358:18;;:::i;6389:127::-;6450:10;6445:3;6441:20;6438:1;6431:31;6481:4;6478:1;6471:15;6505:4;6502:1;6495:15;6521:120;6561:1;6587;6577:35;;6592:18;;:::i;:::-;-1:-1:-1;6626:9:23;;6521:120::o;6646:422::-;6735:1;6778:5;6735:1;6792:270;6813:7;6803:8;6800:21;6792:270;;;6872:4;6868:1;6864:6;6860:17;6854:4;6851:27;6848:53;;;6881:18;;:::i;:::-;6931:7;6921:8;6917:22;6914:55;;;6951:16;;;;6914:55;7030:22;;;;6990:15;;;;6792:270;;;6796:3;6646:422;;;;;:::o;7073:806::-;7122:5;7152:8;7142:80;;-1:-1:-1;7193:1:23;7207:5;;7142:80;7241:4;7231:76;;-1:-1:-1;7278:1:23;7292:5;;7231:76;7323:4;7341:1;7336:59;;;;7409:1;7404:130;;;;7316:218;;7336:59;7366:1;7357:10;;7380:5;;;7404:130;7441:3;7431:8;7428:17;7425:43;;;7448:18;;:::i;:::-;-1:-1:-1;;7504:1:23;7490:16;;7519:5;;7316:218;;7618:2;7608:8;7605:16;7599:3;7593:4;7590:13;7586:36;7580:2;7570:8;7567:16;7562:2;7556:4;7553:12;7549:35;7546:77;7543:159;;;-1:-1:-1;7655:19:23;;;7687:5;;7543:159;7734:34;7759:8;7753:4;7734:34;:::i;:::-;7804:6;7800:1;7796:6;7792:19;7783:7;7780:32;7777:58;;;7815:18;;:::i;:::-;7853:20;;7073:806;-1:-1:-1;;;7073:806:23:o;7884:140::-;7942:5;7971:47;8012:4;8002:8;7998:19;7992:4;7971:47;:::i;8029:280::-;8098:6;8151:2;8139:9;8130:7;8126:23;8122:32;8119:52;;;8167:1;8164;8157:12;8119:52;8199:9;8193:16;8249:10;8242:5;8238:22;8231:5;8228:33;8218:61;;8275:1;8272;8265:12;8314:127;8375:10;8370:3;8366:20;8363:1;8356:31;8406:4;8403:1;8396:15;8430:4;8427:1;8420:15;8796:179;8874:13;;8927:22;8916:34;;8906:45;;8896:73;;8965:1;8962;8955:12;8896:73;8796:179;;;:::o;8980:473::-;9083:6;9091;9099;9107;9115;9168:3;9156:9;9147:7;9143:23;9139:33;9136:53;;;9185:1;9182;9175:12;9136:53;9208:39;9237:9;9208:39;:::i;:::-;9198:49;;9287:2;9276:9;9272:18;9266:25;9256:35;;9331:2;9320:9;9316:18;9310:25;9300:35;;9375:2;9364:9;9360:18;9354:25;9344:35;;9398:49;9442:3;9431:9;9427:19;9398:49;:::i;:::-;9388:59;;8980:473;;;;;;;;:::o;9810:128::-;9877:9;;;9898:11;;;9895:37;;;9912:18;;:::i;10288:112::-;10320:1;10346;10336:35;;10351:18;;:::i;:::-;-1:-1:-1;10385:9:23;;10288:112::o;10405:277::-;10472:6;10525:2;10513:9;10504:7;10500:23;10496:32;10493:52;;;10541:1;10538;10531:12;10493:52;10573:9;10567:16;10626:5;10619:13;10612:21;10605:5;10602:32;10592:60;;10648:1;10645;10638:12;11505:250;11590:1;11600:113;11614:6;11611:1;11608:13;11600:113;;;11690:11;;;11684:18;11671:11;;;11664:39;11636:2;11629:10;11600:113;;;-1:-1:-1;;11747:1:23;11729:16;;11722:27;11505:250::o;11760:287::-;11889:3;11927:6;11921:13;11943:66;12002:6;11997:3;11990:4;11982:6;11978:17;11943:66;:::i;:::-;12025:16;;;;;11760:287;-1:-1:-1;;11760:287:23:o;12410:396::-;12559:2;12548:9;12541:21;12522:4;12591:6;12585:13;12634:6;12629:2;12618:9;12614:18;12607:34;12650:79;12722:6;12717:2;12706:9;12702:18;12697:2;12689:6;12685:15;12650:79;:::i;:::-;12790:2;12769:15;-1:-1:-1;;12765:29:23;12750:45;;;;12797:2;12746:54;;12410:396;-1:-1:-1;;12410:396:23:o"},"gasEstimates":{"creation":{"codeDepositCost":"1548200","executionCost":"1617","totalCost":"1549817"},"external":{"adminMultiSig()":"2461","assets()":"infinite","aumUSD()":"infinite","baseMintThreshold()":"2415","computeVolumeUSD(address,uint256)":"infinite","convertGasToFeeToken(address,uint256)":"infinite","currentMintRateUSD()":"infinite","currentNavUSD()":"infinite","dailyVolumeUSD()":"2481","dexible()":"2455","discountBps()":"infinite","dxbl()":"2434","estimateRedemption(address,uint256)":"infinite","feeTokenPriceUSD(address)":"infinite","isFeeTokenAllowed(address)":"2733","migrateV1(address)":"infinite","pause()":"infinite","paused()":"2443","redeemDXBL(address,uint256,uint256)":"infinite","resume()":"infinite","rewardTrader(address,address,uint256)":"infinite","timelockSeconds()":"2425","wrappedNativeToken()":"2457"}},"methodIdentifiers":{"adminMultiSig()":"45c6a874","assets()":"71a97305","aumUSD()":"20529bb1","baseMintThreshold()":"56168843","computeVolumeUSD(address,uint256)":"f7406fc3","convertGasToFeeToken(address,uint256)":"3931f45d","currentMintRateUSD()":"41b5774a","currentNavUSD()":"5de11890","dailyVolumeUSD()":"82131470","dexible()":"a74aa566","discountBps()":"6c1f5633","dxbl()":"6162cb91","estimateRedemption(address,uint256)":"7262f557","feeTokenPriceUSD(address)":"ce25cb4d","isFeeTokenAllowed(address)":"5d204718","migrateV1(address)":"c76380b7","pause()":"8456cb59","paused()":"5c975abb","redeemDXBL(address,uint256,uint256)":"18ac3b15","resume()":"046f7da2","rewardTrader(address,address,uint256)":"ab1094c0","timelockSeconds()":"65a1f3c3","wrappedNativeToken()":"17fcb39b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVolume\",\"type\":\"uint256\"}],\"name\":\"AppliedVolumeGoal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"stdRate\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"minRate\",\"type\":\"uint32\"}],\"name\":\"BpsChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dxblAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"DXBLRedeemed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newRate\",\"type\":\"uint32\"}],\"name\":\"DiscountChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"name\":\"FeeTokenAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"FeeTokenRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"minThreshold\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"maxThreshold\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"}],\"name\":\"MintRateChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"oldStdRate\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newStdRate\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"oldMinRate\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newMinRate\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allowedAfterTime\",\"type\":\"uint256\"}],\"name\":\"ProposedBpsChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"oldRate\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newRate\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allowedAfterTime\",\"type\":\"uint256\"}],\"name\":\"ProposedDiscountChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"removal\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allowedAfterTime\",\"type\":\"uint256\"}],\"name\":\"ProposedFeeToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"minThreshold\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"maxThreshold\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allowedAfterTime\",\"type\":\"uint256\"}],\"name\":\"ProposedMintRateChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVolume\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVolume\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allowedAfterTime\",\"type\":\"uint256\"}],\"name\":\"ProposedVolumeGoal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"adminMultiSig\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"usdValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"usdPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IComputationalView.AssetInfo[]\",\"name\":\"tokens\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aumUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"usd\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseMintThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"computeVolumeUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"volumeUSD\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"gasCost\",\"type\":\"uint256\"}],\"name\":\"convertGasToFeeToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMintRateUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentNavUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nav\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dailyVolumeUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dexible\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"discountBps\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dxbl\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dxblAmount\",\"type\":\"uint256\"}],\"name\":\"estimateRedemption\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"}],\"name\":\"feeTokenPriceUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isFeeTokenAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract V1MigrationTarget\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"migrateV1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dxblAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minOutAmount\",\"type\":\"uint256\"}],\"name\":\"redeemDXBL\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resume\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rewardTrader\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelockSeconds\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrappedNativeToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"discountBps()\":{\"notice\":\"Storage variable view functions\"},\"migrateV1(address)\":{\"notice\":\"Migrate the state of the vault to a new version. This will transfer all current state and transfer fee token balances as well. Note that \"},\"pause()\":{\"notice\":\"Used in emergency situations when we need to hault operations.\"},\"rewardTrader(address,address,uint256)\":{\"notice\":\"Modification functions\"}},\"notice\":\"The community vault controls the supply of DXBL tokens. It has minting authority on the  token contract so it can request mints/burns on behalf of traders. The Dexible contract is the only address able to request DXBL rewards for trades being made through the protocol. This contract is not upgradeable or modifiable. However, if an upgrade/fork is necessary, the contract can be paused and migrated to a new version after a grace period and only  initiated from the admin multi-sig assigned to the vault.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vault/CommunityVault.sol\":\"CommunityVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/common/LibConstants.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\n/**\\n * Constant values used elsewhere\\n */\\nlibrary LibConstants {\\n\\n    //gas that was used just to load this contract, etc.\\n    uint constant PRE_OP_GAS = 40_000;\\n    \\n    //final computation needed to compute and transfer gas fees\\n    uint constant POST_OP_GAS = 80_000;\\n    \\n\\n    uint16 constant HOUR = 3600;\\n    uint24 constant DAY = 86400;\\n\\n    //storage and calldata requirements significantly higher when using more than \\n    //6decs for USD price precision\\n    uint constant USD_PRECISION = 1e6;\\n\\n    //1_000_000 as a 6-decimal number\\n    uint constant MM_VOLUME = 1e12;\\n\\n    //when doing asset-related math, increase precision accordingly.\\n    uint constant PRICE_PRECISION = 1e30;\\n\\n    //========================================================================\\n    // Assignable roles for role-managed contracts\\n    //========================================================================\\n\\n    //allowed to add relays and other role managers\\n    string public constant ROLE_MGR = \\\"ROLE_MANAGER\\\";\\n\\n    //allowed to submit execution requests\\n    string public constant RELAY = \\\"RELAY\\\";\\n\\n}\",\"keccak256\":\"0xeb7a3fc112dc919db6dfb1f43c52bd068f14155d3fd7717871d9b1612e4a77a7\",\"license\":\"Unlicense\"},\"contracts/token/IDXBL.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\ninterface IDXBL is IERC20, IERC20Metadata {\\n    struct FeeRequest {\\n        bool referred;\\n        address trader;\\n        uint amt;\\n        uint dxblBalance;\\n        uint16 stdBpsRate;\\n        uint16 minBpsRate;\\n    }\\n\\n    function minter() external view returns (address);\\n    function discountPerTokenBps() external view returns(uint32);\\n\\n    function mint(address acct, uint amt) external;\\n    function burn(address holder, uint amt) external;\\n    function setDiscountRate(uint32 discount) external;\\n    function setNewMinter(address minter) external;\\n    function computeDiscountedFee(FeeRequest calldata request) external view returns(uint);\\n}\",\"keccak256\":\"0x5c7e94839ff1ff8d19ed800cbb7a9af9ea24d178ec1cca6c84c0b914636494ef\",\"license\":\"Unlicense\"},\"contracts/vault/CommunityVault.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\nimport \\\"./ICommunityVault.sol\\\";\\nimport \\\"./baseContracts/StorageView.sol\\\";\\nimport \\\"../token/IDXBL.sol\\\";\\nimport \\\"./VaultStorage.sol\\\";\\nimport \\\"./baseContracts/V1Migration.sol\\\";\\nimport \\\"./baseContracts/RewardHandler.sol\\\";\\nimport \\\"./baseContracts/ComputationalView.sol\\\";\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\n\\n/**\\n * The community vault controls the supply of DXBL tokens. It has minting authority on the \\n * token contract so it can request mints/burns on behalf of traders. The Dexible contract\\n * is the only address able to request DXBL rewards for trades being made through the protocol.\\n *\\n * This contract is not upgradeable or modifiable. However, if an upgrade/fork is necessary,\\n * the contract can be paused and migrated to a new version after a grace period and only \\n * initiated from the admin multi-sig assigned to the vault.\\n */\\n\\ncontract CommunityVault is StorageView, RewardHandler, ComputationalView, V1Migration, ICommunityVault {\\n    using SafeERC20 for IERC20;\\n\\n    modifier onlyAdmin() {\\n        VaultStorage.VaultData storage vs = VaultStorage.load();\\n        require(msg.sender == vs.adminMultiSig, \\\"Unauthorized\\\");\\n        _;\\n    }\\n\\n    function isFeeTokenAllowed(address token) external view returns (bool){\\n        VaultStorage.VaultData storage vs = VaultStorage.load();\\n        return address(vs.allowedFeeTokens[token].feed) != address(0);\\n    }\\n\\n    function redeemDXBL(address rewardToken, uint dxblAmount, uint minOutAmount) public {\\n        VaultStorage.VaultData storage rs = VaultStorage.load();\\n        //get the trader's balance to make sure they actually have tokens to burn\\n        uint traderBal = rs.dxbl.balanceOf(msg.sender);\\n        require(traderBal >= dxblAmount, \\\"Insufficient DXBL balance to redeem\\\");\\n        \\n        //estimate how much we could withdraw if there is sufficient reward tokens available\\n        uint wdAmt = estimateRedemption(rewardToken, dxblAmount);\\n\\n        /**\\n        * NOTE: is it likely that there will be dust remaining for the asset due to USD\\n        * rounding/precision.\\n        *\\n        * It will be redeemable once the balance acrues enough for the\\n        * next burn request\\n        */\\n\\n        //how much does the vault own?\\n        uint vaultBal = IERC20(rewardToken).balanceOf(address(this));\\n\\n        //do we have enough to cover the withdraw?\\n        if(wdAmt > vaultBal) {\\n            //vault doesn't have sufficient funds to cover. See if meets trader's \\n            //min expectations\\n            if(vaultBal >= minOutAmount) {\\n                wdAmt = vaultBal;\\n            } else {\\n                revert(\\\"Insufficient asset balance to produce expected withdraw amount\\\");\\n            }\\n        }\\n        //if all good, transfer withdraw amount to caller\\n        IERC20(rewardToken).safeTransfer(msg.sender, wdAmt);\\n\\n        //burn the tokens\\n        rs.dxbl.burn(msg.sender, dxblAmount);\\n        emit DXBLRedeemed(msg.sender, dxblAmount, rewardToken, wdAmt);\\n    }\\n\\n    /**\\n     * Used in emergency situations when we need to hault operations.\\n     */\\n    function pause() public onlyAdmin {\\n        VaultStorage.VaultData storage vs = VaultStorage.load();\\n        vs.paused = true;\\n    }\\n\\n    function resume() public onlyAdmin {\\n        VaultStorage.VaultData storage vs = VaultStorage.load();\\n        vs.paused = false;\\n    }\\n\\n\\n    /*\\n    \\n    fallback() external {\\n        \\n        bytes4 sel = _getSelector();\\n        address addr;\\n        if(sel == IStorageView.discountBps.selector ||\\n           sel == IStorageView.dailyVolumeUSD.selector ||\\n           sel == IStorageView.paused.selector ||\\n           sel == IStorageView.adminMultiSig.selector ||\\n           sel == IStorageView.dxbl.selector ||\\n           sel == IStorageView.dexible.selector ||\\n           sel == IStorageView.wrappedNativeToken.selector ||\\n           sel == IStorageView.timelockSeconds.selector ||\\n           sel == IStorageView.baseMintThreshold.selector\\n        ) {\\n            addr = address(storageView);\\n        }\\n\\n        assembly {\\n            //and call it\\n            calldatacopy(0x0, 0x0, calldatasize())\\n            let success := delegatecall(sub(gas(), 10000), addr, 0x0, calldatasize(), 0, 0)\\n            let retSz := returndatasize()\\n            returndatacopy(0, 0, retSz)\\n            switch success\\n                case 0 {\\n                    revert(0, retSz)\\n                }\\n                default {\\n                    return(0, retSz)\\n                }\\n        }\\n    }\\n\\n    function _getSelector() internal pure returns (bytes4 sel) {\\n        assembly {\\n            let inputData := mload(0x40)\\n            sel := and(shr(inputData, 224), 0xffffffff)\\n        }\\n    }\\n    */\\n}\",\"keccak256\":\"0xf0be5972f5fe3c60c5897ab58ac5ee90acc7403c23a98dd65ba8ce4fad187e8c\",\"license\":\"Unlicense\"},\"contracts/vault/ICommunityVault.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"./ICommunityVaultEvents.sol\\\";\\nimport \\\"./V1Migrateable.sol\\\";\\nimport \\\"./IStorageView.sol\\\";\\nimport \\\"./IComputationalView.sol\\\";\\nimport \\\"./IRewardHandler.sol\\\";\\n\\ninterface ICommunityVault is IStorageView, IComputationalView, ICommunityVaultEvents, V1Migrateable {\\n\\n\\n    function isFeeTokenAllowed(address tokens) external view returns (bool);\\n    \\n    function redeemDXBL(address feeToken, uint dxblAmount, uint minOutAmount) external;\\n    function pause() external;\\n    function resume() external;\\n}\",\"keccak256\":\"0x56b070bfd6bb9a669afaf30682a35b914a30a7edab8d76e62bc8447247ac2191\",\"license\":\"Unlicense\"},\"contracts/vault/ICommunityVaultEvents.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\ninterface ICommunityVaultEvents {\\n\\n    event ProposedDiscountChange(uint32 oldRate, uint32 newRate, uint allowedAfterTime);\\n    event DiscountChanged(uint32 newRate);\\n\\n    event ProposedBpsChange(uint32 oldStdRate, uint32 newStdRate, uint32 oldMinRate, uint32 newMinRate, uint allowedAfterTime);\\n    event BpsChanged(uint32 stdRate, uint32 minRate);\\n\\n    event ProposedVolumeGoal(uint oldVolume, uint newVolume, uint allowedAfterTime);\\n    event AppliedVolumeGoal(uint newVolume);\\n\\n    event ProposedMintRateChange(uint16 minThreshold, uint16 maxThreshold, uint percentage, uint allowedAfterTime);\\n    event MintRateChange(uint16 minThreshold, uint16 maxThreshold, uint percentage);\\n    \\n    event ProposedFeeToken(address indexed token, address indexed priceFeed, bool removal, uint allowedAfterTime);\\n    event FeeTokenAdded(address indexed token, address indexed priceFeed);\\n    event FeeTokenRemoved(address indexed token);\\n    event DXBLRedeemed(address holder, uint dxblAmount, address rewardToken, uint rewardAmount);\\n}\",\"keccak256\":\"0x0903cef0a8028cae314a08819fb2922753fc8c97bcd35e573b7d2a681490e48d\",\"license\":\"Unlicense\"},\"contracts/vault/IComputationalView.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\ninterface IComputationalView {\\n\\n    struct AssetInfo {\\n        address token;\\n        uint balance;\\n        uint usdValue;\\n        uint usdPrice;\\n    }\\n\\n    function convertGasToFeeToken(address feeToken, uint gasCost) external view returns (uint);\\n    function estimateRedemption(address feeToken, uint dxblAmount) external view returns(uint);\\n    function feeTokenPriceUSD(address feeToken) external view returns (uint);\\n    function aumUSD() external view returns(uint);\\n    function currentNavUSD() external view returns(uint);\\n    function assets() external view returns (AssetInfo[] memory);\\n    function currentMintRateUSD() external view returns (uint);\\n    function computeVolumeUSD(address feeToken, uint amount) external view returns(uint);\\n\\n}\",\"keccak256\":\"0xc0e46b88fd0f1381ada98e1e202068fefb7dca14d74e273e1d5bd264966c9a1d\",\"license\":\"Unlicense\"},\"contracts/vault/IPriceFeed.sol\":{\"content\":\"\\n//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\n/**\\n * Interface for Chainlink oracle feeds\\n */\\ninterface IPriceFeed {\\n    function latestRoundData() external view\\n    returns (\\n        uint80 roundId,\\n        int256 answer,\\n        uint256 startedAt,\\n        uint256 updatedAt,\\n        uint80 answeredInRound\\n    );\\n    function decimals() external view returns (uint8);\\n}\",\"keccak256\":\"0x151d6516db0e8639f2c0aae6a0d3dd7fc9befc2d179ac8b08ea8830253cbb544\",\"license\":\"Unlicense\"},\"contracts/vault/IRewardHandler.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\ninterface IRewardHandler {\\n\\n    /**\\n     * Modification functions\\n     */\\n    function rewardTrader(address trader, address feeToken, uint amount) external;\\n}\",\"keccak256\":\"0x103b1b3c548036a1ba6fefb5bf923eda05a1a66732e05c8f2553b00625c6aabd\",\"license\":\"Unlicense\"},\"contracts/vault/IStorageView.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\ninterface IStorageView {\\n\\n    /**\\n     * Storage variable view functions\\n     */\\n    function discountBps() external view returns(uint32);\\n    function dailyVolumeUSD() external view returns(uint);\\n    function paused() external view returns (bool);\\n    function adminMultiSig() external view returns (address);\\n    function dxbl() external view returns (address);\\n    function dexible() external view returns (address);\\n    function wrappedNativeToken() external view returns (address);\\n    function timelockSeconds() external view returns (uint32);\\n    function baseMintThreshold() external view returns (uint);\\n}\",\"keccak256\":\"0xfd90e37d4ece93032adbdfc402b663b61930a293c576295c792c16bea65c9195\",\"license\":\"Unlicense\"},\"contracts/vault/V1Migrateable.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\nimport \\\"./VaultStorage.sol\\\";\\n\\ninterface V1MigrationTarget {\\n    /**\\n     * Call from current vault to migrate the state of the old vault to the new one. \\n     */\\n    function migrationFromV1(VaultStorage.VaultMigrationV1 memory data) external;\\n}\\n\\ninterface V1Migrateable {\\n\\n    /**\\n     * Migrate the vault to a new vault address that implements the target interface\\n     * to receive this vault's state. This will transfer all fee token assets to the \\n     * new vault.\\n     */\\n    function migrateV1(V1MigrationTarget newVault) external;\\n    \\n}\",\"keccak256\":\"0x60a586c3996864d9ae13ddd63413b7efad36431f586487abfdf2f610c1fb62bb\",\"license\":\"Unlicense\"},\"contracts/vault/VaultStorage.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\nimport \\\"../token/IDXBL.sol\\\";\\nimport \\\"./IPriceFeed.sol\\\";\\n\\nlibrary VaultStorage {\\n\\n    bytes32 constant VAULT_STORAGE_KEY = 0xbfa76ec2967ed7f8d3d40cd552f1451ab03573b596bfce931a6a016f7733078c;\\n\\n    /****************************************************************************\\n     * Initialization Config Settings\\n     *****************************************************************************/\\n    //mint rate bucket\\n    struct MintRateRangeConfig {\\n        uint16 minMMVolume;\\n        uint16 maxMMVolume;\\n        uint rate;\\n    }\\n\\n    //fee token and its associated chainlink feed\\n    struct FeeTokenConfig {\\n        address[] feeTokens;\\n        address[] priceFeeds;\\n    }\\n\\n    //initialize config to intialize storage\\n    struct VaultConfig {\\n\\n        //the address of the wrapped native token\\n        address wrappedNativeToken;\\n\\n        //address of the multisig that will administer this vault\\n        address adminMultiSig;\\n\\n        //starting volume needed to mint a single DXBL token. This increases\\n        //as we get closer to reaching the daily goal\\n        uint baseMintThreshold;\\n\\n        //initial rate ranges to apply\\n        MintRateRangeConfig[] rateRanges;\\n\\n        //set of fee token/price feed pairs to initialize with\\n        FeeTokenConfig feeTokenConfig;\\n    }\\n\\n    /****************************************************************************\\n     * Stored Settings\\n     *****************************************************************************/\\n    //stored mint rate range\\n    struct MintRateRange {\\n        uint16 minMMVolume;\\n        uint16 maxMMVolume;\\n        uint rate;\\n        uint index;\\n    }\\n\\n    //price feed for a fee token\\n    struct PriceFeed {\\n        IPriceFeed feed;\\n        uint8 decimals;\\n    }\\n\\n    /*****************************************************************************************\\n     * STORAGE\\n    ******************************************************************************************/\\n    \\n    \\n    struct VaultData {\\n        //whether the vault is paused\\n        bool paused;\\n\\n        //admin multi sig\\n        address adminMultiSig;\\n\\n        //token address\\n        IDXBL dxbl;\\n\\n        //dexible settlement contract that is allowed to call the vault\\n        address dexible;\\n\\n        //wrapped native asset address for gas computation\\n        address wrappedNativeToken;\\n\\n        //time before migration allowed\\n        uint32 timelockSeconds;\\n\\n        //base volume needed to mint a single DXBL token. This increases\\n        //as we get closer to reaching the daily goal\\n        uint baseMintThreshold;\\n\\n        //current daily volume adjusted each hour\\n        uint currentVolume;\\n\\n        //to compute what hourly slots to deduct from 24hr window\\n        uint lastTradeTimestamp;\\n\\n        //can migrate the contract to a new vault after this time\\n        uint migrateAfterTime;\\n\\n        //all known fee tokens. Some may be inactive\\n        IERC20[] feeTokens;\\n\\n        //the current volume range we're operating in for mint rate\\n        MintRateRange currentMintRate;\\n\\n        //The ranges of 24hr volume and their percentage-per-MM increase to \\n        //mint a single token\\n        MintRateRange[] mintRateRanges;\\n\\n        //hourly volume totals to adjust current volume every 24 hr slot\\n        uint[24] hourlyVolume;\\n\\n        //fee token decimals\\n        mapping(address => uint8) tokenDecimals;\\n\\n        //all allowed fee tokens mapped to their price feed address\\n        mapping(address => PriceFeed) allowedFeeTokens;\\n    }\\n\\n    /**\\n     * If a migration occurs from the V1 vault to a new vault, this structure is forwarded\\n     * after all fee token balances are transferred. It is expected that the new vault will have\\n     * its fee token, minting rates, and starting mint rates mapped out as part of its deployment.\\n     * The migration is intended to get the new vault into a state where it knows the last 24hrs\\n     * of volume and can pick up where this vault leaves off but with new settings and capabilities.\\n     */\\n    struct VaultMigrationV1 {\\n        //current daily volume adjusted each hour\\n        uint currentVolume;\\n\\n        //to compute what hourly slots to deduct from 24hr window\\n        uint lastTradeTimestamp;\\n\\n        //hourly volume totals to adjust in new contract\\n        uint[24] hourlyVolume;\\n\\n        //the current volume range we're operating in for mint rate\\n        MintRateRange currentMintRate;\\n    }\\n\\n    function load() internal pure returns (VaultData storage ds) {\\n        assembly { ds.slot := VAULT_STORAGE_KEY }\\n    }\\n}\",\"keccak256\":\"0xe658404b7cd8ed0887d839acedf14011c1478a85e79c28a7d571f87f9e30784b\",\"license\":\"Unlicense\"},\"contracts/vault/baseContracts/ComputationalView.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\nimport \\\"../VaultStorage.sol\\\";\\nimport \\\"../IComputationalView.sol\\\";\\nimport \\\"../../common/LibConstants.sol\\\";\\n\\ncontract ComputationalView is IComputationalView {\\n\\n    function convertGasToFeeToken(address feeToken, uint gasCost) public view returns (uint){\\n        VaultStorage.VaultData storage rs = VaultStorage.load();\\n\\n        if(feeToken == rs.wrappedNativeToken) {\\n            //already in native units\\n            return gasCost;\\n        }\\n        uint np = _getPrice(rs.allowedFeeTokens[rs.wrappedNativeToken]);\\n        uint ftp = _getPrice(rs.allowedFeeTokens[feeToken]);\\n        uint ftpNative = (np*LibConstants.PRICE_PRECISION)/ftp;\\n        uint ftpUnits = (ftpNative * gasCost) / LibConstants.PRICE_PRECISION;\\n        return (ftpUnits * (10**rs.tokenDecimals[feeToken])) / 1e18; //native is always 18decs\\n    }\\n\\n    function estimateRedemption(address rewardToken, uint dxblAmount) public view returns(uint){\\n        VaultStorage.VaultData storage rs =VaultStorage.load();\\n        uint nav = currentNavUSD();\\n         //convert nav to price-precision units\\n        nav = (nav * LibConstants.PRICE_PRECISION) / LibConstants.USD_PRECISION;\\n        \\n        //we need to know the value of each token in rewardToken units\\n        //start by getting the USD price of reward token\\n        uint ftUSD = feeTokenPriceUSD(rewardToken);\\n\\n        uint8 ftDecs = rs.tokenDecimals[rewardToken];\\n\\n        //Divide nav of each token by the price of each reward token expanding \\n        //precision to include the fee-token decimals\\n        uint ftUnitPrice = (nav*(10**ftDecs))/ftUSD;\\n\\n        //compute how much rewardToken to withdraw based on unit price of each DXBL\\n        //in fee-token units. Have to remove the dexible token precision (18)\\n        return (dxblAmount * ftUnitPrice)/1e18;\\n    }\\n\\n    function feeTokenPriceUSD(address feeToken) public view returns (uint){\\n        VaultStorage.VaultData storage rs = VaultStorage.load();\\n        VaultStorage.PriceFeed storage pf = rs.allowedFeeTokens[feeToken];\\n        require(address(pf.feed) != address(0), \\\"Unsupported fee token\\\");\\n        return _getPrice(pf);\\n    }\\n\\n    function computeVolumeUSD(address feeToken, uint amount) public view returns(uint volumeUSD) {\\n        VaultStorage.VaultData storage fs = VaultStorage.load();\\n        VaultStorage.PriceFeed storage pf = fs.allowedFeeTokens[feeToken];\\n\\n        //price is in USD with 30decimal precision\\n        uint ftp = _getPrice(pf);\\n\\n        (uint v,) = _toUSD(fs, IERC20(feeToken), ftp, amount);\\n        volumeUSD = v;\\n    }\\n\\n    function aumUSD() public view returns(uint usd){\\n        VaultStorage.VaultData storage fs = VaultStorage.load();\\n\\n        //for each fee token allowed in the vault\\n        //move to memory so we're not accessing storage in loop\\n        IERC20[] memory feeTokens = fs.feeTokens;\\n        for(uint i=0;i<feeTokens.length;++i) {\\n            IERC20 ft = IERC20(feeTokens[i]);\\n            VaultStorage.PriceFeed storage pf = fs.allowedFeeTokens[address(ft)];\\n            \\n            //make sure fee token still active\\n            //get the price of the asset\\n            uint price = _getPrice(pf);\\n            //use it to compute USD value\\n            (uint _usd,) = _toUSD(fs, ft, price, 0);\\n            usd += _usd;\\n        }\\n    }\\n\\n    function currentNavUSD() public view returns(uint nav){\\n        //console.log(\\\"--------------- START COMPUTE NAV ---------------------\\\");\\n        VaultStorage.VaultData storage rs = VaultStorage.load();\\n\\n        //get the total supply of dxbl tokens\\n        uint supply = rs.dxbl.totalSupply();\\n\\n        //get the total USD under management by this vault\\n        uint aum = aumUSD();\\n\\n        //if either is 0, the nav is 0\\n        if(supply == 0 || aum == 0) {\\n            return 0;\\n        }\\n         \\n        //supply is 18decs while aum and nav are expressed in USD units\\n        nav = (aum*1e18) / supply;\\n      //  console.log(\\\"--------------- END COMPUTE NAV ---------------------\\\");\\n    }\\n\\n    function assets() public view returns (IComputationalView.AssetInfo[] memory tokens){\\n        /**\\n         * RISK: Must limit the fee token count to avoid miner not allowing call due to high\\n         * gas usage\\n         */\\n        VaultStorage.VaultData storage fs = VaultStorage.load();\\n\\n        //create in-memory structure only for active fee tokens\\n        tokens = new IComputationalView.AssetInfo[](fs.feeTokens.length);\\n\\n        //count offset of return tokens\\n        uint cnt = 0;\\n        \\n        //copy fee tokens in memory to we're not accessing storage in loop\\n        IERC20[] memory feeTokens = fs.feeTokens;\\n        for(uint i=0;i<feeTokens.length;++i) {\\n            IERC20 ft = feeTokens[i];\\n            VaultStorage.PriceFeed storage pf = fs.allowedFeeTokens[address(ft)];\\n\\n            //lookup USD price of asset in 30-dec units\\n            uint price = _getPrice(pf);\\n\\n            //convert to total usd-precision USD value\\n            (uint usd, uint bal) = _toUSD(fs, ft, price, 0);\\n\\n            tokens[cnt] = IComputationalView.AssetInfo({\\n                token: address(ft),\\n                balance: bal,\\n                usdValue: usd,\\n                usdPrice: (price*LibConstants.USD_PRECISION) / LibConstants.PRICE_PRECISION\\n            });\\n            ++cnt;\\n        }\\n    }\\n\\n    function currentMintRateUSD() public view returns (uint rate){\\n        /**\\n        * formula for mint rate:\\n        * startingRate+(startingRate*(ratePerMM*MM_vol))\\n        */\\n        VaultStorage.VaultData storage rs = VaultStorage.load();\\n\\n        uint16 normalizedMMInVolume = uint16(rs.currentVolume / LibConstants.MM_VOLUME);\\n\\n        //mint rate is a bucket with min/max volume thresholds and establishes how many \\n        //percentage points per million to apply to the starting mint rate \\n        uint percIncrease = rs.currentMintRate.rate * normalizedMMInVolume;\\n\\n        //mint rate percentage is expressed in 18-dec units so have to divide that out before adding to base\\n        rate = rs.baseMintThreshold + ((rs.baseMintThreshold * percIncrease)/1e18);\\n    }\\n\\n\\n    function _getPrice(VaultStorage.PriceFeed storage pf) internal view returns (uint) {\\n        //get latest price\\n        (   ,\\n            int256 answer,\\n            ,\\n            uint256 updatedAt,\\n        ) = pf.feed.latestRoundData();\\n\\n        //make sure price valid\\n        require(answer > 0, \\\"No price data available\\\");\\n\\n        //10min buffer around 24hr window for chainlink feed to update prices\\n        uint stale = block.timestamp - LibConstants.DAY - 600;\\n        require(updatedAt > stale, \\\"Stale price data\\\");\\n        return (uint256(answer) * LibConstants.PRICE_PRECISION) / (10**pf.decimals);\\n    }\\n\\n    /**\\n     * Convert an assets total balance to USD\\n     */\\n    function _toUSD(VaultStorage.VaultData storage fs, IERC20 token, uint price, uint amt) internal view returns(uint usd, uint bal) {\\n        bal = amt;\\n        if(bal == 0) {\\n            bal = token.balanceOf(address(this));\\n        }\\n        \\n        //compute usd in raw form (fee-token units + price-precision units) but account for\\n        //USD precision\\n        usd = (bal * price)*LibConstants.USD_PRECISION;\\n\\n        //then divide out the fee token and price-precision units\\n        usd /= (10**fs.tokenDecimals[address(token)]*LibConstants.PRICE_PRECISION);\\n        \\n    }\\n}\",\"keccak256\":\"0x666d8a00f6a0b345b2b32a58cf812dbae97f82fb681df3a48a40ed3ddb41094f\",\"license\":\"Unlicense\"},\"contracts/vault/baseContracts/RewardHandler.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\nimport \\\"../VaultStorage.sol\\\";\\nimport \\\"../IComputationalView.sol\\\";\\nimport \\\"../../common/LibConstants.sol\\\";\\nimport \\\"./ComputationalView.sol\\\";\\nimport \\\"../IRewardHandler.sol\\\";\\n\\nabstract contract RewardHandler is IRewardHandler {\\n\\n    modifier onlyDexible() {\\n        VaultStorage.VaultData storage vs = VaultStorage.load();\\n        require(msg.sender == vs.dexible, \\\"Unauthorized\\\");\\n        _;\\n    }\\n\\n    /**\\n     * Modification functions\\n     */\\n    function rewardTrader(address trader, address feeToken, uint amount) external override onlyDexible {\\n        VaultStorage.VaultData storage rs = VaultStorage.load();\\n        uint volumeUSD = IComputationalView(address(this)).computeVolumeUSD(feeToken, amount);\\n\\n        //determine the mint rate\\n        uint rate = IComputationalView(address(this)).currentMintRateUSD();\\n\\n        //make the volume adjustment to the pool\\n        _adjustVolume(volumeUSD);\\n\\n        //get the number of DXBL per $1 of volume\\n        uint tokens = (volumeUSD*1e18) / rate;\\n\\n        //we are minter on token, so request to mint tokens\\n        rs.dxbl.mint(trader, tokens);\\n    }\\n\\n\\n    function _adjustVolume(uint volumeUSD) internal {\\n        VaultStorage.VaultData storage rs = VaultStorage.load();\\n\\n        //get the current hour\\n        uint lastTrade = rs.lastTradeTimestamp;\\n\\n        //record when we last adjusted volume\\n        rs.lastTradeTimestamp = block.timestamp;\\n        uint newVolume = volumeUSD;\\n        if(lastTrade > 0 && lastTrade <= (block.timestamp - LibConstants.DAY)) {\\n            delete rs.hourlyVolume;\\n        } else {\\n            //otherwise, since we never rolled over 24hrs, just delete the volume\\n            //that accrued 24hrs ago\\n            uint hr = (block.timestamp % LibConstants.DAY) / LibConstants.HOUR;\\n            uint slot = 0;\\n            //remove guard for some efficiency gain\\n            unchecked{slot = (hr+1)%24; }\\n\\n            //get the volume bin 24hrs ago by wrapping around to next hour in 24hr period\\n            uint yesterdayTotal = rs.hourlyVolume[slot];\\n\\n            //if we get called multiple times in the block, the same hourly total\\n            //would be deducted multiple times. So we reset it here so that we're \\n            //not deducting it multiple times in the hour. Only the first deduction\\n            //will be applied and 0'd out.\\n            rs.hourlyVolume[slot] = 0;\\n\\n            //add new volume to current hour bin\\n            rs.hourlyVolume[hr] += volumeUSD;\\n\\n            //manipulate volume in memory not storage\\n            newVolume = rs.currentVolume + volumeUSD;\\n\\n            //Remove volume from 24hr's ago if there was anything\\n            if(yesterdayTotal > 0) {\\n                //note that because currentVolume includes yesterday's, then this subtraction \\n                //is safe.\\n                newVolume -= yesterdayTotal;\\n            } \\n        }\\n        rs.currentVolume = newVolume;\\n        _adjustMintRate(rs, uint16(newVolume / LibConstants.MM_VOLUME));\\n    }\\n\\n    /**\\n     * Make an adjustment to the mint rate if the 24hr volume falls into a new rate bucket\\n     */\\n    function _adjustMintRate(VaultStorage.VaultData storage rs, uint16 normalizedMMInVolume) internal {\\n        \\n        VaultStorage.MintRateRange memory mr = rs.currentMintRate;\\n        //if the current rate bucket's max is less than current normalized volume\\n        if(mr.maxMMVolume <= normalizedMMInVolume) {\\n            //we must have increased volume so we have to adjust the rate up\\n            _adjustMintRateUp(rs, normalizedMMInVolume);\\n            //otherwise if the current rate's min is more than the current volume\\n        } else if(mr.minMMVolume >= normalizedMMInVolume) {\\n            //it means we're trading less volume than the current rate, so we need\\n            //to adjust it down\\n            _adjustMintRateDown(rs, normalizedMMInVolume);\\n        } //else rate stays the same\\n    }\\n\\n    /**\\n     * Increase the minimum volume required to mint a single token\\n     */\\n    function _adjustMintRateUp(VaultStorage.VaultData storage rs, uint16 mm) internal {\\n        VaultStorage.MintRateRange memory mr = rs.currentMintRate;\\n        while(!_rateInRange(mr,mm)) {\\n            //move to the next higher rate if one is configured, otherwise stay where we are\\n            VaultStorage.MintRateRange storage next = rs.mintRateRanges[mr.index + 1];\\n            if(next.rate == 0) {\\n                //reached highest rate, that will be the capped rate \\n                break;\\n            }\\n            mr = next;\\n        }\\n\\n        //don't waste gas storing if not changed\\n        if(rs.currentMintRate.rate != mr.rate) {\\n            rs.currentMintRate = mr;\\n        }\\n        \\n    }\\n    \\n    /**\\n     * Decrease minimum volume required to mint a DXBL token\\n     */\\n    function _adjustMintRateDown(VaultStorage.VaultData storage rs, uint16 mm) internal {\\n        VaultStorage.MintRateRange memory mr = rs.currentMintRate;\\n        while(!_rateInRange(mr,mm)) {\\n            if(mr.index > 0) {\\n                //move to the next higher rate if one is configured, otherwise stay where we are\\n                VaultStorage.MintRateRange storage next = rs.mintRateRanges[mr.index - 1];\\n                mr = next;\\n            } else {\\n                //we go to the lowest rate then\\n                break;\\n            }\\n        }\\n        rs.currentMintRate = mr;\\n    }\\n\\n    //test to see if volume is range for a rate bucket\\n    function _rateInRange(VaultStorage.MintRateRange memory range, uint16 mm) internal pure returns (bool) {\\n        return range.minMMVolume <= mm && mm < range.maxMMVolume;\\n    }\\n    \\n}\",\"keccak256\":\"0x9fff5f43b31898ff7b94c0db40ea9e3d3d5259cc75e9fec6ffbbe918b7dbfcc4\",\"license\":\"Unlicense\"},\"contracts/vault/baseContracts/StorageView.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\nimport \\\"../VaultStorage.sol\\\";\\nimport \\\"../IStorageView.sol\\\";\\n\\ncontract StorageView is IStorageView {\\n\\n    function discountBps() external view returns(uint32) {\\n        return VaultStorage.load().dxbl.discountPerTokenBps();\\n    }\\n\\n    function dailyVolumeUSD() external view returns(uint) {\\n        return VaultStorage.load().currentVolume;\\n    }\\n\\n    function paused() external view returns (bool) {\\n        return VaultStorage.load().paused;\\n    }\\n\\n    function adminMultiSig() external view returns (address) {\\n        return VaultStorage.load().adminMultiSig;\\n    }\\n\\n    function dxbl() external view returns (address) {\\n        return address(VaultStorage.load().dxbl);\\n    }\\n\\n    function dexible() external view returns (address) {\\n        return VaultStorage.load().dexible;\\n    }\\n\\n    function wrappedNativeToken() external view returns (address) {\\n        return VaultStorage.load().wrappedNativeToken;\\n    }\\n\\n    function timelockSeconds() external view returns (uint32) {\\n        return VaultStorage.load().timelockSeconds;\\n    }\\n\\n    function baseMintThreshold() external view returns (uint) {\\n        return VaultStorage.load().baseMintThreshold;\\n    }\\n}\",\"keccak256\":\"0x4dde533035c7984af397a11b233bfe59eab2ee3e4ef76b3605ffdfc804dce438\",\"license\":\"Unlicense\"},\"contracts/vault/baseContracts/V1Migration.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\nimport \\\"../V1Migrateable.sol\\\";\\n\\nabstract contract V1Migration is V1Migrateable {\\n\\n    /**\\n     * Migrate the state of the vault to a new version. This will transfer all current state\\n     * and transfer fee token balances as well. Note that \\n     */\\n    function migrateV1(V1MigrationTarget target) external {\\n        \\n    }\\n}\",\"keccak256\":\"0x4e33783440b237b1650f12112f70b753d222412bc5ff9bd6f1a46f89eb614e96\",\"license\":\"Unlicense\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"discountBps()":{"notice":"Storage variable view functions"},"migrateV1(address)":{"notice":"Migrate the state of the vault to a new version. This will transfer all current state and transfer fee token balances as well. Note that "},"pause()":{"notice":"Used in emergency situations when we need to hault operations."},"rewardTrader(address,address,uint256)":{"notice":"Modification functions"}},"notice":"The community vault controls the supply of DXBL tokens. It has minting authority on the  token contract so it can request mints/burns on behalf of traders. The Dexible contract is the only address able to request DXBL rewards for trades being made through the protocol. This contract is not upgradeable or modifiable. However, if an upgrade/fork is necessary, the contract can be paused and migrated to a new version after a grace period and only  initiated from the admin multi-sig assigned to the vault.","version":1}}},"contracts/vault/ICommunityVault.sol":{"ICommunityVault":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newVolume","type":"uint256"}],"name":"AppliedVolumeGoal","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"stdRate","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"minRate","type":"uint32"}],"name":"BpsChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"holder","type":"address"},{"indexed":false,"internalType":"uint256","name":"dxblAmount","type":"uint256"},{"indexed":false,"internalType":"address","name":"rewardToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"rewardAmount","type":"uint256"}],"name":"DXBLRedeemed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"newRate","type":"uint32"}],"name":"DiscountChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"priceFeed","type":"address"}],"name":"FeeTokenAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"}],"name":"FeeTokenRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"minThreshold","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"maxThreshold","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"percentage","type":"uint256"}],"name":"MintRateChange","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"oldStdRate","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"newStdRate","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"oldMinRate","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"newMinRate","type":"uint32"},{"indexed":false,"internalType":"uint256","name":"allowedAfterTime","type":"uint256"}],"name":"ProposedBpsChange","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"oldRate","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"newRate","type":"uint32"},{"indexed":false,"internalType":"uint256","name":"allowedAfterTime","type":"uint256"}],"name":"ProposedDiscountChange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"priceFeed","type":"address"},{"indexed":false,"internalType":"bool","name":"removal","type":"bool"},{"indexed":false,"internalType":"uint256","name":"allowedAfterTime","type":"uint256"}],"name":"ProposedFeeToken","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"minThreshold","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"maxThreshold","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"percentage","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"allowedAfterTime","type":"uint256"}],"name":"ProposedMintRateChange","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldVolume","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVolume","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"allowedAfterTime","type":"uint256"}],"name":"ProposedVolumeGoal","type":"event"},{"inputs":[],"name":"adminMultiSig","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"assets","outputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"usdValue","type":"uint256"},{"internalType":"uint256","name":"usdPrice","type":"uint256"}],"internalType":"struct IComputationalView.AssetInfo[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"aumUSD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseMintThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"feeToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"computeVolumeUSD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"feeToken","type":"address"},{"internalType":"uint256","name":"gasCost","type":"uint256"}],"name":"convertGasToFeeToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentMintRateUSD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentNavUSD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"dailyVolumeUSD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"dexible","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"discountBps","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"dxbl","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"feeToken","type":"address"},{"internalType":"uint256","name":"dxblAmount","type":"uint256"}],"name":"estimateRedemption","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"feeToken","type":"address"}],"name":"feeTokenPriceUSD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokens","type":"address"}],"name":"isFeeTokenAllowed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract V1MigrationTarget","name":"newVault","type":"address"}],"name":"migrateV1","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"feeToken","type":"address"},{"internalType":"uint256","name":"dxblAmount","type":"uint256"},{"internalType":"uint256","name":"minOutAmount","type":"uint256"}],"name":"redeemDXBL","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"resume","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"timelockSeconds","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"wrappedNativeToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"adminMultiSig()":"45c6a874","assets()":"71a97305","aumUSD()":"20529bb1","baseMintThreshold()":"56168843","computeVolumeUSD(address,uint256)":"f7406fc3","convertGasToFeeToken(address,uint256)":"3931f45d","currentMintRateUSD()":"41b5774a","currentNavUSD()":"5de11890","dailyVolumeUSD()":"82131470","dexible()":"a74aa566","discountBps()":"6c1f5633","dxbl()":"6162cb91","estimateRedemption(address,uint256)":"7262f557","feeTokenPriceUSD(address)":"ce25cb4d","isFeeTokenAllowed(address)":"5d204718","migrateV1(address)":"c76380b7","pause()":"8456cb59","paused()":"5c975abb","redeemDXBL(address,uint256,uint256)":"18ac3b15","resume()":"046f7da2","timelockSeconds()":"65a1f3c3","wrappedNativeToken()":"17fcb39b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVolume\",\"type\":\"uint256\"}],\"name\":\"AppliedVolumeGoal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"stdRate\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"minRate\",\"type\":\"uint32\"}],\"name\":\"BpsChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dxblAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"DXBLRedeemed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newRate\",\"type\":\"uint32\"}],\"name\":\"DiscountChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"name\":\"FeeTokenAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"FeeTokenRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"minThreshold\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"maxThreshold\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"}],\"name\":\"MintRateChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"oldStdRate\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newStdRate\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"oldMinRate\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newMinRate\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allowedAfterTime\",\"type\":\"uint256\"}],\"name\":\"ProposedBpsChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"oldRate\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newRate\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allowedAfterTime\",\"type\":\"uint256\"}],\"name\":\"ProposedDiscountChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"removal\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allowedAfterTime\",\"type\":\"uint256\"}],\"name\":\"ProposedFeeToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"minThreshold\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"maxThreshold\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allowedAfterTime\",\"type\":\"uint256\"}],\"name\":\"ProposedMintRateChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVolume\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVolume\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allowedAfterTime\",\"type\":\"uint256\"}],\"name\":\"ProposedVolumeGoal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"adminMultiSig\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"usdValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"usdPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IComputationalView.AssetInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aumUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseMintThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"computeVolumeUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"gasCost\",\"type\":\"uint256\"}],\"name\":\"convertGasToFeeToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMintRateUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentNavUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dailyVolumeUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dexible\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"discountBps\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dxbl\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dxblAmount\",\"type\":\"uint256\"}],\"name\":\"estimateRedemption\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"}],\"name\":\"feeTokenPriceUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokens\",\"type\":\"address\"}],\"name\":\"isFeeTokenAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract V1MigrationTarget\",\"name\":\"newVault\",\"type\":\"address\"}],\"name\":\"migrateV1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dxblAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minOutAmount\",\"type\":\"uint256\"}],\"name\":\"redeemDXBL\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resume\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelockSeconds\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrappedNativeToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"discountBps()\":{\"notice\":\"Storage variable view functions\"},\"migrateV1(address)\":{\"notice\":\"Migrate the vault to a new vault address that implements the target interface to receive this vault's state. This will transfer all fee token assets to the  new vault.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vault/ICommunityVault.sol\":\"ICommunityVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/token/IDXBL.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\ninterface IDXBL is IERC20, IERC20Metadata {\\n    struct FeeRequest {\\n        bool referred;\\n        address trader;\\n        uint amt;\\n        uint dxblBalance;\\n        uint16 stdBpsRate;\\n        uint16 minBpsRate;\\n    }\\n\\n    function minter() external view returns (address);\\n    function discountPerTokenBps() external view returns(uint32);\\n\\n    function mint(address acct, uint amt) external;\\n    function burn(address holder, uint amt) external;\\n    function setDiscountRate(uint32 discount) external;\\n    function setNewMinter(address minter) external;\\n    function computeDiscountedFee(FeeRequest calldata request) external view returns(uint);\\n}\",\"keccak256\":\"0x5c7e94839ff1ff8d19ed800cbb7a9af9ea24d178ec1cca6c84c0b914636494ef\",\"license\":\"Unlicense\"},\"contracts/vault/ICommunityVault.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"./ICommunityVaultEvents.sol\\\";\\nimport \\\"./V1Migrateable.sol\\\";\\nimport \\\"./IStorageView.sol\\\";\\nimport \\\"./IComputationalView.sol\\\";\\nimport \\\"./IRewardHandler.sol\\\";\\n\\ninterface ICommunityVault is IStorageView, IComputationalView, ICommunityVaultEvents, V1Migrateable {\\n\\n\\n    function isFeeTokenAllowed(address tokens) external view returns (bool);\\n    \\n    function redeemDXBL(address feeToken, uint dxblAmount, uint minOutAmount) external;\\n    function pause() external;\\n    function resume() external;\\n}\",\"keccak256\":\"0x56b070bfd6bb9a669afaf30682a35b914a30a7edab8d76e62bc8447247ac2191\",\"license\":\"Unlicense\"},\"contracts/vault/ICommunityVaultEvents.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\ninterface ICommunityVaultEvents {\\n\\n    event ProposedDiscountChange(uint32 oldRate, uint32 newRate, uint allowedAfterTime);\\n    event DiscountChanged(uint32 newRate);\\n\\n    event ProposedBpsChange(uint32 oldStdRate, uint32 newStdRate, uint32 oldMinRate, uint32 newMinRate, uint allowedAfterTime);\\n    event BpsChanged(uint32 stdRate, uint32 minRate);\\n\\n    event ProposedVolumeGoal(uint oldVolume, uint newVolume, uint allowedAfterTime);\\n    event AppliedVolumeGoal(uint newVolume);\\n\\n    event ProposedMintRateChange(uint16 minThreshold, uint16 maxThreshold, uint percentage, uint allowedAfterTime);\\n    event MintRateChange(uint16 minThreshold, uint16 maxThreshold, uint percentage);\\n    \\n    event ProposedFeeToken(address indexed token, address indexed priceFeed, bool removal, uint allowedAfterTime);\\n    event FeeTokenAdded(address indexed token, address indexed priceFeed);\\n    event FeeTokenRemoved(address indexed token);\\n    event DXBLRedeemed(address holder, uint dxblAmount, address rewardToken, uint rewardAmount);\\n}\",\"keccak256\":\"0x0903cef0a8028cae314a08819fb2922753fc8c97bcd35e573b7d2a681490e48d\",\"license\":\"Unlicense\"},\"contracts/vault/IComputationalView.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\ninterface IComputationalView {\\n\\n    struct AssetInfo {\\n        address token;\\n        uint balance;\\n        uint usdValue;\\n        uint usdPrice;\\n    }\\n\\n    function convertGasToFeeToken(address feeToken, uint gasCost) external view returns (uint);\\n    function estimateRedemption(address feeToken, uint dxblAmount) external view returns(uint);\\n    function feeTokenPriceUSD(address feeToken) external view returns (uint);\\n    function aumUSD() external view returns(uint);\\n    function currentNavUSD() external view returns(uint);\\n    function assets() external view returns (AssetInfo[] memory);\\n    function currentMintRateUSD() external view returns (uint);\\n    function computeVolumeUSD(address feeToken, uint amount) external view returns(uint);\\n\\n}\",\"keccak256\":\"0xc0e46b88fd0f1381ada98e1e202068fefb7dca14d74e273e1d5bd264966c9a1d\",\"license\":\"Unlicense\"},\"contracts/vault/IPriceFeed.sol\":{\"content\":\"\\n//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\n/**\\n * Interface for Chainlink oracle feeds\\n */\\ninterface IPriceFeed {\\n    function latestRoundData() external view\\n    returns (\\n        uint80 roundId,\\n        int256 answer,\\n        uint256 startedAt,\\n        uint256 updatedAt,\\n        uint80 answeredInRound\\n    );\\n    function decimals() external view returns (uint8);\\n}\",\"keccak256\":\"0x151d6516db0e8639f2c0aae6a0d3dd7fc9befc2d179ac8b08ea8830253cbb544\",\"license\":\"Unlicense\"},\"contracts/vault/IRewardHandler.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\ninterface IRewardHandler {\\n\\n    /**\\n     * Modification functions\\n     */\\n    function rewardTrader(address trader, address feeToken, uint amount) external;\\n}\",\"keccak256\":\"0x103b1b3c548036a1ba6fefb5bf923eda05a1a66732e05c8f2553b00625c6aabd\",\"license\":\"Unlicense\"},\"contracts/vault/IStorageView.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\ninterface IStorageView {\\n\\n    /**\\n     * Storage variable view functions\\n     */\\n    function discountBps() external view returns(uint32);\\n    function dailyVolumeUSD() external view returns(uint);\\n    function paused() external view returns (bool);\\n    function adminMultiSig() external view returns (address);\\n    function dxbl() external view returns (address);\\n    function dexible() external view returns (address);\\n    function wrappedNativeToken() external view returns (address);\\n    function timelockSeconds() external view returns (uint32);\\n    function baseMintThreshold() external view returns (uint);\\n}\",\"keccak256\":\"0xfd90e37d4ece93032adbdfc402b663b61930a293c576295c792c16bea65c9195\",\"license\":\"Unlicense\"},\"contracts/vault/V1Migrateable.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\nimport \\\"./VaultStorage.sol\\\";\\n\\ninterface V1MigrationTarget {\\n    /**\\n     * Call from current vault to migrate the state of the old vault to the new one. \\n     */\\n    function migrationFromV1(VaultStorage.VaultMigrationV1 memory data) external;\\n}\\n\\ninterface V1Migrateable {\\n\\n    /**\\n     * Migrate the vault to a new vault address that implements the target interface\\n     * to receive this vault's state. This will transfer all fee token assets to the \\n     * new vault.\\n     */\\n    function migrateV1(V1MigrationTarget newVault) external;\\n    \\n}\",\"keccak256\":\"0x60a586c3996864d9ae13ddd63413b7efad36431f586487abfdf2f610c1fb62bb\",\"license\":\"Unlicense\"},\"contracts/vault/VaultStorage.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\nimport \\\"../token/IDXBL.sol\\\";\\nimport \\\"./IPriceFeed.sol\\\";\\n\\nlibrary VaultStorage {\\n\\n    bytes32 constant VAULT_STORAGE_KEY = 0xbfa76ec2967ed7f8d3d40cd552f1451ab03573b596bfce931a6a016f7733078c;\\n\\n    /****************************************************************************\\n     * Initialization Config Settings\\n     *****************************************************************************/\\n    //mint rate bucket\\n    struct MintRateRangeConfig {\\n        uint16 minMMVolume;\\n        uint16 maxMMVolume;\\n        uint rate;\\n    }\\n\\n    //fee token and its associated chainlink feed\\n    struct FeeTokenConfig {\\n        address[] feeTokens;\\n        address[] priceFeeds;\\n    }\\n\\n    //initialize config to intialize storage\\n    struct VaultConfig {\\n\\n        //the address of the wrapped native token\\n        address wrappedNativeToken;\\n\\n        //address of the multisig that will administer this vault\\n        address adminMultiSig;\\n\\n        //starting volume needed to mint a single DXBL token. This increases\\n        //as we get closer to reaching the daily goal\\n        uint baseMintThreshold;\\n\\n        //initial rate ranges to apply\\n        MintRateRangeConfig[] rateRanges;\\n\\n        //set of fee token/price feed pairs to initialize with\\n        FeeTokenConfig feeTokenConfig;\\n    }\\n\\n    /****************************************************************************\\n     * Stored Settings\\n     *****************************************************************************/\\n    //stored mint rate range\\n    struct MintRateRange {\\n        uint16 minMMVolume;\\n        uint16 maxMMVolume;\\n        uint rate;\\n        uint index;\\n    }\\n\\n    //price feed for a fee token\\n    struct PriceFeed {\\n        IPriceFeed feed;\\n        uint8 decimals;\\n    }\\n\\n    /*****************************************************************************************\\n     * STORAGE\\n    ******************************************************************************************/\\n    \\n    \\n    struct VaultData {\\n        //whether the vault is paused\\n        bool paused;\\n\\n        //admin multi sig\\n        address adminMultiSig;\\n\\n        //token address\\n        IDXBL dxbl;\\n\\n        //dexible settlement contract that is allowed to call the vault\\n        address dexible;\\n\\n        //wrapped native asset address for gas computation\\n        address wrappedNativeToken;\\n\\n        //time before migration allowed\\n        uint32 timelockSeconds;\\n\\n        //base volume needed to mint a single DXBL token. This increases\\n        //as we get closer to reaching the daily goal\\n        uint baseMintThreshold;\\n\\n        //current daily volume adjusted each hour\\n        uint currentVolume;\\n\\n        //to compute what hourly slots to deduct from 24hr window\\n        uint lastTradeTimestamp;\\n\\n        //can migrate the contract to a new vault after this time\\n        uint migrateAfterTime;\\n\\n        //all known fee tokens. Some may be inactive\\n        IERC20[] feeTokens;\\n\\n        //the current volume range we're operating in for mint rate\\n        MintRateRange currentMintRate;\\n\\n        //The ranges of 24hr volume and their percentage-per-MM increase to \\n        //mint a single token\\n        MintRateRange[] mintRateRanges;\\n\\n        //hourly volume totals to adjust current volume every 24 hr slot\\n        uint[24] hourlyVolume;\\n\\n        //fee token decimals\\n        mapping(address => uint8) tokenDecimals;\\n\\n        //all allowed fee tokens mapped to their price feed address\\n        mapping(address => PriceFeed) allowedFeeTokens;\\n    }\\n\\n    /**\\n     * If a migration occurs from the V1 vault to a new vault, this structure is forwarded\\n     * after all fee token balances are transferred. It is expected that the new vault will have\\n     * its fee token, minting rates, and starting mint rates mapped out as part of its deployment.\\n     * The migration is intended to get the new vault into a state where it knows the last 24hrs\\n     * of volume and can pick up where this vault leaves off but with new settings and capabilities.\\n     */\\n    struct VaultMigrationV1 {\\n        //current daily volume adjusted each hour\\n        uint currentVolume;\\n\\n        //to compute what hourly slots to deduct from 24hr window\\n        uint lastTradeTimestamp;\\n\\n        //hourly volume totals to adjust in new contract\\n        uint[24] hourlyVolume;\\n\\n        //the current volume range we're operating in for mint rate\\n        MintRateRange currentMintRate;\\n    }\\n\\n    function load() internal pure returns (VaultData storage ds) {\\n        assembly { ds.slot := VAULT_STORAGE_KEY }\\n    }\\n}\",\"keccak256\":\"0xe658404b7cd8ed0887d839acedf14011c1478a85e79c28a7d571f87f9e30784b\",\"license\":\"Unlicense\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"discountBps()":{"notice":"Storage variable view functions"},"migrateV1(address)":{"notice":"Migrate the vault to a new vault address that implements the target interface to receive this vault's state. This will transfer all fee token assets to the  new vault."}},"version":1}}},"contracts/vault/ICommunityVaultEvents.sol":{"ICommunityVaultEvents":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newVolume","type":"uint256"}],"name":"AppliedVolumeGoal","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"stdRate","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"minRate","type":"uint32"}],"name":"BpsChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"holder","type":"address"},{"indexed":false,"internalType":"uint256","name":"dxblAmount","type":"uint256"},{"indexed":false,"internalType":"address","name":"rewardToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"rewardAmount","type":"uint256"}],"name":"DXBLRedeemed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"newRate","type":"uint32"}],"name":"DiscountChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"priceFeed","type":"address"}],"name":"FeeTokenAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"}],"name":"FeeTokenRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"minThreshold","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"maxThreshold","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"percentage","type":"uint256"}],"name":"MintRateChange","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"oldStdRate","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"newStdRate","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"oldMinRate","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"newMinRate","type":"uint32"},{"indexed":false,"internalType":"uint256","name":"allowedAfterTime","type":"uint256"}],"name":"ProposedBpsChange","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"oldRate","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"newRate","type":"uint32"},{"indexed":false,"internalType":"uint256","name":"allowedAfterTime","type":"uint256"}],"name":"ProposedDiscountChange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"priceFeed","type":"address"},{"indexed":false,"internalType":"bool","name":"removal","type":"bool"},{"indexed":false,"internalType":"uint256","name":"allowedAfterTime","type":"uint256"}],"name":"ProposedFeeToken","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"minThreshold","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"maxThreshold","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"percentage","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"allowedAfterTime","type":"uint256"}],"name":"ProposedMintRateChange","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldVolume","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVolume","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"allowedAfterTime","type":"uint256"}],"name":"ProposedVolumeGoal","type":"event"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVolume\",\"type\":\"uint256\"}],\"name\":\"AppliedVolumeGoal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"stdRate\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"minRate\",\"type\":\"uint32\"}],\"name\":\"BpsChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dxblAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"DXBLRedeemed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newRate\",\"type\":\"uint32\"}],\"name\":\"DiscountChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"name\":\"FeeTokenAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"FeeTokenRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"minThreshold\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"maxThreshold\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"}],\"name\":\"MintRateChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"oldStdRate\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newStdRate\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"oldMinRate\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newMinRate\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allowedAfterTime\",\"type\":\"uint256\"}],\"name\":\"ProposedBpsChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"oldRate\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newRate\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allowedAfterTime\",\"type\":\"uint256\"}],\"name\":\"ProposedDiscountChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"removal\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allowedAfterTime\",\"type\":\"uint256\"}],\"name\":\"ProposedFeeToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"minThreshold\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"maxThreshold\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allowedAfterTime\",\"type\":\"uint256\"}],\"name\":\"ProposedMintRateChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVolume\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVolume\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allowedAfterTime\",\"type\":\"uint256\"}],\"name\":\"ProposedVolumeGoal\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vault/ICommunityVaultEvents.sol\":\"ICommunityVaultEvents\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/vault/ICommunityVaultEvents.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\ninterface ICommunityVaultEvents {\\n\\n    event ProposedDiscountChange(uint32 oldRate, uint32 newRate, uint allowedAfterTime);\\n    event DiscountChanged(uint32 newRate);\\n\\n    event ProposedBpsChange(uint32 oldStdRate, uint32 newStdRate, uint32 oldMinRate, uint32 newMinRate, uint allowedAfterTime);\\n    event BpsChanged(uint32 stdRate, uint32 minRate);\\n\\n    event ProposedVolumeGoal(uint oldVolume, uint newVolume, uint allowedAfterTime);\\n    event AppliedVolumeGoal(uint newVolume);\\n\\n    event ProposedMintRateChange(uint16 minThreshold, uint16 maxThreshold, uint percentage, uint allowedAfterTime);\\n    event MintRateChange(uint16 minThreshold, uint16 maxThreshold, uint percentage);\\n    \\n    event ProposedFeeToken(address indexed token, address indexed priceFeed, bool removal, uint allowedAfterTime);\\n    event FeeTokenAdded(address indexed token, address indexed priceFeed);\\n    event FeeTokenRemoved(address indexed token);\\n    event DXBLRedeemed(address holder, uint dxblAmount, address rewardToken, uint rewardAmount);\\n}\",\"keccak256\":\"0x0903cef0a8028cae314a08819fb2922753fc8c97bcd35e573b7d2a681490e48d\",\"license\":\"Unlicense\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/vault/IComputationalView.sol":{"IComputationalView":{"abi":[{"inputs":[],"name":"assets","outputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"usdValue","type":"uint256"},{"internalType":"uint256","name":"usdPrice","type":"uint256"}],"internalType":"struct IComputationalView.AssetInfo[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"aumUSD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"feeToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"computeVolumeUSD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"feeToken","type":"address"},{"internalType":"uint256","name":"gasCost","type":"uint256"}],"name":"convertGasToFeeToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentMintRateUSD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentNavUSD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"feeToken","type":"address"},{"internalType":"uint256","name":"dxblAmount","type":"uint256"}],"name":"estimateRedemption","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"feeToken","type":"address"}],"name":"feeTokenPriceUSD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"assets()":"71a97305","aumUSD()":"20529bb1","computeVolumeUSD(address,uint256)":"f7406fc3","convertGasToFeeToken(address,uint256)":"3931f45d","currentMintRateUSD()":"41b5774a","currentNavUSD()":"5de11890","estimateRedemption(address,uint256)":"7262f557","feeTokenPriceUSD(address)":"ce25cb4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"assets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"usdValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"usdPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IComputationalView.AssetInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aumUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"computeVolumeUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"gasCost\",\"type\":\"uint256\"}],\"name\":\"convertGasToFeeToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMintRateUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentNavUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dxblAmount\",\"type\":\"uint256\"}],\"name\":\"estimateRedemption\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"}],\"name\":\"feeTokenPriceUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vault/IComputationalView.sol\":\"IComputationalView\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/vault/IComputationalView.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\ninterface IComputationalView {\\n\\n    struct AssetInfo {\\n        address token;\\n        uint balance;\\n        uint usdValue;\\n        uint usdPrice;\\n    }\\n\\n    function convertGasToFeeToken(address feeToken, uint gasCost) external view returns (uint);\\n    function estimateRedemption(address feeToken, uint dxblAmount) external view returns(uint);\\n    function feeTokenPriceUSD(address feeToken) external view returns (uint);\\n    function aumUSD() external view returns(uint);\\n    function currentNavUSD() external view returns(uint);\\n    function assets() external view returns (AssetInfo[] memory);\\n    function currentMintRateUSD() external view returns (uint);\\n    function computeVolumeUSD(address feeToken, uint amount) external view returns(uint);\\n\\n}\",\"keccak256\":\"0xc0e46b88fd0f1381ada98e1e202068fefb7dca14d74e273e1d5bd264966c9a1d\",\"license\":\"Unlicense\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/vault/IPriceFeed.sol":{"IPriceFeed":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"decimals()":"313ce567","latestRoundData()":"feaf968c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Interface for Chainlink oracle feeds\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vault/IPriceFeed.sol\":\"IPriceFeed\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/vault/IPriceFeed.sol\":{\"content\":\"\\n//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\n/**\\n * Interface for Chainlink oracle feeds\\n */\\ninterface IPriceFeed {\\n    function latestRoundData() external view\\n    returns (\\n        uint80 roundId,\\n        int256 answer,\\n        uint256 startedAt,\\n        uint256 updatedAt,\\n        uint80 answeredInRound\\n    );\\n    function decimals() external view returns (uint8);\\n}\",\"keccak256\":\"0x151d6516db0e8639f2c0aae6a0d3dd7fc9befc2d179ac8b08ea8830253cbb544\",\"license\":\"Unlicense\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"Interface for Chainlink oracle feeds","version":1}}},"contracts/vault/IRewardHandler.sol":{"IRewardHandler":{"abi":[{"inputs":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"address","name":"feeToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"rewardTrader","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"rewardTrader(address,address,uint256)":"ab1094c0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rewardTrader\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"rewardTrader(address,address,uint256)\":{\"notice\":\"Modification functions\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vault/IRewardHandler.sol\":\"IRewardHandler\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/vault/IRewardHandler.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\ninterface IRewardHandler {\\n\\n    /**\\n     * Modification functions\\n     */\\n    function rewardTrader(address trader, address feeToken, uint amount) external;\\n}\",\"keccak256\":\"0x103b1b3c548036a1ba6fefb5bf923eda05a1a66732e05c8f2553b00625c6aabd\",\"license\":\"Unlicense\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"rewardTrader(address,address,uint256)":{"notice":"Modification functions"}},"version":1}}},"contracts/vault/IStorageView.sol":{"IStorageView":{"abi":[{"inputs":[],"name":"adminMultiSig","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseMintThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"dailyVolumeUSD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"dexible","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"discountBps","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"dxbl","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"timelockSeconds","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"wrappedNativeToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"adminMultiSig()":"45c6a874","baseMintThreshold()":"56168843","dailyVolumeUSD()":"82131470","dexible()":"a74aa566","discountBps()":"6c1f5633","dxbl()":"6162cb91","paused()":"5c975abb","timelockSeconds()":"65a1f3c3","wrappedNativeToken()":"17fcb39b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"adminMultiSig\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseMintThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dailyVolumeUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dexible\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"discountBps\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dxbl\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelockSeconds\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrappedNativeToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"discountBps()\":{\"notice\":\"Storage variable view functions\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vault/IStorageView.sol\":\"IStorageView\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/vault/IStorageView.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\ninterface IStorageView {\\n\\n    /**\\n     * Storage variable view functions\\n     */\\n    function discountBps() external view returns(uint32);\\n    function dailyVolumeUSD() external view returns(uint);\\n    function paused() external view returns (bool);\\n    function adminMultiSig() external view returns (address);\\n    function dxbl() external view returns (address);\\n    function dexible() external view returns (address);\\n    function wrappedNativeToken() external view returns (address);\\n    function timelockSeconds() external view returns (uint32);\\n    function baseMintThreshold() external view returns (uint);\\n}\",\"keccak256\":\"0xfd90e37d4ece93032adbdfc402b663b61930a293c576295c792c16bea65c9195\",\"license\":\"Unlicense\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"discountBps()":{"notice":"Storage variable view functions"}},"version":1}}},"contracts/vault/V1Migrateable.sol":{"V1Migrateable":{"abi":[{"inputs":[{"internalType":"contract V1MigrationTarget","name":"newVault","type":"address"}],"name":"migrateV1","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"migrateV1(address)":"c76380b7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract V1MigrationTarget\",\"name\":\"newVault\",\"type\":\"address\"}],\"name\":\"migrateV1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"migrateV1(address)\":{\"notice\":\"Migrate the vault to a new vault address that implements the target interface to receive this vault's state. This will transfer all fee token assets to the  new vault.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vault/V1Migrateable.sol\":\"V1Migrateable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"contracts/token/IDXBL.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\ninterface IDXBL is IERC20, IERC20Metadata {\\n    struct FeeRequest {\\n        bool referred;\\n        address trader;\\n        uint amt;\\n        uint dxblBalance;\\n        uint16 stdBpsRate;\\n        uint16 minBpsRate;\\n    }\\n\\n    function minter() external view returns (address);\\n    function discountPerTokenBps() external view returns(uint32);\\n\\n    function mint(address acct, uint amt) external;\\n    function burn(address holder, uint amt) external;\\n    function setDiscountRate(uint32 discount) external;\\n    function setNewMinter(address minter) external;\\n    function computeDiscountedFee(FeeRequest calldata request) external view returns(uint);\\n}\",\"keccak256\":\"0x5c7e94839ff1ff8d19ed800cbb7a9af9ea24d178ec1cca6c84c0b914636494ef\",\"license\":\"Unlicense\"},\"contracts/vault/IPriceFeed.sol\":{\"content\":\"\\n//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\n/**\\n * Interface for Chainlink oracle feeds\\n */\\ninterface IPriceFeed {\\n    function latestRoundData() external view\\n    returns (\\n        uint80 roundId,\\n        int256 answer,\\n        uint256 startedAt,\\n        uint256 updatedAt,\\n        uint80 answeredInRound\\n    );\\n    function decimals() external view returns (uint8);\\n}\",\"keccak256\":\"0x151d6516db0e8639f2c0aae6a0d3dd7fc9befc2d179ac8b08ea8830253cbb544\",\"license\":\"Unlicense\"},\"contracts/vault/V1Migrateable.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\nimport \\\"./VaultStorage.sol\\\";\\n\\ninterface V1MigrationTarget {\\n    /**\\n     * Call from current vault to migrate the state of the old vault to the new one. \\n     */\\n    function migrationFromV1(VaultStorage.VaultMigrationV1 memory data) external;\\n}\\n\\ninterface V1Migrateable {\\n\\n    /**\\n     * Migrate the vault to a new vault address that implements the target interface\\n     * to receive this vault's state. This will transfer all fee token assets to the \\n     * new vault.\\n     */\\n    function migrateV1(V1MigrationTarget newVault) external;\\n    \\n}\",\"keccak256\":\"0x60a586c3996864d9ae13ddd63413b7efad36431f586487abfdf2f610c1fb62bb\",\"license\":\"Unlicense\"},\"contracts/vault/VaultStorage.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\nimport \\\"../token/IDXBL.sol\\\";\\nimport \\\"./IPriceFeed.sol\\\";\\n\\nlibrary VaultStorage {\\n\\n    bytes32 constant VAULT_STORAGE_KEY = 0xbfa76ec2967ed7f8d3d40cd552f1451ab03573b596bfce931a6a016f7733078c;\\n\\n    /****************************************************************************\\n     * Initialization Config Settings\\n     *****************************************************************************/\\n    //mint rate bucket\\n    struct MintRateRangeConfig {\\n        uint16 minMMVolume;\\n        uint16 maxMMVolume;\\n        uint rate;\\n    }\\n\\n    //fee token and its associated chainlink feed\\n    struct FeeTokenConfig {\\n        address[] feeTokens;\\n        address[] priceFeeds;\\n    }\\n\\n    //initialize config to intialize storage\\n    struct VaultConfig {\\n\\n        //the address of the wrapped native token\\n        address wrappedNativeToken;\\n\\n        //address of the multisig that will administer this vault\\n        address adminMultiSig;\\n\\n        //starting volume needed to mint a single DXBL token. This increases\\n        //as we get closer to reaching the daily goal\\n        uint baseMintThreshold;\\n\\n        //initial rate ranges to apply\\n        MintRateRangeConfig[] rateRanges;\\n\\n        //set of fee token/price feed pairs to initialize with\\n        FeeTokenConfig feeTokenConfig;\\n    }\\n\\n    /****************************************************************************\\n     * Stored Settings\\n     *****************************************************************************/\\n    //stored mint rate range\\n    struct MintRateRange {\\n        uint16 minMMVolume;\\n        uint16 maxMMVolume;\\n        uint rate;\\n        uint index;\\n    }\\n\\n    //price feed for a fee token\\n    struct PriceFeed {\\n        IPriceFeed feed;\\n        uint8 decimals;\\n    }\\n\\n    /*****************************************************************************************\\n     * STORAGE\\n    ******************************************************************************************/\\n    \\n    \\n    struct VaultData {\\n        //whether the vault is paused\\n        bool paused;\\n\\n        //admin multi sig\\n        address adminMultiSig;\\n\\n        //token address\\n        IDXBL dxbl;\\n\\n        //dexible settlement contract that is allowed to call the vault\\n        address dexible;\\n\\n        //wrapped native asset address for gas computation\\n        address wrappedNativeToken;\\n\\n        //time before migration allowed\\n        uint32 timelockSeconds;\\n\\n        //base volume needed to mint a single DXBL token. This increases\\n        //as we get closer to reaching the daily goal\\n        uint baseMintThreshold;\\n\\n        //current daily volume adjusted each hour\\n        uint currentVolume;\\n\\n        //to compute what hourly slots to deduct from 24hr window\\n        uint lastTradeTimestamp;\\n\\n        //can migrate the contract to a new vault after this time\\n        uint migrateAfterTime;\\n\\n        //all known fee tokens. Some may be inactive\\n        IERC20[] feeTokens;\\n\\n        //the current volume range we're operating in for mint rate\\n        MintRateRange currentMintRate;\\n\\n        //The ranges of 24hr volume and their percentage-per-MM increase to \\n        //mint a single token\\n        MintRateRange[] mintRateRanges;\\n\\n        //hourly volume totals to adjust current volume every 24 hr slot\\n        uint[24] hourlyVolume;\\n\\n        //fee token decimals\\n        mapping(address => uint8) tokenDecimals;\\n\\n        //all allowed fee tokens mapped to their price feed address\\n        mapping(address => PriceFeed) allowedFeeTokens;\\n    }\\n\\n    /**\\n     * If a migration occurs from the V1 vault to a new vault, this structure is forwarded\\n     * after all fee token balances are transferred. It is expected that the new vault will have\\n     * its fee token, minting rates, and starting mint rates mapped out as part of its deployment.\\n     * The migration is intended to get the new vault into a state where it knows the last 24hrs\\n     * of volume and can pick up where this vault leaves off but with new settings and capabilities.\\n     */\\n    struct VaultMigrationV1 {\\n        //current daily volume adjusted each hour\\n        uint currentVolume;\\n\\n        //to compute what hourly slots to deduct from 24hr window\\n        uint lastTradeTimestamp;\\n\\n        //hourly volume totals to adjust in new contract\\n        uint[24] hourlyVolume;\\n\\n        //the current volume range we're operating in for mint rate\\n        MintRateRange currentMintRate;\\n    }\\n\\n    function load() internal pure returns (VaultData storage ds) {\\n        assembly { ds.slot := VAULT_STORAGE_KEY }\\n    }\\n}\",\"keccak256\":\"0xe658404b7cd8ed0887d839acedf14011c1478a85e79c28a7d571f87f9e30784b\",\"license\":\"Unlicense\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"migrateV1(address)":{"notice":"Migrate the vault to a new vault address that implements the target interface to receive this vault's state. This will transfer all fee token assets to the  new vault."}},"version":1}},"V1MigrationTarget":{"abi":[{"inputs":[{"components":[{"internalType":"uint256","name":"currentVolume","type":"uint256"},{"internalType":"uint256","name":"lastTradeTimestamp","type":"uint256"},{"internalType":"uint256[24]","name":"hourlyVolume","type":"uint256[24]"},{"components":[{"internalType":"uint16","name":"minMMVolume","type":"uint16"},{"internalType":"uint16","name":"maxMMVolume","type":"uint16"},{"internalType":"uint256","name":"rate","type":"uint256"},{"internalType":"uint256","name":"index","type":"uint256"}],"internalType":"struct VaultStorage.MintRateRange","name":"currentMintRate","type":"tuple"}],"internalType":"struct VaultStorage.VaultMigrationV1","name":"data","type":"tuple"}],"name":"migrationFromV1","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"migrationFromV1((uint256,uint256,uint256[24],(uint16,uint16,uint256,uint256)))":"5864de4e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"currentVolume\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastTradeTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256[24]\",\"name\":\"hourlyVolume\",\"type\":\"uint256[24]\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"minMMVolume\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"maxMMVolume\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"internalType\":\"struct VaultStorage.MintRateRange\",\"name\":\"currentMintRate\",\"type\":\"tuple\"}],\"internalType\":\"struct VaultStorage.VaultMigrationV1\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"migrationFromV1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"migrationFromV1((uint256,uint256,uint256[24],(uint16,uint16,uint256,uint256)))\":{\"notice\":\"Call from current vault to migrate the state of the old vault to the new one. \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vault/V1Migrateable.sol\":\"V1MigrationTarget\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"contracts/token/IDXBL.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\ninterface IDXBL is IERC20, IERC20Metadata {\\n    struct FeeRequest {\\n        bool referred;\\n        address trader;\\n        uint amt;\\n        uint dxblBalance;\\n        uint16 stdBpsRate;\\n        uint16 minBpsRate;\\n    }\\n\\n    function minter() external view returns (address);\\n    function discountPerTokenBps() external view returns(uint32);\\n\\n    function mint(address acct, uint amt) external;\\n    function burn(address holder, uint amt) external;\\n    function setDiscountRate(uint32 discount) external;\\n    function setNewMinter(address minter) external;\\n    function computeDiscountedFee(FeeRequest calldata request) external view returns(uint);\\n}\",\"keccak256\":\"0x5c7e94839ff1ff8d19ed800cbb7a9af9ea24d178ec1cca6c84c0b914636494ef\",\"license\":\"Unlicense\"},\"contracts/vault/IPriceFeed.sol\":{\"content\":\"\\n//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\n/**\\n * Interface for Chainlink oracle feeds\\n */\\ninterface IPriceFeed {\\n    function latestRoundData() external view\\n    returns (\\n        uint80 roundId,\\n        int256 answer,\\n        uint256 startedAt,\\n        uint256 updatedAt,\\n        uint80 answeredInRound\\n    );\\n    function decimals() external view returns (uint8);\\n}\",\"keccak256\":\"0x151d6516db0e8639f2c0aae6a0d3dd7fc9befc2d179ac8b08ea8830253cbb544\",\"license\":\"Unlicense\"},\"contracts/vault/V1Migrateable.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\nimport \\\"./VaultStorage.sol\\\";\\n\\ninterface V1MigrationTarget {\\n    /**\\n     * Call from current vault to migrate the state of the old vault to the new one. \\n     */\\n    function migrationFromV1(VaultStorage.VaultMigrationV1 memory data) external;\\n}\\n\\ninterface V1Migrateable {\\n\\n    /**\\n     * Migrate the vault to a new vault address that implements the target interface\\n     * to receive this vault's state. This will transfer all fee token assets to the \\n     * new vault.\\n     */\\n    function migrateV1(V1MigrationTarget newVault) external;\\n    \\n}\",\"keccak256\":\"0x60a586c3996864d9ae13ddd63413b7efad36431f586487abfdf2f610c1fb62bb\",\"license\":\"Unlicense\"},\"contracts/vault/VaultStorage.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\nimport \\\"../token/IDXBL.sol\\\";\\nimport \\\"./IPriceFeed.sol\\\";\\n\\nlibrary VaultStorage {\\n\\n    bytes32 constant VAULT_STORAGE_KEY = 0xbfa76ec2967ed7f8d3d40cd552f1451ab03573b596bfce931a6a016f7733078c;\\n\\n    /****************************************************************************\\n     * Initialization Config Settings\\n     *****************************************************************************/\\n    //mint rate bucket\\n    struct MintRateRangeConfig {\\n        uint16 minMMVolume;\\n        uint16 maxMMVolume;\\n        uint rate;\\n    }\\n\\n    //fee token and its associated chainlink feed\\n    struct FeeTokenConfig {\\n        address[] feeTokens;\\n        address[] priceFeeds;\\n    }\\n\\n    //initialize config to intialize storage\\n    struct VaultConfig {\\n\\n        //the address of the wrapped native token\\n        address wrappedNativeToken;\\n\\n        //address of the multisig that will administer this vault\\n        address adminMultiSig;\\n\\n        //starting volume needed to mint a single DXBL token. This increases\\n        //as we get closer to reaching the daily goal\\n        uint baseMintThreshold;\\n\\n        //initial rate ranges to apply\\n        MintRateRangeConfig[] rateRanges;\\n\\n        //set of fee token/price feed pairs to initialize with\\n        FeeTokenConfig feeTokenConfig;\\n    }\\n\\n    /****************************************************************************\\n     * Stored Settings\\n     *****************************************************************************/\\n    //stored mint rate range\\n    struct MintRateRange {\\n        uint16 minMMVolume;\\n        uint16 maxMMVolume;\\n        uint rate;\\n        uint index;\\n    }\\n\\n    //price feed for a fee token\\n    struct PriceFeed {\\n        IPriceFeed feed;\\n        uint8 decimals;\\n    }\\n\\n    /*****************************************************************************************\\n     * STORAGE\\n    ******************************************************************************************/\\n    \\n    \\n    struct VaultData {\\n        //whether the vault is paused\\n        bool paused;\\n\\n        //admin multi sig\\n        address adminMultiSig;\\n\\n        //token address\\n        IDXBL dxbl;\\n\\n        //dexible settlement contract that is allowed to call the vault\\n        address dexible;\\n\\n        //wrapped native asset address for gas computation\\n        address wrappedNativeToken;\\n\\n        //time before migration allowed\\n        uint32 timelockSeconds;\\n\\n        //base volume needed to mint a single DXBL token. This increases\\n        //as we get closer to reaching the daily goal\\n        uint baseMintThreshold;\\n\\n        //current daily volume adjusted each hour\\n        uint currentVolume;\\n\\n        //to compute what hourly slots to deduct from 24hr window\\n        uint lastTradeTimestamp;\\n\\n        //can migrate the contract to a new vault after this time\\n        uint migrateAfterTime;\\n\\n        //all known fee tokens. Some may be inactive\\n        IERC20[] feeTokens;\\n\\n        //the current volume range we're operating in for mint rate\\n        MintRateRange currentMintRate;\\n\\n        //The ranges of 24hr volume and their percentage-per-MM increase to \\n        //mint a single token\\n        MintRateRange[] mintRateRanges;\\n\\n        //hourly volume totals to adjust current volume every 24 hr slot\\n        uint[24] hourlyVolume;\\n\\n        //fee token decimals\\n        mapping(address => uint8) tokenDecimals;\\n\\n        //all allowed fee tokens mapped to their price feed address\\n        mapping(address => PriceFeed) allowedFeeTokens;\\n    }\\n\\n    /**\\n     * If a migration occurs from the V1 vault to a new vault, this structure is forwarded\\n     * after all fee token balances are transferred. It is expected that the new vault will have\\n     * its fee token, minting rates, and starting mint rates mapped out as part of its deployment.\\n     * The migration is intended to get the new vault into a state where it knows the last 24hrs\\n     * of volume and can pick up where this vault leaves off but with new settings and capabilities.\\n     */\\n    struct VaultMigrationV1 {\\n        //current daily volume adjusted each hour\\n        uint currentVolume;\\n\\n        //to compute what hourly slots to deduct from 24hr window\\n        uint lastTradeTimestamp;\\n\\n        //hourly volume totals to adjust in new contract\\n        uint[24] hourlyVolume;\\n\\n        //the current volume range we're operating in for mint rate\\n        MintRateRange currentMintRate;\\n    }\\n\\n    function load() internal pure returns (VaultData storage ds) {\\n        assembly { ds.slot := VAULT_STORAGE_KEY }\\n    }\\n}\",\"keccak256\":\"0xe658404b7cd8ed0887d839acedf14011c1478a85e79c28a7d571f87f9e30784b\",\"license\":\"Unlicense\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"migrationFromV1((uint256,uint256,uint256[24],(uint16,uint16,uint256,uint256)))":{"notice":"Call from current vault to migrate the state of the old vault to the new one. "}},"version":1}}},"contracts/vault/VaultStorage.sol":{"VaultStorage":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c12ce43a86cd609d0c8779b81df2ae2c2ccaa826873a652dc1682c84635cb41a64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 0x2C 0xE4 GASPRICE DUP7 0xCD PUSH1 0x9D 0xC DUP8 PUSH26 0xB81DF2AE2C2CCAA826873A652DC1682C84635CB41A64736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"120:4486:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;120:4486:18;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c12ce43a86cd609d0c8779b81df2ae2c2ccaa826873a652dc1682c84635cb41a64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 0x2C 0xE4 GASPRICE DUP7 0xCD PUSH1 0x9D 0xC DUP8 PUSH26 0xB81DF2AE2C2CCAA826873A652DC1682C84635CB41A64736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"120:4486:18:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"load()":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vault/VaultStorage.sol\":\"VaultStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"contracts/token/IDXBL.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\ninterface IDXBL is IERC20, IERC20Metadata {\\n    struct FeeRequest {\\n        bool referred;\\n        address trader;\\n        uint amt;\\n        uint dxblBalance;\\n        uint16 stdBpsRate;\\n        uint16 minBpsRate;\\n    }\\n\\n    function minter() external view returns (address);\\n    function discountPerTokenBps() external view returns(uint32);\\n\\n    function mint(address acct, uint amt) external;\\n    function burn(address holder, uint amt) external;\\n    function setDiscountRate(uint32 discount) external;\\n    function setNewMinter(address minter) external;\\n    function computeDiscountedFee(FeeRequest calldata request) external view returns(uint);\\n}\",\"keccak256\":\"0x5c7e94839ff1ff8d19ed800cbb7a9af9ea24d178ec1cca6c84c0b914636494ef\",\"license\":\"Unlicense\"},\"contracts/vault/IPriceFeed.sol\":{\"content\":\"\\n//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\n/**\\n * Interface for Chainlink oracle feeds\\n */\\ninterface IPriceFeed {\\n    function latestRoundData() external view\\n    returns (\\n        uint80 roundId,\\n        int256 answer,\\n        uint256 startedAt,\\n        uint256 updatedAt,\\n        uint80 answeredInRound\\n    );\\n    function decimals() external view returns (uint8);\\n}\",\"keccak256\":\"0x151d6516db0e8639f2c0aae6a0d3dd7fc9befc2d179ac8b08ea8830253cbb544\",\"license\":\"Unlicense\"},\"contracts/vault/VaultStorage.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\nimport \\\"../token/IDXBL.sol\\\";\\nimport \\\"./IPriceFeed.sol\\\";\\n\\nlibrary VaultStorage {\\n\\n    bytes32 constant VAULT_STORAGE_KEY = 0xbfa76ec2967ed7f8d3d40cd552f1451ab03573b596bfce931a6a016f7733078c;\\n\\n    /****************************************************************************\\n     * Initialization Config Settings\\n     *****************************************************************************/\\n    //mint rate bucket\\n    struct MintRateRangeConfig {\\n        uint16 minMMVolume;\\n        uint16 maxMMVolume;\\n        uint rate;\\n    }\\n\\n    //fee token and its associated chainlink feed\\n    struct FeeTokenConfig {\\n        address[] feeTokens;\\n        address[] priceFeeds;\\n    }\\n\\n    //initialize config to intialize storage\\n    struct VaultConfig {\\n\\n        //the address of the wrapped native token\\n        address wrappedNativeToken;\\n\\n        //address of the multisig that will administer this vault\\n        address adminMultiSig;\\n\\n        //starting volume needed to mint a single DXBL token. This increases\\n        //as we get closer to reaching the daily goal\\n        uint baseMintThreshold;\\n\\n        //initial rate ranges to apply\\n        MintRateRangeConfig[] rateRanges;\\n\\n        //set of fee token/price feed pairs to initialize with\\n        FeeTokenConfig feeTokenConfig;\\n    }\\n\\n    /****************************************************************************\\n     * Stored Settings\\n     *****************************************************************************/\\n    //stored mint rate range\\n    struct MintRateRange {\\n        uint16 minMMVolume;\\n        uint16 maxMMVolume;\\n        uint rate;\\n        uint index;\\n    }\\n\\n    //price feed for a fee token\\n    struct PriceFeed {\\n        IPriceFeed feed;\\n        uint8 decimals;\\n    }\\n\\n    /*****************************************************************************************\\n     * STORAGE\\n    ******************************************************************************************/\\n    \\n    \\n    struct VaultData {\\n        //whether the vault is paused\\n        bool paused;\\n\\n        //admin multi sig\\n        address adminMultiSig;\\n\\n        //token address\\n        IDXBL dxbl;\\n\\n        //dexible settlement contract that is allowed to call the vault\\n        address dexible;\\n\\n        //wrapped native asset address for gas computation\\n        address wrappedNativeToken;\\n\\n        //time before migration allowed\\n        uint32 timelockSeconds;\\n\\n        //base volume needed to mint a single DXBL token. This increases\\n        //as we get closer to reaching the daily goal\\n        uint baseMintThreshold;\\n\\n        //current daily volume adjusted each hour\\n        uint currentVolume;\\n\\n        //to compute what hourly slots to deduct from 24hr window\\n        uint lastTradeTimestamp;\\n\\n        //can migrate the contract to a new vault after this time\\n        uint migrateAfterTime;\\n\\n        //all known fee tokens. Some may be inactive\\n        IERC20[] feeTokens;\\n\\n        //the current volume range we're operating in for mint rate\\n        MintRateRange currentMintRate;\\n\\n        //The ranges of 24hr volume and their percentage-per-MM increase to \\n        //mint a single token\\n        MintRateRange[] mintRateRanges;\\n\\n        //hourly volume totals to adjust current volume every 24 hr slot\\n        uint[24] hourlyVolume;\\n\\n        //fee token decimals\\n        mapping(address => uint8) tokenDecimals;\\n\\n        //all allowed fee tokens mapped to their price feed address\\n        mapping(address => PriceFeed) allowedFeeTokens;\\n    }\\n\\n    /**\\n     * If a migration occurs from the V1 vault to a new vault, this structure is forwarded\\n     * after all fee token balances are transferred. It is expected that the new vault will have\\n     * its fee token, minting rates, and starting mint rates mapped out as part of its deployment.\\n     * The migration is intended to get the new vault into a state where it knows the last 24hrs\\n     * of volume and can pick up where this vault leaves off but with new settings and capabilities.\\n     */\\n    struct VaultMigrationV1 {\\n        //current daily volume adjusted each hour\\n        uint currentVolume;\\n\\n        //to compute what hourly slots to deduct from 24hr window\\n        uint lastTradeTimestamp;\\n\\n        //hourly volume totals to adjust in new contract\\n        uint[24] hourlyVolume;\\n\\n        //the current volume range we're operating in for mint rate\\n        MintRateRange currentMintRate;\\n    }\\n\\n    function load() internal pure returns (VaultData storage ds) {\\n        assembly { ds.slot := VAULT_STORAGE_KEY }\\n    }\\n}\",\"keccak256\":\"0xe658404b7cd8ed0887d839acedf14011c1478a85e79c28a7d571f87f9e30784b\",\"license\":\"Unlicense\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/vault/baseContracts/ComputationalView.sol":{"ComputationalView":{"abi":[{"inputs":[],"name":"assets","outputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"usdValue","type":"uint256"},{"internalType":"uint256","name":"usdPrice","type":"uint256"}],"internalType":"struct IComputationalView.AssetInfo[]","name":"tokens","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"aumUSD","outputs":[{"internalType":"uint256","name":"usd","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"feeToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"computeVolumeUSD","outputs":[{"internalType":"uint256","name":"volumeUSD","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"feeToken","type":"address"},{"internalType":"uint256","name":"gasCost","type":"uint256"}],"name":"convertGasToFeeToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentMintRateUSD","outputs":[{"internalType":"uint256","name":"rate","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentNavUSD","outputs":[{"internalType":"uint256","name":"nav","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"rewardToken","type":"address"},{"internalType":"uint256","name":"dxblAmount","type":"uint256"}],"name":"estimateRedemption","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"feeToken","type":"address"}],"name":"feeTokenPriceUSD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610d8b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100785760003560e01c806320529bb11461007d5780633931f45d1461009857806341b5774a146100ab5780635de11890146100b357806371a97305146100bb5780637262f557146100d0578063ce25cb4d146100e3578063f7406fc3146100f6575b600080fd5b610085610109565b6040519081526020015b60405180910390f35b6100856100a6366004610a6c565b610205565b610085610324565b61008561039f565b6100c361046c565b60405161008f9190610a96565b6100856100de366004610a6c565b610660565b6100856100f1366004610b03565b610703565b610085610104366004610a6c565b61078a565b6000806101146107d7565b905060008160080180548060200260200160405190810160405280929190818152602001828054801561017057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610152575b5050505050905060005b81518110156101ff57600082828151811061019757610197610b25565b6020908102919091018101516001600160a01b03811660009081526026870190925260408220909250906101ca826107fb565b905060006101db878584600061096a565b5090506101e88189610b51565b975050505050806101f890610b64565b905061017a565b50505090565b6000806102106107d7565b60038101549091506001600160a01b0390811690851603610234578291505061031e565b60038101546001600160a01b03166000908152602682016020526040812061025b906107fb565b6001600160a01b0386166000908152602684016020526040812091925090610282906107fb565b905060008161029d68327cb2734119d3b7a9601e1b85610b7d565b6102a79190610b94565b9050600068327cb2734119d3b7a9601e1b6102c28884610b7d565b6102cc9190610b94565b6001600160a01b0389166000908152602587016020526040902054909150670de0b6b3a7640000906103029060ff16600a610c9a565b61030c9083610b7d565b6103169190610b94565b955050505050505b92915050565b60008061032f6107d7565b9050600064e8d4a5100082600501546103489190610b94565b905060008161ffff1683600901600101546103639190610b7d565b9050670de0b6b3a764000081846004015461037e9190610b7d565b6103889190610b94565b83600401546103979190610b51565b935050505090565b6000806103aa6107d7565b905060008160010160009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610403573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104279190610ca9565b90506000610433610109565b9050811580610440575080155b1561044f576000935050505090565b8161046282670de0b6b3a7640000610b7d565b6103979190610b94565b606060006104786107d7565b600881015490915067ffffffffffffffff81111561049857610498610cc2565b6040519080825280602002602001820160405280156104fd57816020015b6104ea604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b8152602001906001900390816104b65790505b5091506000808260080180548060200260200160405190810160405280929190818152602001828054801561055b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161053d575b5050505050905060005b815181101561065957600082828151811061058257610582610b25565b6020908102919091018101516001600160a01b03811660009081526026880190925260408220909250906105b5826107fb565b90506000806105c7898685600061096a565b915091506040518060800160405280866001600160a01b0316815260200182815260200183815260200168327cb2734119d3b7a9601e1b620f42408661060d9190610b7d565b6106179190610b94565b8152508a898151811061062c5761062c610b25565b60200260200101819052508761064190610b64565b975050505050508061065290610b64565b9050610565565b5050505090565b60008061066b6107d7565b9050600061067761039f565b9050620f424061069368327cb2734119d3b7a9601e1b83610b7d565b61069d9190610b94565b905060006106aa86610703565b6001600160a01b038716600090815260258501602052604081205491925060ff90911690826106da83600a610c9a565b6106e49086610b7d565b6106ee9190610b94565b9050670de0b6b3a764000061030c8289610b7d565b60008061070e6107d7565b6001600160a01b0380851660009081526026830160205260409020805492935091166107795760405162461bcd60e51b81526020600482015260156024820152742ab739bab83837b93a32b2103332b2903a37b5b2b760591b60448201526064015b60405180910390fd5b610782816107fb565b949350505050565b6000806107956107d7565b6001600160a01b038516600090815260268201602052604081209192506107bb826107fb565b905060006107cb8488848961096a565b50979650505050505050565b7fbfa76ec2967ed7f8d3d40cd552f1451ab03573b596bfce931a6a016f7733078c90565b60008060008360000160009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610855573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108799190610cf2565b50935050925050600082136108ca5760405162461bcd60e51b81526020600482015260176024820152764e6f207072696365206461746120617661696c61626c6560481b6044820152606401610770565b60006102586108dc6201518042610d42565b6108e69190610d42565b905080821161092a5760405162461bcd60e51b815260206004820152601060248201526f5374616c65207072696365206461746160801b6044820152606401610770565b845461094190600160a01b900460ff16600a610c9a565b61095768327cb2734119d3b7a9601e1b85610b7d565b6109619190610b94565b95945050505050565b6000818082036109df576040516370a0823160e01b81523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa1580156109b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109dc9190610ca9565b90505b620f42406109ed8583610b7d565b6109f79190610b7d565b6001600160a01b038616600090815260258801602052604090205490925068327cb2734119d3b7a9601e1b90610a319060ff16600a610c9a565b610a3b9190610b7d565b610a459083610b94565b915094509492505050565b80356001600160a01b0381168114610a6757600080fd5b919050565b60008060408385031215610a7f57600080fd5b610a8883610a50565b946020939093013593505050565b602080825282518282018190526000919060409081850190868401855b82811015610af657815180516001600160a01b03168552868101518786015285810151868601526060908101519085015260809093019290850190600101610ab3565b5091979650505050505050565b600060208284031215610b1557600080fd5b610b1e82610a50565b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561031e5761031e610b3b565b600060018201610b7657610b76610b3b565b5060010190565b808202811582820484141761031e5761031e610b3b565b600082610bb157634e487b7160e01b600052601260045260246000fd5b500490565b600181815b80851115610bf1578160001904821115610bd757610bd7610b3b565b80851615610be457918102915b93841c9390800290610bbb565b509250929050565b600082610c085750600161031e565b81610c155750600061031e565b8160018114610c2b5760028114610c3557610c51565b600191505061031e565b60ff841115610c4657610c46610b3b565b50506001821b61031e565b5060208310610133831016604e8410600b8410161715610c74575081810a61031e565b610c7e8383610bb6565b8060001904821115610c9257610c92610b3b565b029392505050565b6000610b1e60ff841683610bf9565b600060208284031215610cbb57600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b805169ffffffffffffffffffff81168114610a6757600080fd5b600080600080600060a08688031215610d0a57600080fd5b610d1386610cd8565b9450602086015193506040860151925060608601519150610d3660808701610cd8565b90509295509295909350565b8181038181111561031e5761031e610b3b56fea2646970667358221220b6e8af7dca88c31bee16aa86f6e8ea9a08e7780b8f927cdb1806b0c838136d8764736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD8B DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x78 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x20529BB1 EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0x3931F45D EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x41B5774A EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x5DE11890 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x71A97305 EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0x7262F557 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0xCE25CB4D EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0xF7406FC3 EQ PUSH2 0xF6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x85 PUSH2 0x109 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x205 JUMP JUMPDEST PUSH2 0x85 PUSH2 0x324 JUMP JUMPDEST PUSH2 0x85 PUSH2 0x39F JUMP JUMPDEST PUSH2 0xC3 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP2 SWAP1 PUSH2 0xA96 JUMP JUMPDEST PUSH2 0x85 PUSH2 0xDE CALLDATASIZE PUSH1 0x4 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x660 JUMP JUMPDEST PUSH2 0x85 PUSH2 0xF1 CALLDATASIZE PUSH1 0x4 PUSH2 0xB03 JUMP JUMPDEST PUSH2 0x703 JUMP JUMPDEST PUSH2 0x85 PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x78A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x114 PUSH2 0x7D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x8 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x170 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x152 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1FF JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x197 JUMPI PUSH2 0x197 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x26 DUP8 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 SWAP3 POP SWAP1 PUSH2 0x1CA DUP3 PUSH2 0x7FB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1DB DUP8 DUP6 DUP5 PUSH1 0x0 PUSH2 0x96A JUMP JUMPDEST POP SWAP1 POP PUSH2 0x1E8 DUP2 DUP10 PUSH2 0xB51 JUMP JUMPDEST SWAP8 POP POP POP POP POP DUP1 PUSH2 0x1F8 SWAP1 PUSH2 0xB64 JUMP JUMPDEST SWAP1 POP PUSH2 0x17A JUMP JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x210 PUSH2 0x7D7 JUMP JUMPDEST PUSH1 0x3 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP6 AND SUB PUSH2 0x234 JUMPI DUP3 SWAP2 POP POP PUSH2 0x31E JUMP JUMPDEST PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x26 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x25B SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x26 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP3 POP SWAP1 PUSH2 0x282 SWAP1 PUSH2 0x7FB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0x29D PUSH9 0x327CB2734119D3B7A9 PUSH1 0x1E SHL DUP6 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0xB94 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH9 0x327CB2734119D3B7A9 PUSH1 0x1E SHL PUSH2 0x2C2 DUP9 DUP5 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0xB94 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x25 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x302 SWAP1 PUSH1 0xFF AND PUSH1 0xA PUSH2 0xC9A JUMP JUMPDEST PUSH2 0x30C SWAP1 DUP4 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0x316 SWAP2 SWAP1 PUSH2 0xB94 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x32F PUSH2 0x7D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH5 0xE8D4A51000 DUP3 PUSH1 0x5 ADD SLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0xB94 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0xFFFF AND DUP4 PUSH1 0x9 ADD PUSH1 0x1 ADD SLOAD PUSH2 0x363 SWAP2 SWAP1 PUSH2 0xB7D JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 DUP5 PUSH1 0x4 ADD SLOAD PUSH2 0x37E SWAP2 SWAP1 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0x388 SWAP2 SWAP1 PUSH2 0xB94 JUMP JUMPDEST DUP4 PUSH1 0x4 ADD SLOAD PUSH2 0x397 SWAP2 SWAP1 PUSH2 0xB51 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3AA PUSH2 0x7D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x403 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x427 SWAP2 SWAP1 PUSH2 0xCA9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x433 PUSH2 0x109 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 PUSH2 0x440 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x44F JUMPI PUSH1 0x0 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH2 0x462 DUP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0x397 SWAP2 SWAP1 PUSH2 0xB94 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x478 PUSH2 0x7D7 JUMP JUMPDEST PUSH1 0x8 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x498 JUMPI PUSH2 0x498 PUSH2 0xCC2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4FD JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x4EA PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x4B6 JUMPI SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 DUP1 DUP3 PUSH1 0x8 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x55B JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x53D JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x659 JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x582 JUMPI PUSH2 0x582 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x26 DUP9 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 SWAP3 POP SWAP1 PUSH2 0x5B5 DUP3 PUSH2 0x7FB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x5C7 DUP10 DUP7 DUP6 PUSH1 0x0 PUSH2 0x96A JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x327CB2734119D3B7A9 PUSH1 0x1E SHL PUSH3 0xF4240 DUP7 PUSH2 0x60D SWAP2 SWAP1 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0x617 SWAP2 SWAP1 PUSH2 0xB94 JUMP JUMPDEST DUP2 MSTORE POP DUP11 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x62C JUMPI PUSH2 0x62C PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP8 PUSH2 0x641 SWAP1 PUSH2 0xB64 JUMP JUMPDEST SWAP8 POP POP POP POP POP POP DUP1 PUSH2 0x652 SWAP1 PUSH2 0xB64 JUMP JUMPDEST SWAP1 POP PUSH2 0x565 JUMP JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x66B PUSH2 0x7D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x677 PUSH2 0x39F JUMP JUMPDEST SWAP1 POP PUSH3 0xF4240 PUSH2 0x693 PUSH9 0x327CB2734119D3B7A9 PUSH1 0x1E SHL DUP4 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0x69D SWAP2 SWAP1 PUSH2 0xB94 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6AA DUP7 PUSH2 0x703 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x25 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP3 PUSH2 0x6DA DUP4 PUSH1 0xA PUSH2 0xC9A JUMP JUMPDEST PUSH2 0x6E4 SWAP1 DUP7 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0x6EE SWAP2 SWAP1 PUSH2 0xB94 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x30C DUP3 DUP10 PUSH2 0xB7D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x70E PUSH2 0x7D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x26 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP SWAP2 AND PUSH2 0x779 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x2AB739BAB83837B93A32B2103332B2903A37B5B2B7 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x782 DUP2 PUSH2 0x7FB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x795 PUSH2 0x7D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x26 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP3 POP PUSH2 0x7BB DUP3 PUSH2 0x7FB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7CB DUP5 DUP9 DUP5 DUP10 PUSH2 0x96A JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0xBFA76EC2967ED7F8D3D40CD552F1451AB03573B596BFCE931A6A016F7733078C SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x855 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x879 SWAP2 SWAP1 PUSH2 0xCF2 JUMP JUMPDEST POP SWAP4 POP POP SWAP3 POP POP PUSH1 0x0 DUP3 SGT PUSH2 0x8CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x4E6F207072696365206461746120617661696C61626C65 PUSH1 0x48 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x770 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x258 PUSH2 0x8DC PUSH3 0x15180 TIMESTAMP PUSH2 0xD42 JUMP JUMPDEST PUSH2 0x8E6 SWAP2 SWAP1 PUSH2 0xD42 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT PUSH2 0x92A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x5374616C652070726963652064617461 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x770 JUMP JUMPDEST DUP5 SLOAD PUSH2 0x941 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0xA PUSH2 0xC9A JUMP JUMPDEST PUSH2 0x957 PUSH9 0x327CB2734119D3B7A9 PUSH1 0x1E SHL DUP6 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0x961 SWAP2 SWAP1 PUSH2 0xB94 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 DUP3 SUB PUSH2 0x9DF JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9DC SWAP2 SWAP1 PUSH2 0xCA9 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH3 0xF4240 PUSH2 0x9ED DUP6 DUP4 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0x9F7 SWAP2 SWAP1 PUSH2 0xB7D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x25 DUP9 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 POP PUSH9 0x327CB2734119D3B7A9 PUSH1 0x1E SHL SWAP1 PUSH2 0xA31 SWAP1 PUSH1 0xFF AND PUSH1 0xA PUSH2 0xC9A JUMP JUMPDEST PUSH2 0xA3B SWAP2 SWAP1 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0xA45 SWAP1 DUP4 PUSH2 0xB94 JUMP JUMPDEST SWAP2 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA88 DUP4 PUSH2 0xA50 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xAF6 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 DUP2 ADD MLOAD DUP8 DUP7 ADD MSTORE DUP6 DUP2 ADD MLOAD DUP7 DUP7 ADD MSTORE PUSH1 0x60 SWAP1 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xAB3 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB1E DUP3 PUSH2 0xA50 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x31E JUMPI PUSH2 0x31E PUSH2 0xB3B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xB76 JUMPI PUSH2 0xB76 PUSH2 0xB3B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x31E JUMPI PUSH2 0x31E PUSH2 0xB3B JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xBB1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0xBF1 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xBD7 JUMPI PUSH2 0xBD7 PUSH2 0xB3B JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0xBE4 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0xBBB JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xC08 JUMPI POP PUSH1 0x1 PUSH2 0x31E JUMP JUMPDEST DUP2 PUSH2 0xC15 JUMPI POP PUSH1 0x0 PUSH2 0x31E JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xC2B JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xC35 JUMPI PUSH2 0xC51 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x31E JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xC46 JUMPI PUSH2 0xC46 PUSH2 0xB3B JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x31E JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xC74 JUMPI POP DUP2 DUP2 EXP PUSH2 0x31E JUMP JUMPDEST PUSH2 0xC7E DUP4 DUP4 PUSH2 0xBB6 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xC92 JUMPI PUSH2 0xC92 PUSH2 0xB3B JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB1E PUSH1 0xFF DUP5 AND DUP4 PUSH2 0xBF9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xA67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD13 DUP7 PUSH2 0xCD8 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0xD36 PUSH1 0x80 DUP8 ADD PUSH2 0xCD8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x31E JUMPI PUSH2 0x31E PUSH2 0xB3B JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 0xE8 0xAF PUSH30 0xCA88C31BEE16AA86F6E8EA9A08E7780B8F927CDB1806B0C838136D876473 PUSH16 0x6C634300081100330000000000000000 ","sourceMap":"170:7229:19:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_getPrice_2699":{"entryPoint":2043,"id":2699,"parameterSlots":1,"returnSlots":1},"@_toUSD_2763":{"entryPoint":2410,"id":2763,"parameterSlots":4,"returnSlots":2},"@assets_2594":{"entryPoint":1132,"id":2594,"parameterSlots":0,"returnSlots":1},"@aumUSD_2432":{"entryPoint":265,"id":2432,"parameterSlots":0,"returnSlots":1},"@computeVolumeUSD_2355":{"entryPoint":1930,"id":2355,"parameterSlots":2,"returnSlots":1},"@convertGasToFeeToken_2193":{"entryPoint":517,"id":2193,"parameterSlots":2,"returnSlots":1},"@currentMintRateUSD_2642":{"entryPoint":804,"id":2642,"parameterSlots":0,"returnSlots":1},"@currentNavUSD_2479":{"entryPoint":927,"id":2479,"parameterSlots":0,"returnSlots":1},"@estimateRedemption_2260":{"entryPoint":1632,"id":2260,"parameterSlots":2,"returnSlots":1},"@feeTokenPriceUSD_2305":{"entryPoint":1795,"id":2305,"parameterSlots":1,"returnSlots":1},"@load_2106":{"entryPoint":2007,"id":2106,"parameterSlots":0,"returnSlots":1},"abi_decode_address":{"entryPoint":2640,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2819,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2668,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":3241,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory":{"entryPoint":3314,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_uint80_fromMemory":{"entryPoint":3288,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_AssetInfo_$1830_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_AssetInfo_$1830_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":2710,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2ca421925c4941a3397518dad13c20d3418010081598deda6cc2f02a05282c33__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4b0df79b6cb2496d5d4d34caf2e75280779b90d3c442f3e9e91afd6e516af648__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_feab262476110b6da19dad5f74ffa5fc85a39886ca1e6c4c3619a320fb4c8b10__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2897,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":2964,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":2998,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":3226,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":3065,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":2941,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":3394,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":2916,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":2875,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":2853,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3266,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6462:23","statements":[{"nodeType":"YulBlock","src":"6:3:23","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:76:23","statements":[{"nodeType":"YulAssignment","src":"125:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:23"},"nodeType":"YulFunctionCall","src":"133:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:23"},{"name":"value0","nodeType":"YulIdentifier","src":"178:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:23"},"nodeType":"YulFunctionCall","src":"160:25:23"},"nodeType":"YulExpressionStatement","src":"160:25:23"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:23","type":""}],"src":"14:177:23"},{"body":{"nodeType":"YulBlock","src":"245:124:23","statements":[{"nodeType":"YulAssignment","src":"255:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"277:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"264:12:23"},"nodeType":"YulFunctionCall","src":"264:20:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"255:5:23"}]},{"body":{"nodeType":"YulBlock","src":"347:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"356:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"359:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"349:6:23"},"nodeType":"YulFunctionCall","src":"349:12:23"},"nodeType":"YulExpressionStatement","src":"349:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"306:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"317:5:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"332:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"337:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"328:3:23"},"nodeType":"YulFunctionCall","src":"328:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"341:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"324:3:23"},"nodeType":"YulFunctionCall","src":"324:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"313:3:23"},"nodeType":"YulFunctionCall","src":"313:31:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"303:2:23"},"nodeType":"YulFunctionCall","src":"303:42:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"296:6:23"},"nodeType":"YulFunctionCall","src":"296:50:23"},"nodeType":"YulIf","src":"293:70:23"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"224:6:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"235:5:23","type":""}],"src":"196:173:23"},{"body":{"nodeType":"YulBlock","src":"461:167:23","statements":[{"body":{"nodeType":"YulBlock","src":"507:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"516:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"519:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"509:6:23"},"nodeType":"YulFunctionCall","src":"509:12:23"},"nodeType":"YulExpressionStatement","src":"509:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"482:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"491:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"478:3:23"},"nodeType":"YulFunctionCall","src":"478:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"503:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"474:3:23"},"nodeType":"YulFunctionCall","src":"474:32:23"},"nodeType":"YulIf","src":"471:52:23"},{"nodeType":"YulAssignment","src":"532:39:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"561:9:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"542:18:23"},"nodeType":"YulFunctionCall","src":"542:29:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"532:6:23"}]},{"nodeType":"YulAssignment","src":"580:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"607:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"618:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"603:3:23"},"nodeType":"YulFunctionCall","src":"603:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"590:12:23"},"nodeType":"YulFunctionCall","src":"590:32:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"580:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"419:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"430:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"442:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"450:6:23","type":""}],"src":"374:254:23"},{"body":{"nodeType":"YulBlock","src":"838:748:23","statements":[{"nodeType":"YulVariableDeclaration","src":"848:12:23","value":{"kind":"number","nodeType":"YulLiteral","src":"858:2:23","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"852:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"869:32:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"887:9:23"},{"name":"_1","nodeType":"YulIdentifier","src":"898:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"883:3:23"},"nodeType":"YulFunctionCall","src":"883:18:23"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"873:6:23","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"917:9:23"},{"name":"_1","nodeType":"YulIdentifier","src":"928:2:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"910:6:23"},"nodeType":"YulFunctionCall","src":"910:21:23"},"nodeType":"YulExpressionStatement","src":"910:21:23"},{"nodeType":"YulVariableDeclaration","src":"940:17:23","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"951:6:23"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"944:3:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"966:27:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"986:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"980:5:23"},"nodeType":"YulFunctionCall","src":"980:13:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"970:6:23","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"1009:6:23"},{"name":"length","nodeType":"YulIdentifier","src":"1017:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1002:6:23"},"nodeType":"YulFunctionCall","src":"1002:22:23"},"nodeType":"YulExpressionStatement","src":"1002:22:23"},{"nodeType":"YulVariableDeclaration","src":"1033:12:23","value":{"kind":"number","nodeType":"YulLiteral","src":"1043:2:23","type":"","value":"64"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1037:2:23","type":""}]},{"nodeType":"YulAssignment","src":"1054:25:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1065:9:23"},{"name":"_2","nodeType":"YulIdentifier","src":"1076:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1061:3:23"},"nodeType":"YulFunctionCall","src":"1061:18:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1054:3:23"}]},{"nodeType":"YulVariableDeclaration","src":"1088:29:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1106:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"1114:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1102:3:23"},"nodeType":"YulFunctionCall","src":"1102:15:23"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"1092:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1126:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"1135:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1130:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"1194:366:23","statements":[{"nodeType":"YulVariableDeclaration","src":"1208:23:23","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1224:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1218:5:23"},"nodeType":"YulFunctionCall","src":"1218:13:23"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"1212:2:23","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1251:3:23"},{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1266:2:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1260:5:23"},"nodeType":"YulFunctionCall","src":"1260:9:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1279:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1284:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1275:3:23"},"nodeType":"YulFunctionCall","src":"1275:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"1288:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1271:3:23"},"nodeType":"YulFunctionCall","src":"1271:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1256:3:23"},"nodeType":"YulFunctionCall","src":"1256:35:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1244:6:23"},"nodeType":"YulFunctionCall","src":"1244:48:23"},"nodeType":"YulExpressionStatement","src":"1244:48:23"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1316:3:23"},{"name":"_1","nodeType":"YulIdentifier","src":"1321:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1312:3:23"},"nodeType":"YulFunctionCall","src":"1312:12:23"},{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1336:2:23"},{"name":"_1","nodeType":"YulIdentifier","src":"1340:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1332:3:23"},"nodeType":"YulFunctionCall","src":"1332:11:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1326:5:23"},"nodeType":"YulFunctionCall","src":"1326:18:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1305:6:23"},"nodeType":"YulFunctionCall","src":"1305:40:23"},"nodeType":"YulExpressionStatement","src":"1305:40:23"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1369:3:23"},{"name":"_2","nodeType":"YulIdentifier","src":"1374:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1365:3:23"},"nodeType":"YulFunctionCall","src":"1365:12:23"},{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1389:2:23"},{"name":"_2","nodeType":"YulIdentifier","src":"1393:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1385:3:23"},"nodeType":"YulFunctionCall","src":"1385:11:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1379:5:23"},"nodeType":"YulFunctionCall","src":"1379:18:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1358:6:23"},"nodeType":"YulFunctionCall","src":"1358:40:23"},"nodeType":"YulExpressionStatement","src":"1358:40:23"},{"nodeType":"YulVariableDeclaration","src":"1411:14:23","value":{"kind":"number","nodeType":"YulLiteral","src":"1421:4:23","type":"","value":"0x60"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"1415:2:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1449:3:23"},{"name":"_4","nodeType":"YulIdentifier","src":"1454:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1445:3:23"},"nodeType":"YulFunctionCall","src":"1445:12:23"},{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1469:2:23"},{"name":"_4","nodeType":"YulIdentifier","src":"1473:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1465:3:23"},"nodeType":"YulFunctionCall","src":"1465:11:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1459:5:23"},"nodeType":"YulFunctionCall","src":"1459:18:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1438:6:23"},"nodeType":"YulFunctionCall","src":"1438:40:23"},"nodeType":"YulExpressionStatement","src":"1438:40:23"},{"nodeType":"YulAssignment","src":"1491:21:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1502:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"1507:4:23","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1498:3:23"},"nodeType":"YulFunctionCall","src":"1498:14:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1491:3:23"}]},{"nodeType":"YulAssignment","src":"1525:25:23","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1539:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"1547:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1535:3:23"},"nodeType":"YulFunctionCall","src":"1535:15:23"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1525:6:23"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1156:1:23"},{"name":"length","nodeType":"YulIdentifier","src":"1159:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1153:2:23"},"nodeType":"YulFunctionCall","src":"1153:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1167:18:23","statements":[{"nodeType":"YulAssignment","src":"1169:14:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1178:1:23"},{"kind":"number","nodeType":"YulLiteral","src":"1181:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1174:3:23"},"nodeType":"YulFunctionCall","src":"1174:9:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1169:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"1149:3:23","statements":[]},"src":"1145:415:23"},{"nodeType":"YulAssignment","src":"1569:11:23","value":{"name":"pos","nodeType":"YulIdentifier","src":"1577:3:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1569:4:23"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_AssetInfo_$1830_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_AssetInfo_$1830_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"807:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"818:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"829:4:23","type":""}],"src":"633:953:23"},{"body":{"nodeType":"YulBlock","src":"1661:116:23","statements":[{"body":{"nodeType":"YulBlock","src":"1707:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1716:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1719:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1709:6:23"},"nodeType":"YulFunctionCall","src":"1709:12:23"},"nodeType":"YulExpressionStatement","src":"1709:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1682:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"1691:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1678:3:23"},"nodeType":"YulFunctionCall","src":"1678:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"1703:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1674:3:23"},"nodeType":"YulFunctionCall","src":"1674:32:23"},"nodeType":"YulIf","src":"1671:52:23"},{"nodeType":"YulAssignment","src":"1732:39:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1761:9:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1742:18:23"},"nodeType":"YulFunctionCall","src":"1742:29:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1732:6:23"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1627:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1638:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1650:6:23","type":""}],"src":"1591:186:23"},{"body":{"nodeType":"YulBlock","src":"1814:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1831:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1838:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1843:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1834:3:23"},"nodeType":"YulFunctionCall","src":"1834:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1824:6:23"},"nodeType":"YulFunctionCall","src":"1824:31:23"},"nodeType":"YulExpressionStatement","src":"1824:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1871:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1874:4:23","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1864:6:23"},"nodeType":"YulFunctionCall","src":"1864:15:23"},"nodeType":"YulExpressionStatement","src":"1864:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1895:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1898:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1888:6:23"},"nodeType":"YulFunctionCall","src":"1888:15:23"},"nodeType":"YulExpressionStatement","src":"1888:15:23"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"1782:127:23"},{"body":{"nodeType":"YulBlock","src":"1946:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1963:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1970:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1975:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1966:3:23"},"nodeType":"YulFunctionCall","src":"1966:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1956:6:23"},"nodeType":"YulFunctionCall","src":"1956:31:23"},"nodeType":"YulExpressionStatement","src":"1956:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2003:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2006:4:23","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1996:6:23"},"nodeType":"YulFunctionCall","src":"1996:15:23"},"nodeType":"YulExpressionStatement","src":"1996:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2027:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2030:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2020:6:23"},"nodeType":"YulFunctionCall","src":"2020:15:23"},"nodeType":"YulExpressionStatement","src":"2020:15:23"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"1914:127:23"},{"body":{"nodeType":"YulBlock","src":"2094:77:23","statements":[{"nodeType":"YulAssignment","src":"2104:16:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2115:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"2118:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2111:3:23"},"nodeType":"YulFunctionCall","src":"2111:9:23"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"2104:3:23"}]},{"body":{"nodeType":"YulBlock","src":"2143:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"2145:16:23"},"nodeType":"YulFunctionCall","src":"2145:18:23"},"nodeType":"YulExpressionStatement","src":"2145:18:23"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2135:1:23"},{"name":"sum","nodeType":"YulIdentifier","src":"2138:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2132:2:23"},"nodeType":"YulFunctionCall","src":"2132:10:23"},"nodeType":"YulIf","src":"2129:36:23"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2077:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"2080:1:23","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2086:3:23","type":""}],"src":"2046:125:23"},{"body":{"nodeType":"YulBlock","src":"2223:88:23","statements":[{"body":{"nodeType":"YulBlock","src":"2254:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"2256:16:23"},"nodeType":"YulFunctionCall","src":"2256:18:23"},"nodeType":"YulExpressionStatement","src":"2256:18:23"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2239:5:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2250:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2246:3:23"},"nodeType":"YulFunctionCall","src":"2246:6:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2236:2:23"},"nodeType":"YulFunctionCall","src":"2236:17:23"},"nodeType":"YulIf","src":"2233:43:23"},{"nodeType":"YulAssignment","src":"2285:20:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2296:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"2303:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2292:3:23"},"nodeType":"YulFunctionCall","src":"2292:13:23"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2285:3:23"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2205:5:23","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2215:3:23","type":""}],"src":"2176:135:23"},{"body":{"nodeType":"YulBlock","src":"2368:116:23","statements":[{"nodeType":"YulAssignment","src":"2378:20:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2393:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"2396:1:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2389:3:23"},"nodeType":"YulFunctionCall","src":"2389:9:23"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"2378:7:23"}]},{"body":{"nodeType":"YulBlock","src":"2456:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"2458:16:23"},"nodeType":"YulFunctionCall","src":"2458:18:23"},"nodeType":"YulExpressionStatement","src":"2458:18:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2427:1:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2420:6:23"},"nodeType":"YulFunctionCall","src":"2420:9:23"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"2434:1:23"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"2441:7:23"},{"name":"x","nodeType":"YulIdentifier","src":"2450:1:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2437:3:23"},"nodeType":"YulFunctionCall","src":"2437:15:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2431:2:23"},"nodeType":"YulFunctionCall","src":"2431:22:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2417:2:23"},"nodeType":"YulFunctionCall","src":"2417:37:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2410:6:23"},"nodeType":"YulFunctionCall","src":"2410:45:23"},"nodeType":"YulIf","src":"2407:71:23"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2347:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"2350:1:23","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"2356:7:23","type":""}],"src":"2316:168:23"},{"body":{"nodeType":"YulBlock","src":"2535:171:23","statements":[{"body":{"nodeType":"YulBlock","src":"2566:111:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2587:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2594:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2599:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2590:3:23"},"nodeType":"YulFunctionCall","src":"2590:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2580:6:23"},"nodeType":"YulFunctionCall","src":"2580:31:23"},"nodeType":"YulExpressionStatement","src":"2580:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2631:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2634:4:23","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2624:6:23"},"nodeType":"YulFunctionCall","src":"2624:15:23"},"nodeType":"YulExpressionStatement","src":"2624:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2659:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2662:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2652:6:23"},"nodeType":"YulFunctionCall","src":"2652:15:23"},"nodeType":"YulExpressionStatement","src":"2652:15:23"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"2555:1:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2548:6:23"},"nodeType":"YulFunctionCall","src":"2548:9:23"},"nodeType":"YulIf","src":"2545:132:23"},{"nodeType":"YulAssignment","src":"2686:14:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2695:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"2698:1:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2691:3:23"},"nodeType":"YulFunctionCall","src":"2691:9:23"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2686:1:23"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2520:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"2523:1:23","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"2529:1:23","type":""}],"src":"2489:217:23"},{"body":{"nodeType":"YulBlock","src":"2775:358:23","statements":[{"nodeType":"YulVariableDeclaration","src":"2785:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"2800:1:23","type":"","value":"1"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"2789:7:23","type":""}]},{"nodeType":"YulAssignment","src":"2810:16:23","value":{"name":"power_1","nodeType":"YulIdentifier","src":"2819:7:23"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"2810:5:23"}]},{"nodeType":"YulAssignment","src":"2835:13:23","value":{"name":"_base","nodeType":"YulIdentifier","src":"2843:5:23"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"2835:4:23"}]},{"body":{"nodeType":"YulBlock","src":"2899:228:23","statements":[{"body":{"nodeType":"YulBlock","src":"2944:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"2946:16:23"},"nodeType":"YulFunctionCall","src":"2946:18:23"},"nodeType":"YulExpressionStatement","src":"2946:18:23"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"2919:4:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2933:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2929:3:23"},"nodeType":"YulFunctionCall","src":"2929:6:23"},{"name":"base","nodeType":"YulIdentifier","src":"2937:4:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2925:3:23"},"nodeType":"YulFunctionCall","src":"2925:17:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2916:2:23"},"nodeType":"YulFunctionCall","src":"2916:27:23"},"nodeType":"YulIf","src":"2913:53:23"},{"body":{"nodeType":"YulBlock","src":"3005:29:23","statements":[{"nodeType":"YulAssignment","src":"3007:25:23","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"3020:5:23"},{"name":"base","nodeType":"YulIdentifier","src":"3027:4:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3016:3:23"},"nodeType":"YulFunctionCall","src":"3016:16:23"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"3007:5:23"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"2986:8:23"},{"name":"power_1","nodeType":"YulIdentifier","src":"2996:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2982:3:23"},"nodeType":"YulFunctionCall","src":"2982:22:23"},"nodeType":"YulIf","src":"2979:55:23"},{"nodeType":"YulAssignment","src":"3047:23:23","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"3059:4:23"},{"name":"base","nodeType":"YulIdentifier","src":"3065:4:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3055:3:23"},"nodeType":"YulFunctionCall","src":"3055:15:23"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"3047:4:23"}]},{"nodeType":"YulAssignment","src":"3083:34:23","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"3099:7:23"},{"name":"exponent","nodeType":"YulIdentifier","src":"3108:8:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3095:3:23"},"nodeType":"YulFunctionCall","src":"3095:22:23"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"3083:8:23"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"2868:8:23"},{"name":"power_1","nodeType":"YulIdentifier","src":"2878:7:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2865:2:23"},"nodeType":"YulFunctionCall","src":"2865:21:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2887:3:23","statements":[]},"pre":{"nodeType":"YulBlock","src":"2861:3:23","statements":[]},"src":"2857:270:23"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nodeType":"YulTypedName","src":"2739:5:23","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"2746:8:23","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"2759:5:23","type":""},{"name":"base","nodeType":"YulTypedName","src":"2766:4:23","type":""}],"src":"2711:422:23"},{"body":{"nodeType":"YulBlock","src":"3197:747:23","statements":[{"body":{"nodeType":"YulBlock","src":"3235:52:23","statements":[{"nodeType":"YulAssignment","src":"3249:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"3258:1:23","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"3249:5:23"}]},{"nodeType":"YulLeave","src":"3272:5:23"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"3217:8:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3210:6:23"},"nodeType":"YulFunctionCall","src":"3210:16:23"},"nodeType":"YulIf","src":"3207:80:23"},{"body":{"nodeType":"YulBlock","src":"3320:52:23","statements":[{"nodeType":"YulAssignment","src":"3334:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"3343:1:23","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"3334:5:23"}]},{"nodeType":"YulLeave","src":"3357:5:23"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"3306:4:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3299:6:23"},"nodeType":"YulFunctionCall","src":"3299:12:23"},"nodeType":"YulIf","src":"3296:76:23"},{"cases":[{"body":{"nodeType":"YulBlock","src":"3408:52:23","statements":[{"nodeType":"YulAssignment","src":"3422:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"3431:1:23","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"3422:5:23"}]},{"nodeType":"YulLeave","src":"3445:5:23"}]},"nodeType":"YulCase","src":"3401:59:23","value":{"kind":"number","nodeType":"YulLiteral","src":"3406:1:23","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3476:123:23","statements":[{"body":{"nodeType":"YulBlock","src":"3511:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3513:16:23"},"nodeType":"YulFunctionCall","src":"3513:18:23"},"nodeType":"YulExpressionStatement","src":"3513:18:23"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"3496:8:23"},{"kind":"number","nodeType":"YulLiteral","src":"3506:3:23","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3493:2:23"},"nodeType":"YulFunctionCall","src":"3493:17:23"},"nodeType":"YulIf","src":"3490:43:23"},{"nodeType":"YulAssignment","src":"3546:25:23","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"3559:8:23"},{"kind":"number","nodeType":"YulLiteral","src":"3569:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3555:3:23"},"nodeType":"YulFunctionCall","src":"3555:16:23"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"3546:5:23"}]},{"nodeType":"YulLeave","src":"3584:5:23"}]},"nodeType":"YulCase","src":"3469:130:23","value":{"kind":"number","nodeType":"YulLiteral","src":"3474:1:23","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"3388:4:23"},"nodeType":"YulSwitch","src":"3381:218:23"},{"body":{"nodeType":"YulBlock","src":"3697:70:23","statements":[{"nodeType":"YulAssignment","src":"3711:28:23","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"3724:4:23"},{"name":"exponent","nodeType":"YulIdentifier","src":"3730:8:23"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"3720:3:23"},"nodeType":"YulFunctionCall","src":"3720:19:23"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"3711:5:23"}]},{"nodeType":"YulLeave","src":"3752:5:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"3621:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"3627:2:23","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3618:2:23"},"nodeType":"YulFunctionCall","src":"3618:12:23"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"3635:8:23"},{"kind":"number","nodeType":"YulLiteral","src":"3645:2:23","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3632:2:23"},"nodeType":"YulFunctionCall","src":"3632:16:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3614:3:23"},"nodeType":"YulFunctionCall","src":"3614:35:23"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"3658:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"3664:3:23","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3655:2:23"},"nodeType":"YulFunctionCall","src":"3655:13:23"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"3673:8:23"},{"kind":"number","nodeType":"YulLiteral","src":"3683:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3670:2:23"},"nodeType":"YulFunctionCall","src":"3670:16:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3651:3:23"},"nodeType":"YulFunctionCall","src":"3651:36:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3611:2:23"},"nodeType":"YulFunctionCall","src":"3611:77:23"},"nodeType":"YulIf","src":"3608:159:23"},{"nodeType":"YulVariableDeclaration","src":"3776:57:23","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"3818:4:23"},{"name":"exponent","nodeType":"YulIdentifier","src":"3824:8:23"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"3799:18:23"},"nodeType":"YulFunctionCall","src":"3799:34:23"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"3780:7:23","type":""},{"name":"base_1","nodeType":"YulTypedName","src":"3789:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"3878:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3880:16:23"},"nodeType":"YulFunctionCall","src":"3880:18:23"},"nodeType":"YulExpressionStatement","src":"3880:18:23"}]},"condition":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"3848:7:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3865:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3861:3:23"},"nodeType":"YulFunctionCall","src":"3861:6:23"},{"name":"base_1","nodeType":"YulIdentifier","src":"3869:6:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3857:3:23"},"nodeType":"YulFunctionCall","src":"3857:19:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3845:2:23"},"nodeType":"YulFunctionCall","src":"3845:32:23"},"nodeType":"YulIf","src":"3842:58:23"},{"nodeType":"YulAssignment","src":"3909:29:23","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"3922:7:23"},{"name":"base_1","nodeType":"YulIdentifier","src":"3931:6:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3918:3:23"},"nodeType":"YulFunctionCall","src":"3918:20:23"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"3909:5:23"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"3168:4:23","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"3174:8:23","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"3187:5:23","type":""}],"src":"3138:806:23"},{"body":{"nodeType":"YulBlock","src":"4017:72:23","statements":[{"nodeType":"YulAssignment","src":"4027:56:23","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"4057:4:23"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"4067:8:23"},{"kind":"number","nodeType":"YulLiteral","src":"4077:4:23","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4063:3:23"},"nodeType":"YulFunctionCall","src":"4063:19:23"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"4036:20:23"},"nodeType":"YulFunctionCall","src":"4036:47:23"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"4027:5:23"}]}]},"name":"checked_exp_t_uint256_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"3988:4:23","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"3994:8:23","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"4007:5:23","type":""}],"src":"3949:140:23"},{"body":{"nodeType":"YulBlock","src":"4175:103:23","statements":[{"body":{"nodeType":"YulBlock","src":"4221:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4230:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4233:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4223:6:23"},"nodeType":"YulFunctionCall","src":"4223:12:23"},"nodeType":"YulExpressionStatement","src":"4223:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4196:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"4205:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4192:3:23"},"nodeType":"YulFunctionCall","src":"4192:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"4217:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4188:3:23"},"nodeType":"YulFunctionCall","src":"4188:32:23"},"nodeType":"YulIf","src":"4185:52:23"},{"nodeType":"YulAssignment","src":"4246:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4262:9:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4256:5:23"},"nodeType":"YulFunctionCall","src":"4256:16:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4246:6:23"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4141:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4152:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4164:6:23","type":""}],"src":"4094:184:23"},{"body":{"nodeType":"YulBlock","src":"4315:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4332:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4339:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4344:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4335:3:23"},"nodeType":"YulFunctionCall","src":"4335:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4325:6:23"},"nodeType":"YulFunctionCall","src":"4325:31:23"},"nodeType":"YulExpressionStatement","src":"4325:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4372:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4375:4:23","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4365:6:23"},"nodeType":"YulFunctionCall","src":"4365:15:23"},"nodeType":"YulExpressionStatement","src":"4365:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4396:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4399:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4389:6:23"},"nodeType":"YulFunctionCall","src":"4389:15:23"},"nodeType":"YulExpressionStatement","src":"4389:15:23"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"4283:127:23"},{"body":{"nodeType":"YulBlock","src":"4589:171:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4606:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4617:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4599:6:23"},"nodeType":"YulFunctionCall","src":"4599:21:23"},"nodeType":"YulExpressionStatement","src":"4599:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4640:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4651:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4636:3:23"},"nodeType":"YulFunctionCall","src":"4636:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"4656:2:23","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4629:6:23"},"nodeType":"YulFunctionCall","src":"4629:30:23"},"nodeType":"YulExpressionStatement","src":"4629:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4679:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4690:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4675:3:23"},"nodeType":"YulFunctionCall","src":"4675:18:23"},{"hexValue":"556e737570706f727465642066656520746f6b656e","kind":"string","nodeType":"YulLiteral","src":"4695:23:23","type":"","value":"Unsupported fee token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4668:6:23"},"nodeType":"YulFunctionCall","src":"4668:51:23"},"nodeType":"YulExpressionStatement","src":"4668:51:23"},{"nodeType":"YulAssignment","src":"4728:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4740:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4751:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4736:3:23"},"nodeType":"YulFunctionCall","src":"4736:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4728:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_feab262476110b6da19dad5f74ffa5fc85a39886ca1e6c4c3619a320fb4c8b10__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4566:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4580:4:23","type":""}],"src":"4415:345:23"},{"body":{"nodeType":"YulBlock","src":"4824:120:23","statements":[{"nodeType":"YulAssignment","src":"4834:22:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4849:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4843:5:23"},"nodeType":"YulFunctionCall","src":"4843:13:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4834:5:23"}]},{"body":{"nodeType":"YulBlock","src":"4922:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4931:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4934:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4924:6:23"},"nodeType":"YulFunctionCall","src":"4924:12:23"},"nodeType":"YulExpressionStatement","src":"4924:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4878:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4889:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"4896:22:23","type":"","value":"0xffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4885:3:23"},"nodeType":"YulFunctionCall","src":"4885:34:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4875:2:23"},"nodeType":"YulFunctionCall","src":"4875:45:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4868:6:23"},"nodeType":"YulFunctionCall","src":"4868:53:23"},"nodeType":"YulIf","src":"4865:73:23"}]},"name":"abi_decode_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4803:6:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4814:5:23","type":""}],"src":"4765:179:23"},{"body":{"nodeType":"YulBlock","src":"5095:327:23","statements":[{"body":{"nodeType":"YulBlock","src":"5142:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5151:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5154:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5144:6:23"},"nodeType":"YulFunctionCall","src":"5144:12:23"},"nodeType":"YulExpressionStatement","src":"5144:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5116:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"5125:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5112:3:23"},"nodeType":"YulFunctionCall","src":"5112:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"5137:3:23","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5108:3:23"},"nodeType":"YulFunctionCall","src":"5108:33:23"},"nodeType":"YulIf","src":"5105:53:23"},{"nodeType":"YulAssignment","src":"5167:49:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5206:9:23"}],"functionName":{"name":"abi_decode_uint80_fromMemory","nodeType":"YulIdentifier","src":"5177:28:23"},"nodeType":"YulFunctionCall","src":"5177:39:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5167:6:23"}]},{"nodeType":"YulAssignment","src":"5225:35:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5245:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5256:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5241:3:23"},"nodeType":"YulFunctionCall","src":"5241:18:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5235:5:23"},"nodeType":"YulFunctionCall","src":"5235:25:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5225:6:23"}]},{"nodeType":"YulAssignment","src":"5269:35:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5289:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5300:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5285:3:23"},"nodeType":"YulFunctionCall","src":"5285:18:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5279:5:23"},"nodeType":"YulFunctionCall","src":"5279:25:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5269:6:23"}]},{"nodeType":"YulAssignment","src":"5313:35:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5333:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5344:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5329:3:23"},"nodeType":"YulFunctionCall","src":"5329:18:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5323:5:23"},"nodeType":"YulFunctionCall","src":"5323:25:23"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5313:6:23"}]},{"nodeType":"YulAssignment","src":"5357:59:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5400:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5411:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5396:3:23"},"nodeType":"YulFunctionCall","src":"5396:19:23"}],"functionName":{"name":"abi_decode_uint80_fromMemory","nodeType":"YulIdentifier","src":"5367:28:23"},"nodeType":"YulFunctionCall","src":"5367:49:23"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"5357:6:23"}]}]},"name":"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5029:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5040:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5052:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5060:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5068:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5076:6:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5084:6:23","type":""}],"src":"4949:473:23"},{"body":{"nodeType":"YulBlock","src":"5601:173:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5618:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5629:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5611:6:23"},"nodeType":"YulFunctionCall","src":"5611:21:23"},"nodeType":"YulExpressionStatement","src":"5611:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5652:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5663:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5648:3:23"},"nodeType":"YulFunctionCall","src":"5648:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"5668:2:23","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5641:6:23"},"nodeType":"YulFunctionCall","src":"5641:30:23"},"nodeType":"YulExpressionStatement","src":"5641:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5691:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5702:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5687:3:23"},"nodeType":"YulFunctionCall","src":"5687:18:23"},{"hexValue":"4e6f207072696365206461746120617661696c61626c65","kind":"string","nodeType":"YulLiteral","src":"5707:25:23","type":"","value":"No price data available"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5680:6:23"},"nodeType":"YulFunctionCall","src":"5680:53:23"},"nodeType":"YulExpressionStatement","src":"5680:53:23"},{"nodeType":"YulAssignment","src":"5742:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5754:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5765:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5750:3:23"},"nodeType":"YulFunctionCall","src":"5750:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5742:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_4b0df79b6cb2496d5d4d34caf2e75280779b90d3c442f3e9e91afd6e516af648__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5578:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5592:4:23","type":""}],"src":"5427:347:23"},{"body":{"nodeType":"YulBlock","src":"5828:79:23","statements":[{"nodeType":"YulAssignment","src":"5838:17:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5850:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"5853:1:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5846:3:23"},"nodeType":"YulFunctionCall","src":"5846:9:23"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"5838:4:23"}]},{"body":{"nodeType":"YulBlock","src":"5879:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5881:16:23"},"nodeType":"YulFunctionCall","src":"5881:18:23"},"nodeType":"YulExpressionStatement","src":"5881:18:23"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"5870:4:23"},{"name":"x","nodeType":"YulIdentifier","src":"5876:1:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5867:2:23"},"nodeType":"YulFunctionCall","src":"5867:11:23"},"nodeType":"YulIf","src":"5864:37:23"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5810:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"5813:1:23","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"5819:4:23","type":""}],"src":"5779:128:23"},{"body":{"nodeType":"YulBlock","src":"6086:166:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6103:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6114:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6096:6:23"},"nodeType":"YulFunctionCall","src":"6096:21:23"},"nodeType":"YulExpressionStatement","src":"6096:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6137:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6148:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6133:3:23"},"nodeType":"YulFunctionCall","src":"6133:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"6153:2:23","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6126:6:23"},"nodeType":"YulFunctionCall","src":"6126:30:23"},"nodeType":"YulExpressionStatement","src":"6126:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6176:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6187:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6172:3:23"},"nodeType":"YulFunctionCall","src":"6172:18:23"},{"hexValue":"5374616c652070726963652064617461","kind":"string","nodeType":"YulLiteral","src":"6192:18:23","type":"","value":"Stale price data"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6165:6:23"},"nodeType":"YulFunctionCall","src":"6165:46:23"},"nodeType":"YulExpressionStatement","src":"6165:46:23"},{"nodeType":"YulAssignment","src":"6220:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6232:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6243:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6228:3:23"},"nodeType":"YulFunctionCall","src":"6228:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6220:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_2ca421925c4941a3397518dad13c20d3418010081598deda6cc2f02a05282c33__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6063:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6077:4:23","type":""}],"src":"5912:340:23"},{"body":{"nodeType":"YulBlock","src":"6358:102:23","statements":[{"nodeType":"YulAssignment","src":"6368:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6380:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6391:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6376:3:23"},"nodeType":"YulFunctionCall","src":"6376:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6368:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6410:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6425:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6441:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6446:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6437:3:23"},"nodeType":"YulFunctionCall","src":"6437:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"6450:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6433:3:23"},"nodeType":"YulFunctionCall","src":"6433:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6421:3:23"},"nodeType":"YulFunctionCall","src":"6421:32:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6403:6:23"},"nodeType":"YulFunctionCall","src":"6403:51:23"},"nodeType":"YulExpressionStatement","src":"6403:51:23"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6327:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6338:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6349:4:23","type":""}],"src":"6257:203:23"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_AssetInfo_$1830_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_AssetInfo_$1830_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            mstore(pos, and(mload(_3), sub(shl(160, 1), 1)))\n            mstore(add(pos, _1), mload(add(_3, _1)))\n            mstore(add(pos, _2), mload(add(_3, _2)))\n            let _4 := 0x60\n            mstore(add(pos, _4), mload(add(_3, _4)))\n            pos := add(pos, 0x80)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_feab262476110b6da19dad5f74ffa5fc85a39886ca1e6c4c3619a320fb4c8b10__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Unsupported fee token\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_4b0df79b6cb2496d5d4d34caf2e75280779b90d3c442f3e9e91afd6e516af648__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"No price data available\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_2ca421925c4941a3397518dad13c20d3418010081598deda6cc2f02a05282c33__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Stale price data\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":23,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100785760003560e01c806320529bb11461007d5780633931f45d1461009857806341b5774a146100ab5780635de11890146100b357806371a97305146100bb5780637262f557146100d0578063ce25cb4d146100e3578063f7406fc3146100f6575b600080fd5b610085610109565b6040519081526020015b60405180910390f35b6100856100a6366004610a6c565b610205565b610085610324565b61008561039f565b6100c361046c565b60405161008f9190610a96565b6100856100de366004610a6c565b610660565b6100856100f1366004610b03565b610703565b610085610104366004610a6c565b61078a565b6000806101146107d7565b905060008160080180548060200260200160405190810160405280929190818152602001828054801561017057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610152575b5050505050905060005b81518110156101ff57600082828151811061019757610197610b25565b6020908102919091018101516001600160a01b03811660009081526026870190925260408220909250906101ca826107fb565b905060006101db878584600061096a565b5090506101e88189610b51565b975050505050806101f890610b64565b905061017a565b50505090565b6000806102106107d7565b60038101549091506001600160a01b0390811690851603610234578291505061031e565b60038101546001600160a01b03166000908152602682016020526040812061025b906107fb565b6001600160a01b0386166000908152602684016020526040812091925090610282906107fb565b905060008161029d68327cb2734119d3b7a9601e1b85610b7d565b6102a79190610b94565b9050600068327cb2734119d3b7a9601e1b6102c28884610b7d565b6102cc9190610b94565b6001600160a01b0389166000908152602587016020526040902054909150670de0b6b3a7640000906103029060ff16600a610c9a565b61030c9083610b7d565b6103169190610b94565b955050505050505b92915050565b60008061032f6107d7565b9050600064e8d4a5100082600501546103489190610b94565b905060008161ffff1683600901600101546103639190610b7d565b9050670de0b6b3a764000081846004015461037e9190610b7d565b6103889190610b94565b83600401546103979190610b51565b935050505090565b6000806103aa6107d7565b905060008160010160009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610403573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104279190610ca9565b90506000610433610109565b9050811580610440575080155b1561044f576000935050505090565b8161046282670de0b6b3a7640000610b7d565b6103979190610b94565b606060006104786107d7565b600881015490915067ffffffffffffffff81111561049857610498610cc2565b6040519080825280602002602001820160405280156104fd57816020015b6104ea604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b8152602001906001900390816104b65790505b5091506000808260080180548060200260200160405190810160405280929190818152602001828054801561055b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161053d575b5050505050905060005b815181101561065957600082828151811061058257610582610b25565b6020908102919091018101516001600160a01b03811660009081526026880190925260408220909250906105b5826107fb565b90506000806105c7898685600061096a565b915091506040518060800160405280866001600160a01b0316815260200182815260200183815260200168327cb2734119d3b7a9601e1b620f42408661060d9190610b7d565b6106179190610b94565b8152508a898151811061062c5761062c610b25565b60200260200101819052508761064190610b64565b975050505050508061065290610b64565b9050610565565b5050505090565b60008061066b6107d7565b9050600061067761039f565b9050620f424061069368327cb2734119d3b7a9601e1b83610b7d565b61069d9190610b94565b905060006106aa86610703565b6001600160a01b038716600090815260258501602052604081205491925060ff90911690826106da83600a610c9a565b6106e49086610b7d565b6106ee9190610b94565b9050670de0b6b3a764000061030c8289610b7d565b60008061070e6107d7565b6001600160a01b0380851660009081526026830160205260409020805492935091166107795760405162461bcd60e51b81526020600482015260156024820152742ab739bab83837b93a32b2103332b2903a37b5b2b760591b60448201526064015b60405180910390fd5b610782816107fb565b949350505050565b6000806107956107d7565b6001600160a01b038516600090815260268201602052604081209192506107bb826107fb565b905060006107cb8488848961096a565b50979650505050505050565b7fbfa76ec2967ed7f8d3d40cd552f1451ab03573b596bfce931a6a016f7733078c90565b60008060008360000160009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610855573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108799190610cf2565b50935050925050600082136108ca5760405162461bcd60e51b81526020600482015260176024820152764e6f207072696365206461746120617661696c61626c6560481b6044820152606401610770565b60006102586108dc6201518042610d42565b6108e69190610d42565b905080821161092a5760405162461bcd60e51b815260206004820152601060248201526f5374616c65207072696365206461746160801b6044820152606401610770565b845461094190600160a01b900460ff16600a610c9a565b61095768327cb2734119d3b7a9601e1b85610b7d565b6109619190610b94565b95945050505050565b6000818082036109df576040516370a0823160e01b81523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa1580156109b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109dc9190610ca9565b90505b620f42406109ed8583610b7d565b6109f79190610b7d565b6001600160a01b038616600090815260258801602052604090205490925068327cb2734119d3b7a9601e1b90610a319060ff16600a610c9a565b610a3b9190610b7d565b610a459083610b94565b915094509492505050565b80356001600160a01b0381168114610a6757600080fd5b919050565b60008060408385031215610a7f57600080fd5b610a8883610a50565b946020939093013593505050565b602080825282518282018190526000919060409081850190868401855b82811015610af657815180516001600160a01b03168552868101518786015285810151868601526060908101519085015260809093019290850190600101610ab3565b5091979650505050505050565b600060208284031215610b1557600080fd5b610b1e82610a50565b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561031e5761031e610b3b565b600060018201610b7657610b76610b3b565b5060010190565b808202811582820484141761031e5761031e610b3b565b600082610bb157634e487b7160e01b600052601260045260246000fd5b500490565b600181815b80851115610bf1578160001904821115610bd757610bd7610b3b565b80851615610be457918102915b93841c9390800290610bbb565b509250929050565b600082610c085750600161031e565b81610c155750600061031e565b8160018114610c2b5760028114610c3557610c51565b600191505061031e565b60ff841115610c4657610c46610b3b565b50506001821b61031e565b5060208310610133831016604e8410600b8410161715610c74575081810a61031e565b610c7e8383610bb6565b8060001904821115610c9257610c92610b3b565b029392505050565b6000610b1e60ff841683610bf9565b600060208284031215610cbb57600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b805169ffffffffffffffffffff81168114610a6757600080fd5b600080600080600060a08688031215610d0a57600080fd5b610d1386610cd8565b9450602086015193506040860151925060608601519150610d3660808701610cd8565b90509295509295909350565b8181038181111561031e5761031e610b3b56fea2646970667358221220b6e8af7dca88c31bee16aa86f6e8ea9a08e7780b8f927cdb1806b0c838136d8764736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x78 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x20529BB1 EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0x3931F45D EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x41B5774A EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x5DE11890 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x71A97305 EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0x7262F557 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0xCE25CB4D EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0xF7406FC3 EQ PUSH2 0xF6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x85 PUSH2 0x109 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x205 JUMP JUMPDEST PUSH2 0x85 PUSH2 0x324 JUMP JUMPDEST PUSH2 0x85 PUSH2 0x39F JUMP JUMPDEST PUSH2 0xC3 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP2 SWAP1 PUSH2 0xA96 JUMP JUMPDEST PUSH2 0x85 PUSH2 0xDE CALLDATASIZE PUSH1 0x4 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x660 JUMP JUMPDEST PUSH2 0x85 PUSH2 0xF1 CALLDATASIZE PUSH1 0x4 PUSH2 0xB03 JUMP JUMPDEST PUSH2 0x703 JUMP JUMPDEST PUSH2 0x85 PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x78A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x114 PUSH2 0x7D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x8 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x170 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x152 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1FF JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x197 JUMPI PUSH2 0x197 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x26 DUP8 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 SWAP3 POP SWAP1 PUSH2 0x1CA DUP3 PUSH2 0x7FB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1DB DUP8 DUP6 DUP5 PUSH1 0x0 PUSH2 0x96A JUMP JUMPDEST POP SWAP1 POP PUSH2 0x1E8 DUP2 DUP10 PUSH2 0xB51 JUMP JUMPDEST SWAP8 POP POP POP POP POP DUP1 PUSH2 0x1F8 SWAP1 PUSH2 0xB64 JUMP JUMPDEST SWAP1 POP PUSH2 0x17A JUMP JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x210 PUSH2 0x7D7 JUMP JUMPDEST PUSH1 0x3 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP6 AND SUB PUSH2 0x234 JUMPI DUP3 SWAP2 POP POP PUSH2 0x31E JUMP JUMPDEST PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x26 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x25B SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x26 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP3 POP SWAP1 PUSH2 0x282 SWAP1 PUSH2 0x7FB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0x29D PUSH9 0x327CB2734119D3B7A9 PUSH1 0x1E SHL DUP6 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0xB94 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH9 0x327CB2734119D3B7A9 PUSH1 0x1E SHL PUSH2 0x2C2 DUP9 DUP5 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0xB94 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x25 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x302 SWAP1 PUSH1 0xFF AND PUSH1 0xA PUSH2 0xC9A JUMP JUMPDEST PUSH2 0x30C SWAP1 DUP4 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0x316 SWAP2 SWAP1 PUSH2 0xB94 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x32F PUSH2 0x7D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH5 0xE8D4A51000 DUP3 PUSH1 0x5 ADD SLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0xB94 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0xFFFF AND DUP4 PUSH1 0x9 ADD PUSH1 0x1 ADD SLOAD PUSH2 0x363 SWAP2 SWAP1 PUSH2 0xB7D JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 DUP5 PUSH1 0x4 ADD SLOAD PUSH2 0x37E SWAP2 SWAP1 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0x388 SWAP2 SWAP1 PUSH2 0xB94 JUMP JUMPDEST DUP4 PUSH1 0x4 ADD SLOAD PUSH2 0x397 SWAP2 SWAP1 PUSH2 0xB51 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3AA PUSH2 0x7D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x403 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x427 SWAP2 SWAP1 PUSH2 0xCA9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x433 PUSH2 0x109 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 PUSH2 0x440 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x44F JUMPI PUSH1 0x0 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH2 0x462 DUP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0x397 SWAP2 SWAP1 PUSH2 0xB94 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x478 PUSH2 0x7D7 JUMP JUMPDEST PUSH1 0x8 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x498 JUMPI PUSH2 0x498 PUSH2 0xCC2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4FD JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x4EA PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x4B6 JUMPI SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 DUP1 DUP3 PUSH1 0x8 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x55B JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x53D JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x659 JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x582 JUMPI PUSH2 0x582 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x26 DUP9 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 SWAP3 POP SWAP1 PUSH2 0x5B5 DUP3 PUSH2 0x7FB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x5C7 DUP10 DUP7 DUP6 PUSH1 0x0 PUSH2 0x96A JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x327CB2734119D3B7A9 PUSH1 0x1E SHL PUSH3 0xF4240 DUP7 PUSH2 0x60D SWAP2 SWAP1 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0x617 SWAP2 SWAP1 PUSH2 0xB94 JUMP JUMPDEST DUP2 MSTORE POP DUP11 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x62C JUMPI PUSH2 0x62C PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP8 PUSH2 0x641 SWAP1 PUSH2 0xB64 JUMP JUMPDEST SWAP8 POP POP POP POP POP POP DUP1 PUSH2 0x652 SWAP1 PUSH2 0xB64 JUMP JUMPDEST SWAP1 POP PUSH2 0x565 JUMP JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x66B PUSH2 0x7D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x677 PUSH2 0x39F JUMP JUMPDEST SWAP1 POP PUSH3 0xF4240 PUSH2 0x693 PUSH9 0x327CB2734119D3B7A9 PUSH1 0x1E SHL DUP4 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0x69D SWAP2 SWAP1 PUSH2 0xB94 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6AA DUP7 PUSH2 0x703 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x25 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP3 PUSH2 0x6DA DUP4 PUSH1 0xA PUSH2 0xC9A JUMP JUMPDEST PUSH2 0x6E4 SWAP1 DUP7 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0x6EE SWAP2 SWAP1 PUSH2 0xB94 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x30C DUP3 DUP10 PUSH2 0xB7D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x70E PUSH2 0x7D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x26 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP SWAP2 AND PUSH2 0x779 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x2AB739BAB83837B93A32B2103332B2903A37B5B2B7 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x782 DUP2 PUSH2 0x7FB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x795 PUSH2 0x7D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x26 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP3 POP PUSH2 0x7BB DUP3 PUSH2 0x7FB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7CB DUP5 DUP9 DUP5 DUP10 PUSH2 0x96A JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0xBFA76EC2967ED7F8D3D40CD552F1451AB03573B596BFCE931A6A016F7733078C SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x855 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x879 SWAP2 SWAP1 PUSH2 0xCF2 JUMP JUMPDEST POP SWAP4 POP POP SWAP3 POP POP PUSH1 0x0 DUP3 SGT PUSH2 0x8CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x4E6F207072696365206461746120617661696C61626C65 PUSH1 0x48 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x770 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x258 PUSH2 0x8DC PUSH3 0x15180 TIMESTAMP PUSH2 0xD42 JUMP JUMPDEST PUSH2 0x8E6 SWAP2 SWAP1 PUSH2 0xD42 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT PUSH2 0x92A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x5374616C652070726963652064617461 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x770 JUMP JUMPDEST DUP5 SLOAD PUSH2 0x941 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0xA PUSH2 0xC9A JUMP JUMPDEST PUSH2 0x957 PUSH9 0x327CB2734119D3B7A9 PUSH1 0x1E SHL DUP6 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0x961 SWAP2 SWAP1 PUSH2 0xB94 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 DUP3 SUB PUSH2 0x9DF JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9DC SWAP2 SWAP1 PUSH2 0xCA9 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH3 0xF4240 PUSH2 0x9ED DUP6 DUP4 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0x9F7 SWAP2 SWAP1 PUSH2 0xB7D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x25 DUP9 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 POP PUSH9 0x327CB2734119D3B7A9 PUSH1 0x1E SHL SWAP1 PUSH2 0xA31 SWAP1 PUSH1 0xFF AND PUSH1 0xA PUSH2 0xC9A JUMP JUMPDEST PUSH2 0xA3B SWAP2 SWAP1 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0xA45 SWAP1 DUP4 PUSH2 0xB94 JUMP JUMPDEST SWAP2 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA88 DUP4 PUSH2 0xA50 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xAF6 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 DUP2 ADD MLOAD DUP8 DUP7 ADD MSTORE DUP6 DUP2 ADD MLOAD DUP7 DUP7 ADD MSTORE PUSH1 0x60 SWAP1 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xAB3 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB1E DUP3 PUSH2 0xA50 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x31E JUMPI PUSH2 0x31E PUSH2 0xB3B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xB76 JUMPI PUSH2 0xB76 PUSH2 0xB3B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x31E JUMPI PUSH2 0x31E PUSH2 0xB3B JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xBB1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0xBF1 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xBD7 JUMPI PUSH2 0xBD7 PUSH2 0xB3B JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0xBE4 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0xBBB JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xC08 JUMPI POP PUSH1 0x1 PUSH2 0x31E JUMP JUMPDEST DUP2 PUSH2 0xC15 JUMPI POP PUSH1 0x0 PUSH2 0x31E JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xC2B JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xC35 JUMPI PUSH2 0xC51 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x31E JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xC46 JUMPI PUSH2 0xC46 PUSH2 0xB3B JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x31E JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xC74 JUMPI POP DUP2 DUP2 EXP PUSH2 0x31E JUMP JUMPDEST PUSH2 0xC7E DUP4 DUP4 PUSH2 0xBB6 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xC92 JUMPI PUSH2 0xC92 PUSH2 0xB3B JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB1E PUSH1 0xFF DUP5 AND DUP4 PUSH2 0xBF9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xA67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD13 DUP7 PUSH2 0xCD8 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0xD36 PUSH1 0x80 DUP8 ADD PUSH2 0xCD8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x31E JUMPI PUSH2 0x31E PUSH2 0xB3B JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 0xE8 0xAF PUSH30 0xCA88C31BEE16AA86F6E8EA9A08E7780B8F927CDB1806B0C838136D876473 PUSH16 0x6C634300081100330000000000000000 ","sourceMap":"170:7229:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2610:730;;;:::i;:::-;;;160:25:23;;;148:2;133:18;2610:730:19;;;;;;;;226:656;;;;;;:::i;:::-;;:::i;5357:772::-;;;:::i;3346:696::-;;;:::i;4048:1303::-;;;:::i;:::-;;;;;;;:::i;888:970::-;;;;;;:::i;:::-;;:::i;1864:321::-;;;;;;:::i;:::-;;:::i;2191:413::-;;;;;;:::i;:::-;;:::i;2610:730::-;2648:8;2667:33;2703:19;:17;:19::i;:::-;2667:55;;2847:25;2875:2;:12;;2847:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2847:40:19;;;;;;;;;;;;;;;;;;;;;;;2901:6;2897:437;2912:9;:16;2910:1;:18;2897:437;;;2948:9;2967;2977:1;2967:12;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3030:32:19;;2994:33;3030:32;;;:19;;;:32;;;;;;2967:12;;-1:-1:-1;3030:32:19;3190:13;3030:32;3190:9;:13::i;:::-;3177:26;;3260:9;3274:24;3281:2;3285;3289:5;3296:1;3274:6;:24::i;:::-;-1:-1:-1;3259:39:19;-1:-1:-1;3312:11:19;3259:39;3312:11;;:::i;:::-;;;2934:400;;;;2929:3;;;;:::i;:::-;;;2897:437;;;;2657:683;;2610:730;:::o;226:656::-;309:4;324:33;360:19;:17;:19::i;:::-;405:21;;;;324:55;;-1:-1:-1;;;;;;405:21:19;;;393:33;;;;390:115;;487:7;480:14;;;;;390:115;554:21;;;;-1:-1:-1;;;;;554:21:19;514:7;534:42;;;:19;;;:42;;;;;524:53;;:9;:53::i;:::-;-1:-1:-1;;;;;608:29:19;;587:8;608:29;;;:19;;;:29;;;;;514:63;;-1:-1:-1;587:8:19;598:40;;:9;:40::i;:::-;587:51;-1:-1:-1;648:14:19;587:51;666:31;-1:-1:-1;;;666:2:19;:31;:::i;:::-;665:37;;;;:::i;:::-;648:54;-1:-1:-1;712:13:19;-1:-1:-1;;;729:19:19;741:7;648:54;729:19;:::i;:::-;728:52;;;;:::i;:::-;-1:-1:-1;;;;;814:26:19;;;;;;:16;;;:26;;;;;;712:68;;-1:-1:-1;845:4:19;;810:30;;814:26;;810:2;:30;:::i;:::-;798:43;;:8;:43;:::i;:::-;797:52;;;;:::i;:::-;790:59;;;;;;;226:656;;;;;:::o;5357:772::-;5408:9;5541:33;5577:19;:17;:19::i;:::-;5541:55;;5607:27;634:4:7;5644:2:19;:16;;;:41;;;;:::i;:::-;5607:79;;5862:17;5908:20;5882:46;;:2;:18;;:23;;;:46;;;;:::i;:::-;5862:66;;6117:4;6103:12;6080:2;:20;;;:35;;;;:::i;:::-;6079:42;;;;:::i;:::-;6055:2;:20;;;:67;;;;:::i;:::-;6048:74;;5418:711;;;5357:772;:::o;3346:696::-;3391:8;3492:33;3528:19;:17;:19::i;:::-;3492:55;;3604:11;3618:2;:7;;;;;;;;;;-1:-1:-1;;;;;3618:7:19;-1:-1:-1;;;;;3618:19:19;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3604:35;;3709:8;3720;:6;:8::i;:::-;3709:19;-1:-1:-1;3781:11:19;;;:23;;-1:-1:-1;3796:8:19;;3781:23;3778:61;;;3827:1;3820:8;;;;;3346:696;:::o;3778:61::-;3949:6;3937:8;:3;3941:4;3937:8;:::i;:::-;3936:19;;;;:::i;4048:1303::-;4087:44;4280:33;4316:19;:17;:19::i;:::-;4454:12;;;:19;4280:55;;-1:-1:-1;4419:55:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4419:55:19;;;;;;;;;;;;;;;;;4410:64;;4525:8;4631:25;4659:2;:12;;4631:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4631:40:19;;;;;;;;;;;;;;;;;;;;;;;4685:6;4681:664;4696:9;:16;4694:1;:18;4681:664;;;4732:9;4744;4754:1;4744:12;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;4806:32:19;;4770:33;4806:32;;;:19;;;:32;;;;;;4744:12;;-1:-1:-1;4806:32:19;4922:13;4806:32;4922:9;:13::i;:::-;4909:26;;5006:8;5016;5028:24;5035:2;5039;5043:5;5050:1;5028:6;:24::i;:::-;5005:47;;;;5081:234;;;;;;;;5143:2;-1:-1:-1;;;;;5081:234:19;;;;;5173:3;5081:234;;;;5204:3;5081:234;;;;-1:-1:-1;;;560:3:7;5236:5:19;:32;;;;:::i;:::-;5235:65;;;;:::i;:::-;5081:234;;;5067:6;5074:3;5067:11;;;;;;;;:::i;:::-;;;;;;:248;;;;5329:5;;;;:::i;:::-;;;4718:627;;;;;4713:3;;;;:::i;:::-;;;4681:664;;;;4132:1219;;;4048:1303;:::o;888:970::-;974:4;989:33;1024:19;:17;:19::i;:::-;989:54;;1053:8;1064:15;:13;:15::i;:::-;1053:26;-1:-1:-1;560:3:7;1144:34:19;-1:-1:-1;;;1053:26:19;1144:34;:::i;:::-;1143:65;;;;:::i;:::-;1137:71;;1355:10;1368:29;1385:11;1368:16;:29::i;:::-;-1:-1:-1;;;;;1423:29:19;;1408:12;1423:29;;;:16;;;:29;;;;;;1355:42;;-1:-1:-1;1423:29:19;;;;;1355:42;1622:10;1423:29;1622:2;:10;:::i;:::-;1617:16;;:3;:16;:::i;:::-;1616:24;;;;:::i;:::-;1597:43;-1:-1:-1;1847:4:19;1821:24;1597:43;1821:10;:24;:::i;1864:321::-;1929:4;1944:33;1980:19;:17;:19::i;:::-;-1:-1:-1;;;;;2045:29:19;;;2009:33;2045:29;;;:19;;;:29;;;;;2100:7;;1944:55;;-1:-1:-1;2045:29:19;2100:7;2084:64;;;;-1:-1:-1;;;2084:64:19;;4617:2:23;2084:64:19;;;4599:21:23;4656:2;4636:18;;;4629:30;-1:-1:-1;;;4675:18:23;;;4668:51;4736:18;;2084:64:19;;;;;;;;;2165:13;2175:2;2165:9;:13::i;:::-;2158:20;1864:321;-1:-1:-1;;;;1864:321:19:o;2191:413::-;2268:14;2294:33;2330:19;:17;:19::i;:::-;-1:-1:-1;;;;;2395:29:19;;2359:33;2395:29;;;:19;;;:29;;;;;2294:55;;-1:-1:-1;2497:13:19;2395:29;2497:9;:13::i;:::-;2486:24;;2522:6;2533:41;2540:2;2551:8;2562:3;2567:6;2533;:41::i;:::-;-1:-1:-1;2521:53:19;2191:413;-1:-1:-1;;;;;;;2191:413:19:o;4486:118:18:-;4579:17;;4486:118::o;6136:614:19:-;6213:4;6274:13;6315:17;6346:2;:7;;;;;;;;;;-1:-1:-1;;;;;6346:7:19;-1:-1:-1;;;;;6346:23:19;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6256:115;;;;;;;6431:1;6422:6;:10;6414:46;;;;-1:-1:-1;;;6414:46:19;;5629:2:23;6414:46:19;;;5611:21:23;5668:2;5648:18;;;5641:30;-1:-1:-1;;;5687:18:23;;;5680:53;5750:18;;6414:46:19;5427:347:23;6414:46:19;6549:10;6599:3;6562:34;399:5:7;6562:15:19;:34;:::i;:::-;:40;;;;:::i;:::-;6549:53;;6632:5;6620:9;:17;6612:46;;;;-1:-1:-1;;;6612:46:19;;6114:2:23;6612:46:19;;;6096:21:23;6153:2;6133:18;;;6126:30;-1:-1:-1;;;6172:18:23;;;6165:46;6228:18;;6612:46:19;5912:340:23;6612:46:19;6731:11;;6727:15;;-1:-1:-1;;;6731:11:19;;;;6727:2;:15;:::i;:::-;6676:46;-1:-1:-1;;;6684:6:19;6676:46;:::i;:::-;6675:68;;;;:::i;:::-;6668:75;6136:614;-1:-1:-1;;;;;6136:614:19:o;6818:579::-;6927:8;6963:3;6979:8;;;6976:74;;7009:30;;-1:-1:-1;;;7009:30:19;;7033:4;7009:30;;;6403:51:23;-1:-1:-1;;;;;7009:15:19;;;;;6376:18:23;;7009:30:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7003:36;;6976:74;560:3:7;7191:11:19;7197:5;7191:3;:11;:::i;:::-;7190:40;;;;:::i;:::-;-1:-1:-1;;;;;7319:32:19;;;;;;:16;;;:32;;;;;;7184:46;;-1:-1:-1;;;;746:4:7;7315:36:19;;7319:32;;7315:2;:36;:::i;:::-;:65;;;;:::i;:::-;7307:74;;;;:::i;:::-;;;6818:579;;;;;;;:::o;196:173:23:-;264:20;;-1:-1:-1;;;;;313:31:23;;303:42;;293:70;;359:1;356;349:12;293:70;196:173;;;:::o;374:254::-;442:6;450;503:2;491:9;482:7;478:23;474:32;471:52;;;519:1;516;509:12;471:52;542:29;561:9;542:29;:::i;:::-;532:39;618:2;603:18;;;;590:32;;-1:-1:-1;;;374:254:23:o;633:953::-;858:2;910:21;;;980:13;;883:18;;;1002:22;;;829:4;;858:2;1043;;1061:18;;;;1102:15;;;829:4;1145:415;1159:6;1156:1;1153:13;1145:415;;;1218:13;;1260:9;;-1:-1:-1;;;;;1256:35:23;1244:48;;1332:11;;;1326:18;1312:12;;;1305:40;1385:11;;;1379:18;1365:12;;;1358:40;1421:4;1465:11;;;1459:18;1445:12;;;1438:40;1507:4;1498:14;;;;1535:15;;;;1288:1;1174:9;1145:415;;;-1:-1:-1;1577:3:23;;633:953;-1:-1:-1;;;;;;;633:953:23:o;1591:186::-;1650:6;1703:2;1691:9;1682:7;1678:23;1674:32;1671:52;;;1719:1;1716;1709:12;1671:52;1742:29;1761:9;1742:29;:::i;:::-;1732:39;1591:186;-1:-1:-1;;;1591:186:23:o;1782:127::-;1843:10;1838:3;1834:20;1831:1;1824:31;1874:4;1871:1;1864:15;1898:4;1895:1;1888:15;1914:127;1975:10;1970:3;1966:20;1963:1;1956:31;2006:4;2003:1;1996:15;2030:4;2027:1;2020:15;2046:125;2111:9;;;2132:10;;;2129:36;;;2145:18;;:::i;2176:135::-;2215:3;2236:17;;;2233:43;;2256:18;;:::i;:::-;-1:-1:-1;2303:1:23;2292:13;;2176:135::o;2316:168::-;2389:9;;;2420;;2437:15;;;2431:22;;2417:37;2407:71;;2458:18;;:::i;2489:217::-;2529:1;2555;2545:132;;2599:10;2594:3;2590:20;2587:1;2580:31;2634:4;2631:1;2624:15;2662:4;2659:1;2652:15;2545:132;-1:-1:-1;2691:9:23;;2489:217::o;2711:422::-;2800:1;2843:5;2800:1;2857:270;2878:7;2868:8;2865:21;2857:270;;;2937:4;2933:1;2929:6;2925:17;2919:4;2916:27;2913:53;;;2946:18;;:::i;:::-;2996:7;2986:8;2982:22;2979:55;;;3016:16;;;;2979:55;3095:22;;;;3055:15;;;;2857:270;;;2861:3;2711:422;;;;;:::o;3138:806::-;3187:5;3217:8;3207:80;;-1:-1:-1;3258:1:23;3272:5;;3207:80;3306:4;3296:76;;-1:-1:-1;3343:1:23;3357:5;;3296:76;3388:4;3406:1;3401:59;;;;3474:1;3469:130;;;;3381:218;;3401:59;3431:1;3422:10;;3445:5;;;3469:130;3506:3;3496:8;3493:17;3490:43;;;3513:18;;:::i;:::-;-1:-1:-1;;3569:1:23;3555:16;;3584:5;;3381:218;;3683:2;3673:8;3670:16;3664:3;3658:4;3655:13;3651:36;3645:2;3635:8;3632:16;3627:2;3621:4;3618:12;3614:35;3611:77;3608:159;;;-1:-1:-1;3720:19:23;;;3752:5;;3608:159;3799:34;3824:8;3818:4;3799:34;:::i;:::-;3869:6;3865:1;3861:6;3857:19;3848:7;3845:32;3842:58;;;3880:18;;:::i;:::-;3918:20;;3138:806;-1:-1:-1;;;3138:806:23:o;3949:140::-;4007:5;4036:47;4077:4;4067:8;4063:19;4057:4;4036:47;:::i;4094:184::-;4164:6;4217:2;4205:9;4196:7;4192:23;4188:32;4185:52;;;4233:1;4230;4223:12;4185:52;-1:-1:-1;4256:16:23;;4094:184;-1:-1:-1;4094:184:23:o;4283:127::-;4344:10;4339:3;4335:20;4332:1;4325:31;4375:4;4372:1;4365:15;4399:4;4396:1;4389:15;4765:179;4843:13;;4896:22;4885:34;;4875:45;;4865:73;;4934:1;4931;4924:12;4949:473;5052:6;5060;5068;5076;5084;5137:3;5125:9;5116:7;5112:23;5108:33;5105:53;;;5154:1;5151;5144:12;5105:53;5177:39;5206:9;5177:39;:::i;:::-;5167:49;;5256:2;5245:9;5241:18;5235:25;5225:35;;5300:2;5289:9;5285:18;5279:25;5269:35;;5344:2;5333:9;5329:18;5323:25;5313:35;;5367:49;5411:3;5400:9;5396:19;5367:49;:::i;:::-;5357:59;;4949:473;;;;;;;;:::o;5779:128::-;5846:9;;;5867:11;;;5864:37;;;5881:18;;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"693400","executionCost":"728","totalCost":"694128"},"external":{"assets()":"infinite","aumUSD()":"infinite","computeVolumeUSD(address,uint256)":"infinite","convertGasToFeeToken(address,uint256)":"infinite","currentMintRateUSD()":"infinite","currentNavUSD()":"infinite","estimateRedemption(address,uint256)":"infinite","feeTokenPriceUSD(address)":"infinite"},"internal":{"_getPrice(struct VaultStorage.PriceFeed storage pointer)":"infinite","_toUSD(struct VaultStorage.VaultData storage pointer,contract IERC20,uint256,uint256)":"infinite"}},"methodIdentifiers":{"assets()":"71a97305","aumUSD()":"20529bb1","computeVolumeUSD(address,uint256)":"f7406fc3","convertGasToFeeToken(address,uint256)":"3931f45d","currentMintRateUSD()":"41b5774a","currentNavUSD()":"5de11890","estimateRedemption(address,uint256)":"7262f557","feeTokenPriceUSD(address)":"ce25cb4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"assets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"usdValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"usdPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IComputationalView.AssetInfo[]\",\"name\":\"tokens\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aumUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"usd\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"computeVolumeUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"volumeUSD\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"gasCost\",\"type\":\"uint256\"}],\"name\":\"convertGasToFeeToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMintRateUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentNavUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nav\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dxblAmount\",\"type\":\"uint256\"}],\"name\":\"estimateRedemption\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"}],\"name\":\"feeTokenPriceUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vault/baseContracts/ComputationalView.sol\":\"ComputationalView\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"contracts/common/LibConstants.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\n/**\\n * Constant values used elsewhere\\n */\\nlibrary LibConstants {\\n\\n    //gas that was used just to load this contract, etc.\\n    uint constant PRE_OP_GAS = 40_000;\\n    \\n    //final computation needed to compute and transfer gas fees\\n    uint constant POST_OP_GAS = 80_000;\\n    \\n\\n    uint16 constant HOUR = 3600;\\n    uint24 constant DAY = 86400;\\n\\n    //storage and calldata requirements significantly higher when using more than \\n    //6decs for USD price precision\\n    uint constant USD_PRECISION = 1e6;\\n\\n    //1_000_000 as a 6-decimal number\\n    uint constant MM_VOLUME = 1e12;\\n\\n    //when doing asset-related math, increase precision accordingly.\\n    uint constant PRICE_PRECISION = 1e30;\\n\\n    //========================================================================\\n    // Assignable roles for role-managed contracts\\n    //========================================================================\\n\\n    //allowed to add relays and other role managers\\n    string public constant ROLE_MGR = \\\"ROLE_MANAGER\\\";\\n\\n    //allowed to submit execution requests\\n    string public constant RELAY = \\\"RELAY\\\";\\n\\n}\",\"keccak256\":\"0xeb7a3fc112dc919db6dfb1f43c52bd068f14155d3fd7717871d9b1612e4a77a7\",\"license\":\"Unlicense\"},\"contracts/token/IDXBL.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\ninterface IDXBL is IERC20, IERC20Metadata {\\n    struct FeeRequest {\\n        bool referred;\\n        address trader;\\n        uint amt;\\n        uint dxblBalance;\\n        uint16 stdBpsRate;\\n        uint16 minBpsRate;\\n    }\\n\\n    function minter() external view returns (address);\\n    function discountPerTokenBps() external view returns(uint32);\\n\\n    function mint(address acct, uint amt) external;\\n    function burn(address holder, uint amt) external;\\n    function setDiscountRate(uint32 discount) external;\\n    function setNewMinter(address minter) external;\\n    function computeDiscountedFee(FeeRequest calldata request) external view returns(uint);\\n}\",\"keccak256\":\"0x5c7e94839ff1ff8d19ed800cbb7a9af9ea24d178ec1cca6c84c0b914636494ef\",\"license\":\"Unlicense\"},\"contracts/vault/IComputationalView.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\ninterface IComputationalView {\\n\\n    struct AssetInfo {\\n        address token;\\n        uint balance;\\n        uint usdValue;\\n        uint usdPrice;\\n    }\\n\\n    function convertGasToFeeToken(address feeToken, uint gasCost) external view returns (uint);\\n    function estimateRedemption(address feeToken, uint dxblAmount) external view returns(uint);\\n    function feeTokenPriceUSD(address feeToken) external view returns (uint);\\n    function aumUSD() external view returns(uint);\\n    function currentNavUSD() external view returns(uint);\\n    function assets() external view returns (AssetInfo[] memory);\\n    function currentMintRateUSD() external view returns (uint);\\n    function computeVolumeUSD(address feeToken, uint amount) external view returns(uint);\\n\\n}\",\"keccak256\":\"0xc0e46b88fd0f1381ada98e1e202068fefb7dca14d74e273e1d5bd264966c9a1d\",\"license\":\"Unlicense\"},\"contracts/vault/IPriceFeed.sol\":{\"content\":\"\\n//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\n/**\\n * Interface for Chainlink oracle feeds\\n */\\ninterface IPriceFeed {\\n    function latestRoundData() external view\\n    returns (\\n        uint80 roundId,\\n        int256 answer,\\n        uint256 startedAt,\\n        uint256 updatedAt,\\n        uint80 answeredInRound\\n    );\\n    function decimals() external view returns (uint8);\\n}\",\"keccak256\":\"0x151d6516db0e8639f2c0aae6a0d3dd7fc9befc2d179ac8b08ea8830253cbb544\",\"license\":\"Unlicense\"},\"contracts/vault/VaultStorage.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\nimport \\\"../token/IDXBL.sol\\\";\\nimport \\\"./IPriceFeed.sol\\\";\\n\\nlibrary VaultStorage {\\n\\n    bytes32 constant VAULT_STORAGE_KEY = 0xbfa76ec2967ed7f8d3d40cd552f1451ab03573b596bfce931a6a016f7733078c;\\n\\n    /****************************************************************************\\n     * Initialization Config Settings\\n     *****************************************************************************/\\n    //mint rate bucket\\n    struct MintRateRangeConfig {\\n        uint16 minMMVolume;\\n        uint16 maxMMVolume;\\n        uint rate;\\n    }\\n\\n    //fee token and its associated chainlink feed\\n    struct FeeTokenConfig {\\n        address[] feeTokens;\\n        address[] priceFeeds;\\n    }\\n\\n    //initialize config to intialize storage\\n    struct VaultConfig {\\n\\n        //the address of the wrapped native token\\n        address wrappedNativeToken;\\n\\n        //address of the multisig that will administer this vault\\n        address adminMultiSig;\\n\\n        //starting volume needed to mint a single DXBL token. This increases\\n        //as we get closer to reaching the daily goal\\n        uint baseMintThreshold;\\n\\n        //initial rate ranges to apply\\n        MintRateRangeConfig[] rateRanges;\\n\\n        //set of fee token/price feed pairs to initialize with\\n        FeeTokenConfig feeTokenConfig;\\n    }\\n\\n    /****************************************************************************\\n     * Stored Settings\\n     *****************************************************************************/\\n    //stored mint rate range\\n    struct MintRateRange {\\n        uint16 minMMVolume;\\n        uint16 maxMMVolume;\\n        uint rate;\\n        uint index;\\n    }\\n\\n    //price feed for a fee token\\n    struct PriceFeed {\\n        IPriceFeed feed;\\n        uint8 decimals;\\n    }\\n\\n    /*****************************************************************************************\\n     * STORAGE\\n    ******************************************************************************************/\\n    \\n    \\n    struct VaultData {\\n        //whether the vault is paused\\n        bool paused;\\n\\n        //admin multi sig\\n        address adminMultiSig;\\n\\n        //token address\\n        IDXBL dxbl;\\n\\n        //dexible settlement contract that is allowed to call the vault\\n        address dexible;\\n\\n        //wrapped native asset address for gas computation\\n        address wrappedNativeToken;\\n\\n        //time before migration allowed\\n        uint32 timelockSeconds;\\n\\n        //base volume needed to mint a single DXBL token. This increases\\n        //as we get closer to reaching the daily goal\\n        uint baseMintThreshold;\\n\\n        //current daily volume adjusted each hour\\n        uint currentVolume;\\n\\n        //to compute what hourly slots to deduct from 24hr window\\n        uint lastTradeTimestamp;\\n\\n        //can migrate the contract to a new vault after this time\\n        uint migrateAfterTime;\\n\\n        //all known fee tokens. Some may be inactive\\n        IERC20[] feeTokens;\\n\\n        //the current volume range we're operating in for mint rate\\n        MintRateRange currentMintRate;\\n\\n        //The ranges of 24hr volume and their percentage-per-MM increase to \\n        //mint a single token\\n        MintRateRange[] mintRateRanges;\\n\\n        //hourly volume totals to adjust current volume every 24 hr slot\\n        uint[24] hourlyVolume;\\n\\n        //fee token decimals\\n        mapping(address => uint8) tokenDecimals;\\n\\n        //all allowed fee tokens mapped to their price feed address\\n        mapping(address => PriceFeed) allowedFeeTokens;\\n    }\\n\\n    /**\\n     * If a migration occurs from the V1 vault to a new vault, this structure is forwarded\\n     * after all fee token balances are transferred. It is expected that the new vault will have\\n     * its fee token, minting rates, and starting mint rates mapped out as part of its deployment.\\n     * The migration is intended to get the new vault into a state where it knows the last 24hrs\\n     * of volume and can pick up where this vault leaves off but with new settings and capabilities.\\n     */\\n    struct VaultMigrationV1 {\\n        //current daily volume adjusted each hour\\n        uint currentVolume;\\n\\n        //to compute what hourly slots to deduct from 24hr window\\n        uint lastTradeTimestamp;\\n\\n        //hourly volume totals to adjust in new contract\\n        uint[24] hourlyVolume;\\n\\n        //the current volume range we're operating in for mint rate\\n        MintRateRange currentMintRate;\\n    }\\n\\n    function load() internal pure returns (VaultData storage ds) {\\n        assembly { ds.slot := VAULT_STORAGE_KEY }\\n    }\\n}\",\"keccak256\":\"0xe658404b7cd8ed0887d839acedf14011c1478a85e79c28a7d571f87f9e30784b\",\"license\":\"Unlicense\"},\"contracts/vault/baseContracts/ComputationalView.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\nimport \\\"../VaultStorage.sol\\\";\\nimport \\\"../IComputationalView.sol\\\";\\nimport \\\"../../common/LibConstants.sol\\\";\\n\\ncontract ComputationalView is IComputationalView {\\n\\n    function convertGasToFeeToken(address feeToken, uint gasCost) public view returns (uint){\\n        VaultStorage.VaultData storage rs = VaultStorage.load();\\n\\n        if(feeToken == rs.wrappedNativeToken) {\\n            //already in native units\\n            return gasCost;\\n        }\\n        uint np = _getPrice(rs.allowedFeeTokens[rs.wrappedNativeToken]);\\n        uint ftp = _getPrice(rs.allowedFeeTokens[feeToken]);\\n        uint ftpNative = (np*LibConstants.PRICE_PRECISION)/ftp;\\n        uint ftpUnits = (ftpNative * gasCost) / LibConstants.PRICE_PRECISION;\\n        return (ftpUnits * (10**rs.tokenDecimals[feeToken])) / 1e18; //native is always 18decs\\n    }\\n\\n    function estimateRedemption(address rewardToken, uint dxblAmount) public view returns(uint){\\n        VaultStorage.VaultData storage rs =VaultStorage.load();\\n        uint nav = currentNavUSD();\\n         //convert nav to price-precision units\\n        nav = (nav * LibConstants.PRICE_PRECISION) / LibConstants.USD_PRECISION;\\n        \\n        //we need to know the value of each token in rewardToken units\\n        //start by getting the USD price of reward token\\n        uint ftUSD = feeTokenPriceUSD(rewardToken);\\n\\n        uint8 ftDecs = rs.tokenDecimals[rewardToken];\\n\\n        //Divide nav of each token by the price of each reward token expanding \\n        //precision to include the fee-token decimals\\n        uint ftUnitPrice = (nav*(10**ftDecs))/ftUSD;\\n\\n        //compute how much rewardToken to withdraw based on unit price of each DXBL\\n        //in fee-token units. Have to remove the dexible token precision (18)\\n        return (dxblAmount * ftUnitPrice)/1e18;\\n    }\\n\\n    function feeTokenPriceUSD(address feeToken) public view returns (uint){\\n        VaultStorage.VaultData storage rs = VaultStorage.load();\\n        VaultStorage.PriceFeed storage pf = rs.allowedFeeTokens[feeToken];\\n        require(address(pf.feed) != address(0), \\\"Unsupported fee token\\\");\\n        return _getPrice(pf);\\n    }\\n\\n    function computeVolumeUSD(address feeToken, uint amount) public view returns(uint volumeUSD) {\\n        VaultStorage.VaultData storage fs = VaultStorage.load();\\n        VaultStorage.PriceFeed storage pf = fs.allowedFeeTokens[feeToken];\\n\\n        //price is in USD with 30decimal precision\\n        uint ftp = _getPrice(pf);\\n\\n        (uint v,) = _toUSD(fs, IERC20(feeToken), ftp, amount);\\n        volumeUSD = v;\\n    }\\n\\n    function aumUSD() public view returns(uint usd){\\n        VaultStorage.VaultData storage fs = VaultStorage.load();\\n\\n        //for each fee token allowed in the vault\\n        //move to memory so we're not accessing storage in loop\\n        IERC20[] memory feeTokens = fs.feeTokens;\\n        for(uint i=0;i<feeTokens.length;++i) {\\n            IERC20 ft = IERC20(feeTokens[i]);\\n            VaultStorage.PriceFeed storage pf = fs.allowedFeeTokens[address(ft)];\\n            \\n            //make sure fee token still active\\n            //get the price of the asset\\n            uint price = _getPrice(pf);\\n            //use it to compute USD value\\n            (uint _usd,) = _toUSD(fs, ft, price, 0);\\n            usd += _usd;\\n        }\\n    }\\n\\n    function currentNavUSD() public view returns(uint nav){\\n        //console.log(\\\"--------------- START COMPUTE NAV ---------------------\\\");\\n        VaultStorage.VaultData storage rs = VaultStorage.load();\\n\\n        //get the total supply of dxbl tokens\\n        uint supply = rs.dxbl.totalSupply();\\n\\n        //get the total USD under management by this vault\\n        uint aum = aumUSD();\\n\\n        //if either is 0, the nav is 0\\n        if(supply == 0 || aum == 0) {\\n            return 0;\\n        }\\n         \\n        //supply is 18decs while aum and nav are expressed in USD units\\n        nav = (aum*1e18) / supply;\\n      //  console.log(\\\"--------------- END COMPUTE NAV ---------------------\\\");\\n    }\\n\\n    function assets() public view returns (IComputationalView.AssetInfo[] memory tokens){\\n        /**\\n         * RISK: Must limit the fee token count to avoid miner not allowing call due to high\\n         * gas usage\\n         */\\n        VaultStorage.VaultData storage fs = VaultStorage.load();\\n\\n        //create in-memory structure only for active fee tokens\\n        tokens = new IComputationalView.AssetInfo[](fs.feeTokens.length);\\n\\n        //count offset of return tokens\\n        uint cnt = 0;\\n        \\n        //copy fee tokens in memory to we're not accessing storage in loop\\n        IERC20[] memory feeTokens = fs.feeTokens;\\n        for(uint i=0;i<feeTokens.length;++i) {\\n            IERC20 ft = feeTokens[i];\\n            VaultStorage.PriceFeed storage pf = fs.allowedFeeTokens[address(ft)];\\n\\n            //lookup USD price of asset in 30-dec units\\n            uint price = _getPrice(pf);\\n\\n            //convert to total usd-precision USD value\\n            (uint usd, uint bal) = _toUSD(fs, ft, price, 0);\\n\\n            tokens[cnt] = IComputationalView.AssetInfo({\\n                token: address(ft),\\n                balance: bal,\\n                usdValue: usd,\\n                usdPrice: (price*LibConstants.USD_PRECISION) / LibConstants.PRICE_PRECISION\\n            });\\n            ++cnt;\\n        }\\n    }\\n\\n    function currentMintRateUSD() public view returns (uint rate){\\n        /**\\n        * formula for mint rate:\\n        * startingRate+(startingRate*(ratePerMM*MM_vol))\\n        */\\n        VaultStorage.VaultData storage rs = VaultStorage.load();\\n\\n        uint16 normalizedMMInVolume = uint16(rs.currentVolume / LibConstants.MM_VOLUME);\\n\\n        //mint rate is a bucket with min/max volume thresholds and establishes how many \\n        //percentage points per million to apply to the starting mint rate \\n        uint percIncrease = rs.currentMintRate.rate * normalizedMMInVolume;\\n\\n        //mint rate percentage is expressed in 18-dec units so have to divide that out before adding to base\\n        rate = rs.baseMintThreshold + ((rs.baseMintThreshold * percIncrease)/1e18);\\n    }\\n\\n\\n    function _getPrice(VaultStorage.PriceFeed storage pf) internal view returns (uint) {\\n        //get latest price\\n        (   ,\\n            int256 answer,\\n            ,\\n            uint256 updatedAt,\\n        ) = pf.feed.latestRoundData();\\n\\n        //make sure price valid\\n        require(answer > 0, \\\"No price data available\\\");\\n\\n        //10min buffer around 24hr window for chainlink feed to update prices\\n        uint stale = block.timestamp - LibConstants.DAY - 600;\\n        require(updatedAt > stale, \\\"Stale price data\\\");\\n        return (uint256(answer) * LibConstants.PRICE_PRECISION) / (10**pf.decimals);\\n    }\\n\\n    /**\\n     * Convert an assets total balance to USD\\n     */\\n    function _toUSD(VaultStorage.VaultData storage fs, IERC20 token, uint price, uint amt) internal view returns(uint usd, uint bal) {\\n        bal = amt;\\n        if(bal == 0) {\\n            bal = token.balanceOf(address(this));\\n        }\\n        \\n        //compute usd in raw form (fee-token units + price-precision units) but account for\\n        //USD precision\\n        usd = (bal * price)*LibConstants.USD_PRECISION;\\n\\n        //then divide out the fee token and price-precision units\\n        usd /= (10**fs.tokenDecimals[address(token)]*LibConstants.PRICE_PRECISION);\\n        \\n    }\\n}\",\"keccak256\":\"0x666d8a00f6a0b345b2b32a58cf812dbae97f82fb681df3a48a40ed3ddb41094f\",\"license\":\"Unlicense\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/vault/baseContracts/RewardHandler.sol":{"RewardHandler":{"abi":[{"inputs":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"address","name":"feeToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"rewardTrader","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"rewardTrader(address,address,uint256)":"ab1094c0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rewardTrader\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"rewardTrader(address,address,uint256)\":{\"notice\":\"Modification functions\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vault/baseContracts/RewardHandler.sol\":\"RewardHandler\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"contracts/common/LibConstants.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\n/**\\n * Constant values used elsewhere\\n */\\nlibrary LibConstants {\\n\\n    //gas that was used just to load this contract, etc.\\n    uint constant PRE_OP_GAS = 40_000;\\n    \\n    //final computation needed to compute and transfer gas fees\\n    uint constant POST_OP_GAS = 80_000;\\n    \\n\\n    uint16 constant HOUR = 3600;\\n    uint24 constant DAY = 86400;\\n\\n    //storage and calldata requirements significantly higher when using more than \\n    //6decs for USD price precision\\n    uint constant USD_PRECISION = 1e6;\\n\\n    //1_000_000 as a 6-decimal number\\n    uint constant MM_VOLUME = 1e12;\\n\\n    //when doing asset-related math, increase precision accordingly.\\n    uint constant PRICE_PRECISION = 1e30;\\n\\n    //========================================================================\\n    // Assignable roles for role-managed contracts\\n    //========================================================================\\n\\n    //allowed to add relays and other role managers\\n    string public constant ROLE_MGR = \\\"ROLE_MANAGER\\\";\\n\\n    //allowed to submit execution requests\\n    string public constant RELAY = \\\"RELAY\\\";\\n\\n}\",\"keccak256\":\"0xeb7a3fc112dc919db6dfb1f43c52bd068f14155d3fd7717871d9b1612e4a77a7\",\"license\":\"Unlicense\"},\"contracts/token/IDXBL.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\ninterface IDXBL is IERC20, IERC20Metadata {\\n    struct FeeRequest {\\n        bool referred;\\n        address trader;\\n        uint amt;\\n        uint dxblBalance;\\n        uint16 stdBpsRate;\\n        uint16 minBpsRate;\\n    }\\n\\n    function minter() external view returns (address);\\n    function discountPerTokenBps() external view returns(uint32);\\n\\n    function mint(address acct, uint amt) external;\\n    function burn(address holder, uint amt) external;\\n    function setDiscountRate(uint32 discount) external;\\n    function setNewMinter(address minter) external;\\n    function computeDiscountedFee(FeeRequest calldata request) external view returns(uint);\\n}\",\"keccak256\":\"0x5c7e94839ff1ff8d19ed800cbb7a9af9ea24d178ec1cca6c84c0b914636494ef\",\"license\":\"Unlicense\"},\"contracts/vault/IComputationalView.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\ninterface IComputationalView {\\n\\n    struct AssetInfo {\\n        address token;\\n        uint balance;\\n        uint usdValue;\\n        uint usdPrice;\\n    }\\n\\n    function convertGasToFeeToken(address feeToken, uint gasCost) external view returns (uint);\\n    function estimateRedemption(address feeToken, uint dxblAmount) external view returns(uint);\\n    function feeTokenPriceUSD(address feeToken) external view returns (uint);\\n    function aumUSD() external view returns(uint);\\n    function currentNavUSD() external view returns(uint);\\n    function assets() external view returns (AssetInfo[] memory);\\n    function currentMintRateUSD() external view returns (uint);\\n    function computeVolumeUSD(address feeToken, uint amount) external view returns(uint);\\n\\n}\",\"keccak256\":\"0xc0e46b88fd0f1381ada98e1e202068fefb7dca14d74e273e1d5bd264966c9a1d\",\"license\":\"Unlicense\"},\"contracts/vault/IPriceFeed.sol\":{\"content\":\"\\n//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\n/**\\n * Interface for Chainlink oracle feeds\\n */\\ninterface IPriceFeed {\\n    function latestRoundData() external view\\n    returns (\\n        uint80 roundId,\\n        int256 answer,\\n        uint256 startedAt,\\n        uint256 updatedAt,\\n        uint80 answeredInRound\\n    );\\n    function decimals() external view returns (uint8);\\n}\",\"keccak256\":\"0x151d6516db0e8639f2c0aae6a0d3dd7fc9befc2d179ac8b08ea8830253cbb544\",\"license\":\"Unlicense\"},\"contracts/vault/IRewardHandler.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\ninterface IRewardHandler {\\n\\n    /**\\n     * Modification functions\\n     */\\n    function rewardTrader(address trader, address feeToken, uint amount) external;\\n}\",\"keccak256\":\"0x103b1b3c548036a1ba6fefb5bf923eda05a1a66732e05c8f2553b00625c6aabd\",\"license\":\"Unlicense\"},\"contracts/vault/VaultStorage.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\nimport \\\"../token/IDXBL.sol\\\";\\nimport \\\"./IPriceFeed.sol\\\";\\n\\nlibrary VaultStorage {\\n\\n    bytes32 constant VAULT_STORAGE_KEY = 0xbfa76ec2967ed7f8d3d40cd552f1451ab03573b596bfce931a6a016f7733078c;\\n\\n    /****************************************************************************\\n     * Initialization Config Settings\\n     *****************************************************************************/\\n    //mint rate bucket\\n    struct MintRateRangeConfig {\\n        uint16 minMMVolume;\\n        uint16 maxMMVolume;\\n        uint rate;\\n    }\\n\\n    //fee token and its associated chainlink feed\\n    struct FeeTokenConfig {\\n        address[] feeTokens;\\n        address[] priceFeeds;\\n    }\\n\\n    //initialize config to intialize storage\\n    struct VaultConfig {\\n\\n        //the address of the wrapped native token\\n        address wrappedNativeToken;\\n\\n        //address of the multisig that will administer this vault\\n        address adminMultiSig;\\n\\n        //starting volume needed to mint a single DXBL token. This increases\\n        //as we get closer to reaching the daily goal\\n        uint baseMintThreshold;\\n\\n        //initial rate ranges to apply\\n        MintRateRangeConfig[] rateRanges;\\n\\n        //set of fee token/price feed pairs to initialize with\\n        FeeTokenConfig feeTokenConfig;\\n    }\\n\\n    /****************************************************************************\\n     * Stored Settings\\n     *****************************************************************************/\\n    //stored mint rate range\\n    struct MintRateRange {\\n        uint16 minMMVolume;\\n        uint16 maxMMVolume;\\n        uint rate;\\n        uint index;\\n    }\\n\\n    //price feed for a fee token\\n    struct PriceFeed {\\n        IPriceFeed feed;\\n        uint8 decimals;\\n    }\\n\\n    /*****************************************************************************************\\n     * STORAGE\\n    ******************************************************************************************/\\n    \\n    \\n    struct VaultData {\\n        //whether the vault is paused\\n        bool paused;\\n\\n        //admin multi sig\\n        address adminMultiSig;\\n\\n        //token address\\n        IDXBL dxbl;\\n\\n        //dexible settlement contract that is allowed to call the vault\\n        address dexible;\\n\\n        //wrapped native asset address for gas computation\\n        address wrappedNativeToken;\\n\\n        //time before migration allowed\\n        uint32 timelockSeconds;\\n\\n        //base volume needed to mint a single DXBL token. This increases\\n        //as we get closer to reaching the daily goal\\n        uint baseMintThreshold;\\n\\n        //current daily volume adjusted each hour\\n        uint currentVolume;\\n\\n        //to compute what hourly slots to deduct from 24hr window\\n        uint lastTradeTimestamp;\\n\\n        //can migrate the contract to a new vault after this time\\n        uint migrateAfterTime;\\n\\n        //all known fee tokens. Some may be inactive\\n        IERC20[] feeTokens;\\n\\n        //the current volume range we're operating in for mint rate\\n        MintRateRange currentMintRate;\\n\\n        //The ranges of 24hr volume and their percentage-per-MM increase to \\n        //mint a single token\\n        MintRateRange[] mintRateRanges;\\n\\n        //hourly volume totals to adjust current volume every 24 hr slot\\n        uint[24] hourlyVolume;\\n\\n        //fee token decimals\\n        mapping(address => uint8) tokenDecimals;\\n\\n        //all allowed fee tokens mapped to their price feed address\\n        mapping(address => PriceFeed) allowedFeeTokens;\\n    }\\n\\n    /**\\n     * If a migration occurs from the V1 vault to a new vault, this structure is forwarded\\n     * after all fee token balances are transferred. It is expected that the new vault will have\\n     * its fee token, minting rates, and starting mint rates mapped out as part of its deployment.\\n     * The migration is intended to get the new vault into a state where it knows the last 24hrs\\n     * of volume and can pick up where this vault leaves off but with new settings and capabilities.\\n     */\\n    struct VaultMigrationV1 {\\n        //current daily volume adjusted each hour\\n        uint currentVolume;\\n\\n        //to compute what hourly slots to deduct from 24hr window\\n        uint lastTradeTimestamp;\\n\\n        //hourly volume totals to adjust in new contract\\n        uint[24] hourlyVolume;\\n\\n        //the current volume range we're operating in for mint rate\\n        MintRateRange currentMintRate;\\n    }\\n\\n    function load() internal pure returns (VaultData storage ds) {\\n        assembly { ds.slot := VAULT_STORAGE_KEY }\\n    }\\n}\",\"keccak256\":\"0xe658404b7cd8ed0887d839acedf14011c1478a85e79c28a7d571f87f9e30784b\",\"license\":\"Unlicense\"},\"contracts/vault/baseContracts/ComputationalView.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\nimport \\\"../VaultStorage.sol\\\";\\nimport \\\"../IComputationalView.sol\\\";\\nimport \\\"../../common/LibConstants.sol\\\";\\n\\ncontract ComputationalView is IComputationalView {\\n\\n    function convertGasToFeeToken(address feeToken, uint gasCost) public view returns (uint){\\n        VaultStorage.VaultData storage rs = VaultStorage.load();\\n\\n        if(feeToken == rs.wrappedNativeToken) {\\n            //already in native units\\n            return gasCost;\\n        }\\n        uint np = _getPrice(rs.allowedFeeTokens[rs.wrappedNativeToken]);\\n        uint ftp = _getPrice(rs.allowedFeeTokens[feeToken]);\\n        uint ftpNative = (np*LibConstants.PRICE_PRECISION)/ftp;\\n        uint ftpUnits = (ftpNative * gasCost) / LibConstants.PRICE_PRECISION;\\n        return (ftpUnits * (10**rs.tokenDecimals[feeToken])) / 1e18; //native is always 18decs\\n    }\\n\\n    function estimateRedemption(address rewardToken, uint dxblAmount) public view returns(uint){\\n        VaultStorage.VaultData storage rs =VaultStorage.load();\\n        uint nav = currentNavUSD();\\n         //convert nav to price-precision units\\n        nav = (nav * LibConstants.PRICE_PRECISION) / LibConstants.USD_PRECISION;\\n        \\n        //we need to know the value of each token in rewardToken units\\n        //start by getting the USD price of reward token\\n        uint ftUSD = feeTokenPriceUSD(rewardToken);\\n\\n        uint8 ftDecs = rs.tokenDecimals[rewardToken];\\n\\n        //Divide nav of each token by the price of each reward token expanding \\n        //precision to include the fee-token decimals\\n        uint ftUnitPrice = (nav*(10**ftDecs))/ftUSD;\\n\\n        //compute how much rewardToken to withdraw based on unit price of each DXBL\\n        //in fee-token units. Have to remove the dexible token precision (18)\\n        return (dxblAmount * ftUnitPrice)/1e18;\\n    }\\n\\n    function feeTokenPriceUSD(address feeToken) public view returns (uint){\\n        VaultStorage.VaultData storage rs = VaultStorage.load();\\n        VaultStorage.PriceFeed storage pf = rs.allowedFeeTokens[feeToken];\\n        require(address(pf.feed) != address(0), \\\"Unsupported fee token\\\");\\n        return _getPrice(pf);\\n    }\\n\\n    function computeVolumeUSD(address feeToken, uint amount) public view returns(uint volumeUSD) {\\n        VaultStorage.VaultData storage fs = VaultStorage.load();\\n        VaultStorage.PriceFeed storage pf = fs.allowedFeeTokens[feeToken];\\n\\n        //price is in USD with 30decimal precision\\n        uint ftp = _getPrice(pf);\\n\\n        (uint v,) = _toUSD(fs, IERC20(feeToken), ftp, amount);\\n        volumeUSD = v;\\n    }\\n\\n    function aumUSD() public view returns(uint usd){\\n        VaultStorage.VaultData storage fs = VaultStorage.load();\\n\\n        //for each fee token allowed in the vault\\n        //move to memory so we're not accessing storage in loop\\n        IERC20[] memory feeTokens = fs.feeTokens;\\n        for(uint i=0;i<feeTokens.length;++i) {\\n            IERC20 ft = IERC20(feeTokens[i]);\\n            VaultStorage.PriceFeed storage pf = fs.allowedFeeTokens[address(ft)];\\n            \\n            //make sure fee token still active\\n            //get the price of the asset\\n            uint price = _getPrice(pf);\\n            //use it to compute USD value\\n            (uint _usd,) = _toUSD(fs, ft, price, 0);\\n            usd += _usd;\\n        }\\n    }\\n\\n    function currentNavUSD() public view returns(uint nav){\\n        //console.log(\\\"--------------- START COMPUTE NAV ---------------------\\\");\\n        VaultStorage.VaultData storage rs = VaultStorage.load();\\n\\n        //get the total supply of dxbl tokens\\n        uint supply = rs.dxbl.totalSupply();\\n\\n        //get the total USD under management by this vault\\n        uint aum = aumUSD();\\n\\n        //if either is 0, the nav is 0\\n        if(supply == 0 || aum == 0) {\\n            return 0;\\n        }\\n         \\n        //supply is 18decs while aum and nav are expressed in USD units\\n        nav = (aum*1e18) / supply;\\n      //  console.log(\\\"--------------- END COMPUTE NAV ---------------------\\\");\\n    }\\n\\n    function assets() public view returns (IComputationalView.AssetInfo[] memory tokens){\\n        /**\\n         * RISK: Must limit the fee token count to avoid miner not allowing call due to high\\n         * gas usage\\n         */\\n        VaultStorage.VaultData storage fs = VaultStorage.load();\\n\\n        //create in-memory structure only for active fee tokens\\n        tokens = new IComputationalView.AssetInfo[](fs.feeTokens.length);\\n\\n        //count offset of return tokens\\n        uint cnt = 0;\\n        \\n        //copy fee tokens in memory to we're not accessing storage in loop\\n        IERC20[] memory feeTokens = fs.feeTokens;\\n        for(uint i=0;i<feeTokens.length;++i) {\\n            IERC20 ft = feeTokens[i];\\n            VaultStorage.PriceFeed storage pf = fs.allowedFeeTokens[address(ft)];\\n\\n            //lookup USD price of asset in 30-dec units\\n            uint price = _getPrice(pf);\\n\\n            //convert to total usd-precision USD value\\n            (uint usd, uint bal) = _toUSD(fs, ft, price, 0);\\n\\n            tokens[cnt] = IComputationalView.AssetInfo({\\n                token: address(ft),\\n                balance: bal,\\n                usdValue: usd,\\n                usdPrice: (price*LibConstants.USD_PRECISION) / LibConstants.PRICE_PRECISION\\n            });\\n            ++cnt;\\n        }\\n    }\\n\\n    function currentMintRateUSD() public view returns (uint rate){\\n        /**\\n        * formula for mint rate:\\n        * startingRate+(startingRate*(ratePerMM*MM_vol))\\n        */\\n        VaultStorage.VaultData storage rs = VaultStorage.load();\\n\\n        uint16 normalizedMMInVolume = uint16(rs.currentVolume / LibConstants.MM_VOLUME);\\n\\n        //mint rate is a bucket with min/max volume thresholds and establishes how many \\n        //percentage points per million to apply to the starting mint rate \\n        uint percIncrease = rs.currentMintRate.rate * normalizedMMInVolume;\\n\\n        //mint rate percentage is expressed in 18-dec units so have to divide that out before adding to base\\n        rate = rs.baseMintThreshold + ((rs.baseMintThreshold * percIncrease)/1e18);\\n    }\\n\\n\\n    function _getPrice(VaultStorage.PriceFeed storage pf) internal view returns (uint) {\\n        //get latest price\\n        (   ,\\n            int256 answer,\\n            ,\\n            uint256 updatedAt,\\n        ) = pf.feed.latestRoundData();\\n\\n        //make sure price valid\\n        require(answer > 0, \\\"No price data available\\\");\\n\\n        //10min buffer around 24hr window for chainlink feed to update prices\\n        uint stale = block.timestamp - LibConstants.DAY - 600;\\n        require(updatedAt > stale, \\\"Stale price data\\\");\\n        return (uint256(answer) * LibConstants.PRICE_PRECISION) / (10**pf.decimals);\\n    }\\n\\n    /**\\n     * Convert an assets total balance to USD\\n     */\\n    function _toUSD(VaultStorage.VaultData storage fs, IERC20 token, uint price, uint amt) internal view returns(uint usd, uint bal) {\\n        bal = amt;\\n        if(bal == 0) {\\n            bal = token.balanceOf(address(this));\\n        }\\n        \\n        //compute usd in raw form (fee-token units + price-precision units) but account for\\n        //USD precision\\n        usd = (bal * price)*LibConstants.USD_PRECISION;\\n\\n        //then divide out the fee token and price-precision units\\n        usd /= (10**fs.tokenDecimals[address(token)]*LibConstants.PRICE_PRECISION);\\n        \\n    }\\n}\",\"keccak256\":\"0x666d8a00f6a0b345b2b32a58cf812dbae97f82fb681df3a48a40ed3ddb41094f\",\"license\":\"Unlicense\"},\"contracts/vault/baseContracts/RewardHandler.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\nimport \\\"../VaultStorage.sol\\\";\\nimport \\\"../IComputationalView.sol\\\";\\nimport \\\"../../common/LibConstants.sol\\\";\\nimport \\\"./ComputationalView.sol\\\";\\nimport \\\"../IRewardHandler.sol\\\";\\n\\nabstract contract RewardHandler is IRewardHandler {\\n\\n    modifier onlyDexible() {\\n        VaultStorage.VaultData storage vs = VaultStorage.load();\\n        require(msg.sender == vs.dexible, \\\"Unauthorized\\\");\\n        _;\\n    }\\n\\n    /**\\n     * Modification functions\\n     */\\n    function rewardTrader(address trader, address feeToken, uint amount) external override onlyDexible {\\n        VaultStorage.VaultData storage rs = VaultStorage.load();\\n        uint volumeUSD = IComputationalView(address(this)).computeVolumeUSD(feeToken, amount);\\n\\n        //determine the mint rate\\n        uint rate = IComputationalView(address(this)).currentMintRateUSD();\\n\\n        //make the volume adjustment to the pool\\n        _adjustVolume(volumeUSD);\\n\\n        //get the number of DXBL per $1 of volume\\n        uint tokens = (volumeUSD*1e18) / rate;\\n\\n        //we are minter on token, so request to mint tokens\\n        rs.dxbl.mint(trader, tokens);\\n    }\\n\\n\\n    function _adjustVolume(uint volumeUSD) internal {\\n        VaultStorage.VaultData storage rs = VaultStorage.load();\\n\\n        //get the current hour\\n        uint lastTrade = rs.lastTradeTimestamp;\\n\\n        //record when we last adjusted volume\\n        rs.lastTradeTimestamp = block.timestamp;\\n        uint newVolume = volumeUSD;\\n        if(lastTrade > 0 && lastTrade <= (block.timestamp - LibConstants.DAY)) {\\n            delete rs.hourlyVolume;\\n        } else {\\n            //otherwise, since we never rolled over 24hrs, just delete the volume\\n            //that accrued 24hrs ago\\n            uint hr = (block.timestamp % LibConstants.DAY) / LibConstants.HOUR;\\n            uint slot = 0;\\n            //remove guard for some efficiency gain\\n            unchecked{slot = (hr+1)%24; }\\n\\n            //get the volume bin 24hrs ago by wrapping around to next hour in 24hr period\\n            uint yesterdayTotal = rs.hourlyVolume[slot];\\n\\n            //if we get called multiple times in the block, the same hourly total\\n            //would be deducted multiple times. So we reset it here so that we're \\n            //not deducting it multiple times in the hour. Only the first deduction\\n            //will be applied and 0'd out.\\n            rs.hourlyVolume[slot] = 0;\\n\\n            //add new volume to current hour bin\\n            rs.hourlyVolume[hr] += volumeUSD;\\n\\n            //manipulate volume in memory not storage\\n            newVolume = rs.currentVolume + volumeUSD;\\n\\n            //Remove volume from 24hr's ago if there was anything\\n            if(yesterdayTotal > 0) {\\n                //note that because currentVolume includes yesterday's, then this subtraction \\n                //is safe.\\n                newVolume -= yesterdayTotal;\\n            } \\n        }\\n        rs.currentVolume = newVolume;\\n        _adjustMintRate(rs, uint16(newVolume / LibConstants.MM_VOLUME));\\n    }\\n\\n    /**\\n     * Make an adjustment to the mint rate if the 24hr volume falls into a new rate bucket\\n     */\\n    function _adjustMintRate(VaultStorage.VaultData storage rs, uint16 normalizedMMInVolume) internal {\\n        \\n        VaultStorage.MintRateRange memory mr = rs.currentMintRate;\\n        //if the current rate bucket's max is less than current normalized volume\\n        if(mr.maxMMVolume <= normalizedMMInVolume) {\\n            //we must have increased volume so we have to adjust the rate up\\n            _adjustMintRateUp(rs, normalizedMMInVolume);\\n            //otherwise if the current rate's min is more than the current volume\\n        } else if(mr.minMMVolume >= normalizedMMInVolume) {\\n            //it means we're trading less volume than the current rate, so we need\\n            //to adjust it down\\n            _adjustMintRateDown(rs, normalizedMMInVolume);\\n        } //else rate stays the same\\n    }\\n\\n    /**\\n     * Increase the minimum volume required to mint a single token\\n     */\\n    function _adjustMintRateUp(VaultStorage.VaultData storage rs, uint16 mm) internal {\\n        VaultStorage.MintRateRange memory mr = rs.currentMintRate;\\n        while(!_rateInRange(mr,mm)) {\\n            //move to the next higher rate if one is configured, otherwise stay where we are\\n            VaultStorage.MintRateRange storage next = rs.mintRateRanges[mr.index + 1];\\n            if(next.rate == 0) {\\n                //reached highest rate, that will be the capped rate \\n                break;\\n            }\\n            mr = next;\\n        }\\n\\n        //don't waste gas storing if not changed\\n        if(rs.currentMintRate.rate != mr.rate) {\\n            rs.currentMintRate = mr;\\n        }\\n        \\n    }\\n    \\n    /**\\n     * Decrease minimum volume required to mint a DXBL token\\n     */\\n    function _adjustMintRateDown(VaultStorage.VaultData storage rs, uint16 mm) internal {\\n        VaultStorage.MintRateRange memory mr = rs.currentMintRate;\\n        while(!_rateInRange(mr,mm)) {\\n            if(mr.index > 0) {\\n                //move to the next higher rate if one is configured, otherwise stay where we are\\n                VaultStorage.MintRateRange storage next = rs.mintRateRanges[mr.index - 1];\\n                mr = next;\\n            } else {\\n                //we go to the lowest rate then\\n                break;\\n            }\\n        }\\n        rs.currentMintRate = mr;\\n    }\\n\\n    //test to see if volume is range for a rate bucket\\n    function _rateInRange(VaultStorage.MintRateRange memory range, uint16 mm) internal pure returns (bool) {\\n        return range.minMMVolume <= mm && mm < range.maxMMVolume;\\n    }\\n    \\n}\",\"keccak256\":\"0x9fff5f43b31898ff7b94c0db40ea9e3d3d5259cc75e9fec6ffbbe918b7dbfcc4\",\"license\":\"Unlicense\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"rewardTrader(address,address,uint256)":{"notice":"Modification functions"}},"version":1}}},"contracts/vault/baseContracts/StorageView.sol":{"StorageView":{"abi":[{"inputs":[],"name":"adminMultiSig","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseMintThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"dailyVolumeUSD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"dexible","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"discountBps","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"dxbl","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"timelockSeconds","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"wrappedNativeToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b506102f9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100835760003560e01c806317fcb39b1461008857806345c6a874146100ad57806356168843146100b55780635c975abb146100cb5780636162cb91146100e357806365a1f3c3146100eb5780636c1f5633146101085780638213147014610110578063a74aa56614610118575b600080fd5b610090610120565b6040516001600160a01b0390911681526020015b60405180910390f35b61009061013c565b6100bd61015a565b6040519081526020016100a4565b6100d361016d565b60405190151581526020016100a4565b610090610180565b6100f361019c565b60405163ffffffff90911681526020016100a4565b6100f36101bc565b6100bd610243565b610090610256565b600061012a610272565b600301546001600160a01b0316919050565b6000610146610272565b5461010090046001600160a01b0316919050565b6000610164610272565b60040154905090565b6000610177610272565b5460ff16919050565b600061018a610272565b600101546001600160a01b0316919050565b60006101a6610272565b60030154600160a01b900463ffffffff16919050565b60006101c6610272565b60010160009054906101000a90046001600160a01b03166001600160a01b031663566826d16040518163ffffffff1660e01b8152600401602060405180830381865afa15801561021a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023e9190610296565b905090565b600061024d610272565b60050154905090565b6000610260610272565b600201546001600160a01b0316919050565b7fbfa76ec2967ed7f8d3d40cd552f1451ab03573b596bfce931a6a016f7733078c90565b6000602082840312156102a857600080fd5b815163ffffffff811681146102bc57600080fd5b939250505056fea2646970667358221220d9ae53243357a295490367d624e1c6841231e7b8e55dd6fe890239e4bc4701c564736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F9 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x83 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x17FCB39B EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x45C6A874 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x56168843 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x6162CB91 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x65A1F3C3 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x6C1F5633 EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x82131470 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0xA74AA566 EQ PUSH2 0x118 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x90 PUSH2 0x120 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH2 0x13C JUMP JUMPDEST PUSH2 0xBD PUSH2 0x15A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA4 JUMP JUMPDEST PUSH2 0xD3 PUSH2 0x16D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA4 JUMP JUMPDEST PUSH2 0x90 PUSH2 0x180 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA4 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x1BC JUMP JUMPDEST PUSH2 0xBD PUSH2 0x243 JUMP JUMPDEST PUSH2 0x90 PUSH2 0x256 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A PUSH2 0x272 JUMP JUMPDEST PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x146 PUSH2 0x272 JUMP JUMPDEST SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x164 PUSH2 0x272 JUMP JUMPDEST PUSH1 0x4 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x177 PUSH2 0x272 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18A PUSH2 0x272 JUMP JUMPDEST PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A6 PUSH2 0x272 JUMP JUMPDEST PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C6 PUSH2 0x272 JUMP JUMPDEST PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x566826D1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x296 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24D PUSH2 0x272 JUMP JUMPDEST PUSH1 0x5 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x260 PUSH2 0x272 JUMP JUMPDEST PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xBFA76EC2967ED7F8D3D40CD552F1451AB03573B596BFCE931A6A016F7733078C SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 0xAE MSTORE8 0x24 CALLER JUMPI LOG2 SWAP6 0x49 SUB PUSH8 0xD624E1C6841231E7 0xB8 0xE5 0x5D 0xD6 INVALID DUP10 MUL CODECOPY 0xE4 0xBC SELFBALANCE ADD 0xC5 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"124:1106:21:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@adminMultiSig_3229":{"entryPoint":316,"id":3229,"parameterSlots":0,"returnSlots":1},"@baseMintThreshold_3287":{"entryPoint":346,"id":3287,"parameterSlots":0,"returnSlots":1},"@dailyVolumeUSD_3207":{"entryPoint":579,"id":3207,"parameterSlots":0,"returnSlots":1},"@dexible_3254":{"entryPoint":598,"id":3254,"parameterSlots":0,"returnSlots":1},"@discountBps_3196":{"entryPoint":444,"id":3196,"parameterSlots":0,"returnSlots":1},"@dxbl_3243":{"entryPoint":384,"id":3243,"parameterSlots":0,"returnSlots":1},"@load_2106":{"entryPoint":626,"id":2106,"parameterSlots":0,"returnSlots":1},"@paused_3218":{"entryPoint":365,"id":3218,"parameterSlots":0,"returnSlots":1},"@timelockSeconds_3276":{"entryPoint":412,"id":3276,"parameterSlots":0,"returnSlots":1},"@wrappedNativeToken_3265":{"entryPoint":288,"id":3265,"parameterSlots":0,"returnSlots":1},"abi_decode_tuple_t_uint32_fromMemory":{"entryPoint":662,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1075:23","statements":[{"nodeType":"YulBlock","src":"6:3:23","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:102:23","statements":[{"nodeType":"YulAssignment","src":"125:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:23"},"nodeType":"YulFunctionCall","src":"133:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"182:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"198:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"203:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"194:3:23"},"nodeType":"YulFunctionCall","src":"194:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"207:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"190:3:23"},"nodeType":"YulFunctionCall","src":"190:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"178:3:23"},"nodeType":"YulFunctionCall","src":"178:32:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:23"},"nodeType":"YulFunctionCall","src":"160:51:23"},"nodeType":"YulExpressionStatement","src":"160:51:23"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:23","type":""}],"src":"14:203:23"},{"body":{"nodeType":"YulBlock","src":"323:76:23","statements":[{"nodeType":"YulAssignment","src":"333:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"345:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"356:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"341:3:23"},"nodeType":"YulFunctionCall","src":"341:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"333:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"375:9:23"},{"name":"value0","nodeType":"YulIdentifier","src":"386:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"368:6:23"},"nodeType":"YulFunctionCall","src":"368:25:23"},"nodeType":"YulExpressionStatement","src":"368:25:23"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"292:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"303:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"314:4:23","type":""}],"src":"222:177:23"},{"body":{"nodeType":"YulBlock","src":"499:92:23","statements":[{"nodeType":"YulAssignment","src":"509:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"521:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"532:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"517:3:23"},"nodeType":"YulFunctionCall","src":"517:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"509:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"551:9:23"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"576:6:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"569:6:23"},"nodeType":"YulFunctionCall","src":"569:14:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"562:6:23"},"nodeType":"YulFunctionCall","src":"562:22:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"544:6:23"},"nodeType":"YulFunctionCall","src":"544:41:23"},"nodeType":"YulExpressionStatement","src":"544:41:23"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"468:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"479:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"490:4:23","type":""}],"src":"404:187:23"},{"body":{"nodeType":"YulBlock","src":"695:93:23","statements":[{"nodeType":"YulAssignment","src":"705:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"717:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"728:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"713:3:23"},"nodeType":"YulFunctionCall","src":"713:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"705:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"747:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"762:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"770:10:23","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"758:3:23"},"nodeType":"YulFunctionCall","src":"758:23:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"740:6:23"},"nodeType":"YulFunctionCall","src":"740:42:23"},"nodeType":"YulExpressionStatement","src":"740:42:23"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"664:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"675:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"686:4:23","type":""}],"src":"596:192:23"},{"body":{"nodeType":"YulBlock","src":"873:200:23","statements":[{"body":{"nodeType":"YulBlock","src":"919:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"928:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"931:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"921:6:23"},"nodeType":"YulFunctionCall","src":"921:12:23"},"nodeType":"YulExpressionStatement","src":"921:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"894:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"903:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"890:3:23"},"nodeType":"YulFunctionCall","src":"890:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"915:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"886:3:23"},"nodeType":"YulFunctionCall","src":"886:32:23"},"nodeType":"YulIf","src":"883:52:23"},{"nodeType":"YulVariableDeclaration","src":"944:29:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"963:9:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"957:5:23"},"nodeType":"YulFunctionCall","src":"957:16:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"948:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"1027:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1036:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1039:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1029:6:23"},"nodeType":"YulFunctionCall","src":"1029:12:23"},"nodeType":"YulExpressionStatement","src":"1029:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"995:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1006:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"1013:10:23","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1002:3:23"},"nodeType":"YulFunctionCall","src":"1002:22:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"992:2:23"},"nodeType":"YulFunctionCall","src":"992:33:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"985:6:23"},"nodeType":"YulFunctionCall","src":"985:41:23"},"nodeType":"YulIf","src":"982:61:23"},{"nodeType":"YulAssignment","src":"1052:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"1062:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1052:6:23"}]}]},"name":"abi_decode_tuple_t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"839:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"850:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"862:6:23","type":""}],"src":"793:280:23"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_decode_tuple_t_uint32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n}","id":23,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100835760003560e01c806317fcb39b1461008857806345c6a874146100ad57806356168843146100b55780635c975abb146100cb5780636162cb91146100e357806365a1f3c3146100eb5780636c1f5633146101085780638213147014610110578063a74aa56614610118575b600080fd5b610090610120565b6040516001600160a01b0390911681526020015b60405180910390f35b61009061013c565b6100bd61015a565b6040519081526020016100a4565b6100d361016d565b60405190151581526020016100a4565b610090610180565b6100f361019c565b60405163ffffffff90911681526020016100a4565b6100f36101bc565b6100bd610243565b610090610256565b600061012a610272565b600301546001600160a01b0316919050565b6000610146610272565b5461010090046001600160a01b0316919050565b6000610164610272565b60040154905090565b6000610177610272565b5460ff16919050565b600061018a610272565b600101546001600160a01b0316919050565b60006101a6610272565b60030154600160a01b900463ffffffff16919050565b60006101c6610272565b60010160009054906101000a90046001600160a01b03166001600160a01b031663566826d16040518163ffffffff1660e01b8152600401602060405180830381865afa15801561021a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023e9190610296565b905090565b600061024d610272565b60050154905090565b6000610260610272565b600201546001600160a01b0316919050565b7fbfa76ec2967ed7f8d3d40cd552f1451ab03573b596bfce931a6a016f7733078c90565b6000602082840312156102a857600080fd5b815163ffffffff811681146102bc57600080fd5b939250505056fea2646970667358221220d9ae53243357a295490367d624e1c6841231e7b8e55dd6fe890239e4bc4701c564736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x83 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x17FCB39B EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x45C6A874 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x56168843 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x6162CB91 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x65A1F3C3 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x6C1F5633 EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x82131470 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0xA74AA566 EQ PUSH2 0x118 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x90 PUSH2 0x120 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH2 0x13C JUMP JUMPDEST PUSH2 0xBD PUSH2 0x15A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA4 JUMP JUMPDEST PUSH2 0xD3 PUSH2 0x16D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA4 JUMP JUMPDEST PUSH2 0x90 PUSH2 0x180 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA4 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x1BC JUMP JUMPDEST PUSH2 0xBD PUSH2 0x243 JUMP JUMPDEST PUSH2 0x90 PUSH2 0x256 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A PUSH2 0x272 JUMP JUMPDEST PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x146 PUSH2 0x272 JUMP JUMPDEST SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x164 PUSH2 0x272 JUMP JUMPDEST PUSH1 0x4 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x177 PUSH2 0x272 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18A PUSH2 0x272 JUMP JUMPDEST PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A6 PUSH2 0x272 JUMP JUMPDEST PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C6 PUSH2 0x272 JUMP JUMPDEST PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x566826D1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x296 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24D PUSH2 0x272 JUMP JUMPDEST PUSH1 0x5 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x260 PUSH2 0x272 JUMP JUMPDEST PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xBFA76EC2967ED7F8D3D40CD552F1451AB03573B596BFCE931A6A016F7733078C SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 0xAE MSTORE8 0x24 CALLER JUMPI LOG2 SWAP6 0x49 SUB PUSH8 0xD624E1C6841231E7 0xB8 0xE5 0x5D 0xD6 INVALID DUP10 MUL CODECOPY 0xE4 0xBC SELFBALANCE ADD 0xC5 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"124:1106:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;856:124;;;:::i;:::-;;;-1:-1:-1;;;;;178:32:23;;;160:51;;148:2;133:18;856:124:21;;;;;;;;517:114;;;:::i;1109:119::-;;;:::i;:::-;;;368:25:23;;;356:2;341:18;1109:119:21;222:177:23;414:97:21;;;:::i;:::-;;;569:14:23;;562:22;544:41;;532:2;517:18;414:97:21;404:187:23;637:105:21;;;:::i;986:117::-;;;:::i;:::-;;;770:10:23;758:23;;;740:42;;728:2;713:18;986:117:21;596:192:23;168:123:21;;;:::i;297:111::-;;;:::i;748:102::-;;;:::i;856:124::-;909:7;935:19;:17;:19::i;:::-;:38;;;-1:-1:-1;;;;;935:38:21;;856:124;-1:-1:-1;856:124:21:o;517:114::-;565:7;591:19;:17;:19::i;:::-;:33;;;;-1:-1:-1;;;;;591:33:21;;;-1:-1:-1;517:114:21:o;1109:119::-;1161:4;1184:19;:17;:19::i;:::-;:37;;;1177:44;;1109:119;:::o;414:97::-;455:4;478:19;:17;:19::i;:::-;:26;;;;414:97;-1:-1:-1;414:97:21:o;637:105::-;676:7;710:19;:17;:19::i;:::-;:24;;;-1:-1:-1;;;;;710:24:21;;637:105;-1:-1:-1;637:105:21:o;986:117::-;1036:6;1061:19;:17;:19::i;:::-;:35;;;-1:-1:-1;;;1061:35:21;;;;;;-1:-1:-1;986:117:21:o;168:123::-;213:6;238:19;:17;:19::i;:::-;:24;;;;;;;;;;-1:-1:-1;;;;;238:24:21;-1:-1:-1;;;;;238:44:21;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;231:53;;168:123;:::o;297:111::-;345:4;368:19;:17;:19::i;:::-;:33;;;361:40;;297:111;:::o;748:102::-;790:7;816:19;:17;:19::i;:::-;:27;;;-1:-1:-1;;;;;816:27:21;;748:102;-1:-1:-1;748:102:21:o;4486:118:18:-;4579:17;;4486:118::o;793:280:23:-;862:6;915:2;903:9;894:7;890:23;886:32;883:52;;;931:1;928;921:12;883:52;963:9;957:16;1013:10;1006:5;1002:22;995:5;992:33;982:61;;1039:1;1036;1029:12;982:61;1062:5;793:280;-1:-1:-1;;;793:280:23:o"},"gasEstimates":{"creation":{"codeDepositCost":"152200","executionCost":"196","totalCost":"152396"},"external":{"adminMultiSig()":"2381","baseMintThreshold()":"2370","dailyVolumeUSD()":"2480","dexible()":"2530","discountBps()":"infinite","dxbl()":"2442","paused()":"2398","timelockSeconds()":"2468","wrappedNativeToken()":"2354"}},"methodIdentifiers":{"adminMultiSig()":"45c6a874","baseMintThreshold()":"56168843","dailyVolumeUSD()":"82131470","dexible()":"a74aa566","discountBps()":"6c1f5633","dxbl()":"6162cb91","paused()":"5c975abb","timelockSeconds()":"65a1f3c3","wrappedNativeToken()":"17fcb39b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"adminMultiSig\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseMintThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dailyVolumeUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dexible\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"discountBps\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dxbl\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelockSeconds\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrappedNativeToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"discountBps()\":{\"notice\":\"Storage variable view functions\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vault/baseContracts/StorageView.sol\":\"StorageView\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"contracts/token/IDXBL.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\ninterface IDXBL is IERC20, IERC20Metadata {\\n    struct FeeRequest {\\n        bool referred;\\n        address trader;\\n        uint amt;\\n        uint dxblBalance;\\n        uint16 stdBpsRate;\\n        uint16 minBpsRate;\\n    }\\n\\n    function minter() external view returns (address);\\n    function discountPerTokenBps() external view returns(uint32);\\n\\n    function mint(address acct, uint amt) external;\\n    function burn(address holder, uint amt) external;\\n    function setDiscountRate(uint32 discount) external;\\n    function setNewMinter(address minter) external;\\n    function computeDiscountedFee(FeeRequest calldata request) external view returns(uint);\\n}\",\"keccak256\":\"0x5c7e94839ff1ff8d19ed800cbb7a9af9ea24d178ec1cca6c84c0b914636494ef\",\"license\":\"Unlicense\"},\"contracts/vault/IPriceFeed.sol\":{\"content\":\"\\n//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\n/**\\n * Interface for Chainlink oracle feeds\\n */\\ninterface IPriceFeed {\\n    function latestRoundData() external view\\n    returns (\\n        uint80 roundId,\\n        int256 answer,\\n        uint256 startedAt,\\n        uint256 updatedAt,\\n        uint80 answeredInRound\\n    );\\n    function decimals() external view returns (uint8);\\n}\",\"keccak256\":\"0x151d6516db0e8639f2c0aae6a0d3dd7fc9befc2d179ac8b08ea8830253cbb544\",\"license\":\"Unlicense\"},\"contracts/vault/IStorageView.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\ninterface IStorageView {\\n\\n    /**\\n     * Storage variable view functions\\n     */\\n    function discountBps() external view returns(uint32);\\n    function dailyVolumeUSD() external view returns(uint);\\n    function paused() external view returns (bool);\\n    function adminMultiSig() external view returns (address);\\n    function dxbl() external view returns (address);\\n    function dexible() external view returns (address);\\n    function wrappedNativeToken() external view returns (address);\\n    function timelockSeconds() external view returns (uint32);\\n    function baseMintThreshold() external view returns (uint);\\n}\",\"keccak256\":\"0xfd90e37d4ece93032adbdfc402b663b61930a293c576295c792c16bea65c9195\",\"license\":\"Unlicense\"},\"contracts/vault/VaultStorage.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\nimport \\\"../token/IDXBL.sol\\\";\\nimport \\\"./IPriceFeed.sol\\\";\\n\\nlibrary VaultStorage {\\n\\n    bytes32 constant VAULT_STORAGE_KEY = 0xbfa76ec2967ed7f8d3d40cd552f1451ab03573b596bfce931a6a016f7733078c;\\n\\n    /****************************************************************************\\n     * Initialization Config Settings\\n     *****************************************************************************/\\n    //mint rate bucket\\n    struct MintRateRangeConfig {\\n        uint16 minMMVolume;\\n        uint16 maxMMVolume;\\n        uint rate;\\n    }\\n\\n    //fee token and its associated chainlink feed\\n    struct FeeTokenConfig {\\n        address[] feeTokens;\\n        address[] priceFeeds;\\n    }\\n\\n    //initialize config to intialize storage\\n    struct VaultConfig {\\n\\n        //the address of the wrapped native token\\n        address wrappedNativeToken;\\n\\n        //address of the multisig that will administer this vault\\n        address adminMultiSig;\\n\\n        //starting volume needed to mint a single DXBL token. This increases\\n        //as we get closer to reaching the daily goal\\n        uint baseMintThreshold;\\n\\n        //initial rate ranges to apply\\n        MintRateRangeConfig[] rateRanges;\\n\\n        //set of fee token/price feed pairs to initialize with\\n        FeeTokenConfig feeTokenConfig;\\n    }\\n\\n    /****************************************************************************\\n     * Stored Settings\\n     *****************************************************************************/\\n    //stored mint rate range\\n    struct MintRateRange {\\n        uint16 minMMVolume;\\n        uint16 maxMMVolume;\\n        uint rate;\\n        uint index;\\n    }\\n\\n    //price feed for a fee token\\n    struct PriceFeed {\\n        IPriceFeed feed;\\n        uint8 decimals;\\n    }\\n\\n    /*****************************************************************************************\\n     * STORAGE\\n    ******************************************************************************************/\\n    \\n    \\n    struct VaultData {\\n        //whether the vault is paused\\n        bool paused;\\n\\n        //admin multi sig\\n        address adminMultiSig;\\n\\n        //token address\\n        IDXBL dxbl;\\n\\n        //dexible settlement contract that is allowed to call the vault\\n        address dexible;\\n\\n        //wrapped native asset address for gas computation\\n        address wrappedNativeToken;\\n\\n        //time before migration allowed\\n        uint32 timelockSeconds;\\n\\n        //base volume needed to mint a single DXBL token. This increases\\n        //as we get closer to reaching the daily goal\\n        uint baseMintThreshold;\\n\\n        //current daily volume adjusted each hour\\n        uint currentVolume;\\n\\n        //to compute what hourly slots to deduct from 24hr window\\n        uint lastTradeTimestamp;\\n\\n        //can migrate the contract to a new vault after this time\\n        uint migrateAfterTime;\\n\\n        //all known fee tokens. Some may be inactive\\n        IERC20[] feeTokens;\\n\\n        //the current volume range we're operating in for mint rate\\n        MintRateRange currentMintRate;\\n\\n        //The ranges of 24hr volume and their percentage-per-MM increase to \\n        //mint a single token\\n        MintRateRange[] mintRateRanges;\\n\\n        //hourly volume totals to adjust current volume every 24 hr slot\\n        uint[24] hourlyVolume;\\n\\n        //fee token decimals\\n        mapping(address => uint8) tokenDecimals;\\n\\n        //all allowed fee tokens mapped to their price feed address\\n        mapping(address => PriceFeed) allowedFeeTokens;\\n    }\\n\\n    /**\\n     * If a migration occurs from the V1 vault to a new vault, this structure is forwarded\\n     * after all fee token balances are transferred. It is expected that the new vault will have\\n     * its fee token, minting rates, and starting mint rates mapped out as part of its deployment.\\n     * The migration is intended to get the new vault into a state where it knows the last 24hrs\\n     * of volume and can pick up where this vault leaves off but with new settings and capabilities.\\n     */\\n    struct VaultMigrationV1 {\\n        //current daily volume adjusted each hour\\n        uint currentVolume;\\n\\n        //to compute what hourly slots to deduct from 24hr window\\n        uint lastTradeTimestamp;\\n\\n        //hourly volume totals to adjust in new contract\\n        uint[24] hourlyVolume;\\n\\n        //the current volume range we're operating in for mint rate\\n        MintRateRange currentMintRate;\\n    }\\n\\n    function load() internal pure returns (VaultData storage ds) {\\n        assembly { ds.slot := VAULT_STORAGE_KEY }\\n    }\\n}\",\"keccak256\":\"0xe658404b7cd8ed0887d839acedf14011c1478a85e79c28a7d571f87f9e30784b\",\"license\":\"Unlicense\"},\"contracts/vault/baseContracts/StorageView.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\nimport \\\"../VaultStorage.sol\\\";\\nimport \\\"../IStorageView.sol\\\";\\n\\ncontract StorageView is IStorageView {\\n\\n    function discountBps() external view returns(uint32) {\\n        return VaultStorage.load().dxbl.discountPerTokenBps();\\n    }\\n\\n    function dailyVolumeUSD() external view returns(uint) {\\n        return VaultStorage.load().currentVolume;\\n    }\\n\\n    function paused() external view returns (bool) {\\n        return VaultStorage.load().paused;\\n    }\\n\\n    function adminMultiSig() external view returns (address) {\\n        return VaultStorage.load().adminMultiSig;\\n    }\\n\\n    function dxbl() external view returns (address) {\\n        return address(VaultStorage.load().dxbl);\\n    }\\n\\n    function dexible() external view returns (address) {\\n        return VaultStorage.load().dexible;\\n    }\\n\\n    function wrappedNativeToken() external view returns (address) {\\n        return VaultStorage.load().wrappedNativeToken;\\n    }\\n\\n    function timelockSeconds() external view returns (uint32) {\\n        return VaultStorage.load().timelockSeconds;\\n    }\\n\\n    function baseMintThreshold() external view returns (uint) {\\n        return VaultStorage.load().baseMintThreshold;\\n    }\\n}\",\"keccak256\":\"0x4dde533035c7984af397a11b233bfe59eab2ee3e4ef76b3605ffdfc804dce438\",\"license\":\"Unlicense\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"discountBps()":{"notice":"Storage variable view functions"}},"version":1}}},"contracts/vault/baseContracts/V1Migration.sol":{"V1Migration":{"abi":[{"inputs":[{"internalType":"contract V1MigrationTarget","name":"target","type":"address"}],"name":"migrateV1","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"migrateV1(address)":"c76380b7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract V1MigrationTarget\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"migrateV1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"migrateV1(address)\":{\"notice\":\"Migrate the state of the vault to a new version. This will transfer all current state and transfer fee token balances as well. Note that \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vault/baseContracts/V1Migration.sol\":\"V1Migration\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"contracts/token/IDXBL.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\ninterface IDXBL is IERC20, IERC20Metadata {\\n    struct FeeRequest {\\n        bool referred;\\n        address trader;\\n        uint amt;\\n        uint dxblBalance;\\n        uint16 stdBpsRate;\\n        uint16 minBpsRate;\\n    }\\n\\n    function minter() external view returns (address);\\n    function discountPerTokenBps() external view returns(uint32);\\n\\n    function mint(address acct, uint amt) external;\\n    function burn(address holder, uint amt) external;\\n    function setDiscountRate(uint32 discount) external;\\n    function setNewMinter(address minter) external;\\n    function computeDiscountedFee(FeeRequest calldata request) external view returns(uint);\\n}\",\"keccak256\":\"0x5c7e94839ff1ff8d19ed800cbb7a9af9ea24d178ec1cca6c84c0b914636494ef\",\"license\":\"Unlicense\"},\"contracts/vault/IPriceFeed.sol\":{\"content\":\"\\n//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\n/**\\n * Interface for Chainlink oracle feeds\\n */\\ninterface IPriceFeed {\\n    function latestRoundData() external view\\n    returns (\\n        uint80 roundId,\\n        int256 answer,\\n        uint256 startedAt,\\n        uint256 updatedAt,\\n        uint80 answeredInRound\\n    );\\n    function decimals() external view returns (uint8);\\n}\",\"keccak256\":\"0x151d6516db0e8639f2c0aae6a0d3dd7fc9befc2d179ac8b08ea8830253cbb544\",\"license\":\"Unlicense\"},\"contracts/vault/V1Migrateable.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\nimport \\\"./VaultStorage.sol\\\";\\n\\ninterface V1MigrationTarget {\\n    /**\\n     * Call from current vault to migrate the state of the old vault to the new one. \\n     */\\n    function migrationFromV1(VaultStorage.VaultMigrationV1 memory data) external;\\n}\\n\\ninterface V1Migrateable {\\n\\n    /**\\n     * Migrate the vault to a new vault address that implements the target interface\\n     * to receive this vault's state. This will transfer all fee token assets to the \\n     * new vault.\\n     */\\n    function migrateV1(V1MigrationTarget newVault) external;\\n    \\n}\",\"keccak256\":\"0x60a586c3996864d9ae13ddd63413b7efad36431f586487abfdf2f610c1fb62bb\",\"license\":\"Unlicense\"},\"contracts/vault/VaultStorage.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\nimport \\\"../token/IDXBL.sol\\\";\\nimport \\\"./IPriceFeed.sol\\\";\\n\\nlibrary VaultStorage {\\n\\n    bytes32 constant VAULT_STORAGE_KEY = 0xbfa76ec2967ed7f8d3d40cd552f1451ab03573b596bfce931a6a016f7733078c;\\n\\n    /****************************************************************************\\n     * Initialization Config Settings\\n     *****************************************************************************/\\n    //mint rate bucket\\n    struct MintRateRangeConfig {\\n        uint16 minMMVolume;\\n        uint16 maxMMVolume;\\n        uint rate;\\n    }\\n\\n    //fee token and its associated chainlink feed\\n    struct FeeTokenConfig {\\n        address[] feeTokens;\\n        address[] priceFeeds;\\n    }\\n\\n    //initialize config to intialize storage\\n    struct VaultConfig {\\n\\n        //the address of the wrapped native token\\n        address wrappedNativeToken;\\n\\n        //address of the multisig that will administer this vault\\n        address adminMultiSig;\\n\\n        //starting volume needed to mint a single DXBL token. This increases\\n        //as we get closer to reaching the daily goal\\n        uint baseMintThreshold;\\n\\n        //initial rate ranges to apply\\n        MintRateRangeConfig[] rateRanges;\\n\\n        //set of fee token/price feed pairs to initialize with\\n        FeeTokenConfig feeTokenConfig;\\n    }\\n\\n    /****************************************************************************\\n     * Stored Settings\\n     *****************************************************************************/\\n    //stored mint rate range\\n    struct MintRateRange {\\n        uint16 minMMVolume;\\n        uint16 maxMMVolume;\\n        uint rate;\\n        uint index;\\n    }\\n\\n    //price feed for a fee token\\n    struct PriceFeed {\\n        IPriceFeed feed;\\n        uint8 decimals;\\n    }\\n\\n    /*****************************************************************************************\\n     * STORAGE\\n    ******************************************************************************************/\\n    \\n    \\n    struct VaultData {\\n        //whether the vault is paused\\n        bool paused;\\n\\n        //admin multi sig\\n        address adminMultiSig;\\n\\n        //token address\\n        IDXBL dxbl;\\n\\n        //dexible settlement contract that is allowed to call the vault\\n        address dexible;\\n\\n        //wrapped native asset address for gas computation\\n        address wrappedNativeToken;\\n\\n        //time before migration allowed\\n        uint32 timelockSeconds;\\n\\n        //base volume needed to mint a single DXBL token. This increases\\n        //as we get closer to reaching the daily goal\\n        uint baseMintThreshold;\\n\\n        //current daily volume adjusted each hour\\n        uint currentVolume;\\n\\n        //to compute what hourly slots to deduct from 24hr window\\n        uint lastTradeTimestamp;\\n\\n        //can migrate the contract to a new vault after this time\\n        uint migrateAfterTime;\\n\\n        //all known fee tokens. Some may be inactive\\n        IERC20[] feeTokens;\\n\\n        //the current volume range we're operating in for mint rate\\n        MintRateRange currentMintRate;\\n\\n        //The ranges of 24hr volume and their percentage-per-MM increase to \\n        //mint a single token\\n        MintRateRange[] mintRateRanges;\\n\\n        //hourly volume totals to adjust current volume every 24 hr slot\\n        uint[24] hourlyVolume;\\n\\n        //fee token decimals\\n        mapping(address => uint8) tokenDecimals;\\n\\n        //all allowed fee tokens mapped to their price feed address\\n        mapping(address => PriceFeed) allowedFeeTokens;\\n    }\\n\\n    /**\\n     * If a migration occurs from the V1 vault to a new vault, this structure is forwarded\\n     * after all fee token balances are transferred. It is expected that the new vault will have\\n     * its fee token, minting rates, and starting mint rates mapped out as part of its deployment.\\n     * The migration is intended to get the new vault into a state where it knows the last 24hrs\\n     * of volume and can pick up where this vault leaves off but with new settings and capabilities.\\n     */\\n    struct VaultMigrationV1 {\\n        //current daily volume adjusted each hour\\n        uint currentVolume;\\n\\n        //to compute what hourly slots to deduct from 24hr window\\n        uint lastTradeTimestamp;\\n\\n        //hourly volume totals to adjust in new contract\\n        uint[24] hourlyVolume;\\n\\n        //the current volume range we're operating in for mint rate\\n        MintRateRange currentMintRate;\\n    }\\n\\n    function load() internal pure returns (VaultData storage ds) {\\n        assembly { ds.slot := VAULT_STORAGE_KEY }\\n    }\\n}\",\"keccak256\":\"0xe658404b7cd8ed0887d839acedf14011c1478a85e79c28a7d571f87f9e30784b\",\"license\":\"Unlicense\"},\"contracts/vault/baseContracts/V1Migration.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.17;\\n\\nimport \\\"../V1Migrateable.sol\\\";\\n\\nabstract contract V1Migration is V1Migrateable {\\n\\n    /**\\n     * Migrate the state of the vault to a new version. This will transfer all current state\\n     * and transfer fee token balances as well. Note that \\n     */\\n    function migrateV1(V1MigrationTarget target) external {\\n        \\n    }\\n}\",\"keccak256\":\"0x4e33783440b237b1650f12112f70b753d222412bc5ff9bd6f1a46f89eb614e96\",\"license\":\"Unlicense\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"migrateV1(address)":{"notice":"Migrate the state of the vault to a new version. This will transfer all current state and transfer fee token balances as well. Note that "}},"version":1}}}}}}